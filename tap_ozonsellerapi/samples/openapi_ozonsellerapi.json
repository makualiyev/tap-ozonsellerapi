{
    "openapi": "3.0.0",
    "info": {
      "title": "Документация Ozon Seller API",
      "version": 2.1,
      "x-logo": {
        "url": "https://cdn1.ozonusercontent.com/s3/redoc/ozon-seller-logo.svg",
        "backgroundColor": null,
        "altText": "Ozon logo"
      },
      "description": "По вопросам работы с Seller API, обращайтесь в поддержку через личный кабинет.\n\n> [Инструкции по работе с маркетплейсом](https://seller-edu.ozon.ru)\n\n> [Информационная платформа и сообщество разработчиков Ozon for Dev](https://dev.ozon.ru/)\n"
    },
    "servers": [
      {
        "url": "//api-seller.ozon.ru"
      }
    ],
    "x-tagGroups": [
      {
        "name": "Общее описание",
        "tags": [
          "Introduction",
          "Getting started",
          "Auth",
          "Environment",
          "Process",
          "Disable",
          "News"
        ]
      },
      {
        "name": "Методы Seller API",
        "tags": [
          "CategoryAPI",
          "ProductAPI",
          "Prices&StocksAPI",
          "Promos",
          "PricingStrategyAPI",
          "BrandAPI",
          "CertificationAPI",
          "WarehouseAPI",
          "PolygonAPI",
          "FBO",
          "FBS&rFBSMarks",
          "FBS",
          "ReturnsAPI",
          "CancellationAPI",
          "ChatAPI",
          "SupplierAPI",
          "ReportAPI",
          "AnalyticsAPI",
          "FinanceAPI",
          "SellerRating",
          "InvoiceAPI"
        ]
      },
      {
        "name": "Приложения",
        "tags": ["Errors"]
      },
      {
        "name": "Пуш-уведомления",
        "tags": [
          "push_intro",
          "push_start",
          "push_resending",
          "push_types",
          "service_response"
        ]
      }
    ],
    "tags": [
      {
        "name": "Introduction",
        "x-displayName": "Введение",
        "description": "## Что такое Ozon Seller API\n\nOzon Seller API — программный интерфейс для работы с маркетплейсом Ozon. Он даёт возможность обмениваться информацией между системой продавца и Ozon.\n\nМетоды Seller API позволяют изменять данные магазина, например, остатки товаров или их стоимость, и получать данные, \nтакие как информация о возвратах или список складов.\n\nРабота с API состоит из отправки запроса и получения ответа. Для этого можно использовать вкладку **Консоль**, которая находится сверху описания методов, [Postman](https://www.postman.com) или настроить интеграцию с системами учёта, например 1С, ERP или МойСклад.\n\n## Когда пригодится Seller API\n\nПри интеграции системы учёта продавца с Seller API обновлять и получать данные можно в автоматическом режиме. Это \nпоможет поддерживать актуальной информацию о ценах и остатках товаров, обрабатывать больше заказов за меньшее время \nи исключить ошибки из-за обновления данных вручную.\n\nНапример, вам нужно обновить информацию об остатках или ценах 100 товаров. Чтобы сделать это через личный кабинет, \nнеобходимо вручную изменить данные на карточке каждого товара.\n\nМетод [/v2/products/stocks](#operation/ProductAPI_ProductsStocksV2) позволяет одним запросом обновить информацию об \nостатках сразу 100 товаров, а метод [/v1/product/import/prices](#operation/ProductAPI_ImportProductsPrices) — их стоимость.\n\n## Возможности Seller API\n\n- Загружать и обновлять товары.\n- Управлять ценами и остатками по товарам.\n- Получать информацию о возвратах товаров.\n- Управлять заказами FBO, FBS и rFBS.\n- Управлять чатами.\n- Работать с накладными.\n- Получать финансовую и аналитическую информацию.\n- Получать выгрузку атрибутов и характеристик Ozon.\n\n\n"
      },
      {
        "name": "Getting started",
        "x-displayName": "Начало работы",
        "description": "Перед началом работы с Ozon Seller API:\n\n1. Изучите процессы работы с Ozon в [Базе знаний продавца](https://seller-edu.ozon.ru) и [личном кабинете продавца](https://seller.ozon.ru/app/signin).\n2. Определите процессы, которые планируете автоматизировать, и сравните их с процессами вашей компании.\n3. Изучите документацию Seller API и разработайте схему интеграции.\n\nДля работы с Seller API необходим API-ключ. Подробнее в разделе [Авторизация](#tag/Auth).\n\nSeller API работает по UTC. Учитывайте это, когда отправляете запросы и получаете ответы с датами и временем.\n\nПроцесс работы с Seller API можно разделить на блоки:\n- работа с атрибутным деревом,\n- загрузка и обновление товаров,\n- управление ценами,\n- управление остатками товара,\n- управление заказами FBO,\n- управление заказами FBS и rFBS,\n- работа с накладными,\n- получение финансовой информации,\n- получение аналитической информации,\n- управление возвратами,\n- управление чатами.\n"
      },
      {
        "name": "Auth",
        "x-displayName": "Авторизация",
        "description": "<br><aside class=\"warning\">API-ключи хранятся в личном кабинете в скрытом виде. Вы увидите API-ключ только при создании. Сохраните его в надёжном месте или сразу укажите в своих системах. \n\nВы не сможете восстановить доступ к несохранённым API-ключам. Чтобы продолжить работу с API, создайте новый ключ.\n</aside>\n\n## Как получить доступ к Seller API\n\n1. Зарегистрируйтесь в [Ozon Seller](https://seller.ozon.ru/app/signup). Подробнее о регистрации \n   в [Базе знаний продавца](https://seller-edu.ozon.ru/docs/how-to-start/step-1-register.html).\n2. Получите API-ключ.\n\n## Как получить API-ключ\n\n<aside class=\"warning\">\n<b>Не передавайте API-ключ посторонним людям</b>  \n\nЗапросы к API изменяют данные в вашем магазине на Ozon. Если доступ к ключу будет у посторонних, они смогут управлять \nвашим магазином.\n</aside>\n\nЧтобы получить API-ключ:\n1. В личном кабинете перейдите в [**Настройки → API ключи**](https://seller.ozon.ru/app/settings/api-keys).\n2. Нажмите **Сгененрировать ключ**.\n3. Придумайте название для ключа и выберите его уровень доступа.\n4. Нажмите **Сенерировать**.\n\nВы можете создать несколько API-ключей. Например, если у вас несколько пользователей с разными уровнями доступа.\n\n### Отредактировать ключ\n\nЕсли вы хотите изменить разрешённые сети для ключа, в [списке API-ключей](https://seller.ozon.ru/app/settings/api-keys) выберите нужный и нажмите <img src=\"https://cdn.ozone.ru/s3/ozon-disk-api/techdoc/seller-api/edit-key_1682516858.png\" width=\"20\">.\nВнесите изменения и нажмите **Обновить**.\n\n## API-ключ попал в посторонние руки\n\n1. В личном кабинете перейдите в [**Настройки → API ключи**](https://seller.ozon.ru/app/settings/api-keys).\n2. Удалите текущий API-ключ и создайте новый."
      },
      {
        "name": "Environment",
        "x-displayName": "Рабочая среда",
        "description": "## Что такое рабочая среда\n\nРабочая среда — это ваш магазин. Все отправленные запросы, кроме информационных, могут изменять данные в личном \nкабинете и на сайте Ozon.\n\n**Рабочая среда**: api-seller.ozon.ru\n\nСозданные товары можно посмотреть по ссылке вида: https://www.ozon.ru/context/detail/id/SKU, где вместо «SKU» нужно \nуказать значение для созданного товара.\n\n## Формат запроса\n\n```http\nGET / HTTP/1.1\nHost: api-seller.ozon.ru\nClient-Id: <Client-Id>\nApi-Key: <Api-Key>\nContent-Type: application/json\n```\n\nДля проверки корректности формата запроса используйте вкладку **Консоль** над описанием метода или \n[Postman](https://www.postman.com). "
      },
      {
        "name": "Process",
        "x-displayName": "Порядок работы с методами",
        "description": "<br><aside class=\"warning\">Если от вашего имени поступает много одинаковых или ошибочных запросов, мы можем ограничить\nдоступ к Seller API без предупреждения.</aside>\n\n# Выгрузите атрибуты и характеристики Ozon\n\n<br><aside class=\"warning\">Чтобы методы для работы с товарами работали корректно, сопоставьте ваши категории и\nхарактеристики со значениями в системе Ozon.\n\nЕсли в методе [/v2/product/import](#operation/ProductAPI_ImportProductsV2) вы передадите значения не из справочника\nOzon, товар не будет создан или обновлён.</aside>\n\n1. [/v2/category/tree](#operation/CategoryAPI_GetCategoryTree) — получите список категорий в виде дерева и используйте\n   значение последнего уровня выбранной категории.\n\n2. [/v3/category/attribute](#operation/CategoryAPI_GetCategoryAttributesV3) — получите характеристики для выбранной\n   категории.\n\n3. [/v2/category/attribute/values](#operation/CategoryAPI_DictionaryValueBatch) — получите список значений для выбранной\n   характеристики.\n\n# Загрузите и обновите товары\n\nПосле сравнения своих атрибутов и характеристик с атрибутной моделью Ozon можете приступить к загрузке товаров:\n\n1. [/v2/product/import](#operation/ProductAPI_ImportProductsV2) — загрузите товары и услуги. Этот метод также позволяет\n   обновить уже загруженные товары. В запросе устанавливается первичная цена и загружаются изображения товара. Для услуг\n   необходимо указать геоограничения. Список геоограничений можно получить\n   методом [/v2/products/get-geo-restrictions-catalog-by-filter](#operation/ProductAPI_GetGeoRestrictionsV1).\n\n   В одном запросе можно передать до 100 товаров. Изображения загружаются прямой ссылкой на облачное хранилище, где они\n   хранятся.\n\n   В результате работы метода вы получите `task_id` — номер задания на загрузку товаров.\n\n2. [/v1/product/import/info](#operation/ProductAPI_GetImportProductsInfo) — проверьте `task_id`, который вы получили при\n   загрузке товаров. Метод вернёт информацию, успешно ли загрузились товары или при импорте была ошибка.\n\n   Если ответ содержит статус, что товар на модерации, подождите её результатов и проверьте статус товара повторно.\n   Обычно модерация занимает меньше одного дня.\n\n3. [/v1/product/upload_digital_codes](#operation/ProductAPI_UploadDigitalCode) — загрузите коды активации, если вы\n   продаёте цифровые товары или услуги. Код активации привязывается к карточке цифрового товара. После продажи цифрового\n   товара вы сможете посмотреть привязку кода к отправлению в ответе\n   метода [/v2/posting/fbo/get](#operation/PostingAPI_GetFboPosting). В результате работы метода вы получите `task_id` —\n   номер задания на загрузку кода активации.\n\n4. [/v1/product/upload_digital_codes/info](#operation/ProductAPI_UploadDigitalCodeInfo) — проверьте `task_id`, который\n   вы получили при загрузке кодов активации. Метод вернёт информацию, успешно ли загрузились коды или возникла ошибка.\n\n5. [/v2/product/list](#operation/ProductAPI_GetProductList) — получите список созданных товаров после загрузки товаров.\n\n   Метод позволяет использовать фильтры, чтобы разбить товары на группы по статусу видимости или отслеживать изменение\n   их статуса с помощью идентификатора товара.\n\n   Метод возвращает пару значений `offer_id` и `product_id` — они нужны практически во всех запросах для идентификации\n   товара, с которым будет производиться действие. Если вы загружали товары через шаблон, используйте этот метод для\n   получения `offer_id` и `product_id`, чтобы в дальнейшем работать по API с товарами.\n\nДля обновления товара и его характеристик используйте [/v2/product/import](#operation/ProductAPI_ImportProductsV2).\n\nИнформация о товаре:\n\n- [/v2/product/info](#operation/ProductAPI_GetProductInfoV2) — получите информацию о товаре, например штрихкод, цену\n  главного предложения, идентификатор категории, комиссию или ошибки модерации.\n\n- [/v2/product/info/list](#operation/ProductAPI_GetProductInfoListV2) — с помощью\n  фильтров [/v2/product/list](#operation/ProductAPI_GetProductList)\n  получите список пакетно по всем товарам сразу или по категориям.\n\n- [/v3/products/info/attributes](#operation/ProductAPI_GetProductAttributesV3) — получите описание характеристик товара.\n  Метод позволяет добавить дополнительную информацию к товару, чтобы карточка товара была более полной.\n\n- [/v1/product/info/description](#operation/ProductAPI_GetProductInfoDescription) — получите описание товара, чтобы\n  использовать его для создания схожего товара.\n\n- [/v1/product/info/discounted](#operation/ProductAPI_GetProductInfoDiscounted) — получите информацию об уценке и\n  основном товаре по SKU уценённого товара.\n\nУдаление и архивация товаров:\n\n1. [/v2/products/delete](#operation/ProductAPI_DeleteProducts) — удалите товар, если он загрузился с ошибкой и попал в\n   архив без SKU. Товары, которые успешно прошли модерацию и получили SKU, удалить из архива нельзя.\n\n2. [/v1/product/archive](#operation/ProductAPI_ProductArchive) — перенесите товар в архив. Перед архивированием товара\n   обнулите его остатки.\n\n3. [/v1/product/unarchive](#operation/ProductAPI_ProductUnarchive) — верните товар из архива.\n\nТовар попадёт в продажу, только когда вы установите его остаток.\n\nУправление услугами:\n\n- Получить список геоограничений для услуг можно через\n  метод [/v2/products/get-geo-restrictions-catalog-by-filter](#operation/ProductAPI_GetGeoRestrictionsV1). Это позволит\n  указать локацию оказываемых услуг.\n- Загрузить коды активации для услуг и цифровых товаров можно через\n  метод [/v1/product/upload_digital_codes](#operation/ProductAPI_UploadDigitalCode).\n\n## Загрузите и обновите изображения товара\n\nЕсли нужно добавить картинки товара или заменить существующие, используйте:\n\n1. [/v1/product/pictures/import](#operation/ProductAPI_ProductImportPictures) — загрузите или обновите изображения\n   товара. Изображения загружаются прямой ссылкой на облачное хранилище, где оно хранится.\n2. [/v1/product/pictures/info](#operation/ProductAPI_ProductInfoPictures) — проверьте статус добавления изображений\n   товара. Метод вернёт информацию, успешно ли загрузились картинки или при загрузке произошла ошибка.\n\n# Загрузите сертификаты качества\n\n## Информация о сертификатах\n\n- Получите список типов сертификатов: [/v1/product/certificate/types](#operation/ProductAPI_ProductCertificateTypes).\n- Получите список сертифицируемых категорий: [/v1/product/certification/list](#operation/ProductAPI_ProductCertificationList).\n- Получите список статусов сертификата: [/v1/product/certificate/status/list](#operation/CertificateStatusList).\n- Получите список типов соответствия требованиям: [/v2/product/certificate/accordance-types/list](#operation/CertificateAccordanceTypes).\n- Получите список причин отклонения сертификата: [v1/product/certificate/rejection_reasons/list](#operation/RejectionReasonsList).\n- Получите список сертификатов: [v1/product/certificate/list](#operation/CertificateList), используя фильтры:\n   - тип сертификата `type` — значение `value` из ответа [/v1/product/certificate/types](#operation/ProductAPI_ProductCertificateTypes);\n   - статус сертификата `status` — значение `code` из ответа [v1/product/certificate/status/list](#operation/CertificateStatusList).\n\n## Работа с товарами сертификата\n\nЧтобы привязать сертификат к товару:\n1. Получите список брендов, для которых требуется предоставить сертификат: [/v1/brand/company-certification/list](#operation/ProductAPI_ProductCertificateBind).\n   В ответе вернутся бренды, товары которых есть в вашем личном кабинете.\n   Список брендов может изменяться, если Ozon получит требование от бренда предоставлять сертификат.\n2. Добавьте сертификаты для товаров: [/v1/product/certificate/create](#operation/ProductAPI_ProductCertificateCreate).\n3. Привяжите сертификат к товару: [/v1/product/certificate/bind](#operation/ProductAPI_ProductCertificateBind).\n\nЧтобы посмотреть список товаров, привязанных к сертификату, воспользуйтесь методом [v1/product/certificate/products/list](#operation/CertificateProductsList).\nЕсли нужно получить список товаров с определённым статусом, в параметре `status` передайте значение `code` из ответа [v1/product/certificate/product_status/list](#operation/ProductStatusList).\n\nЧтобы отвязать товар от сертификата, используйте [/v1/product/certificate/products/unbind](#operation/CertificateUnbind).\n\n## Управление состоянием сертификата\n\nЧтобы получить атрибуты для управления сертификатом:\n1. Получите список типов сертификатов: [/v1/product/certificate/types](#operation/ProductAPI_ProductCertificateTypes).\n2. Получите список типов соответствия требованиям: [/v2/product/certificate/accordance-types/list](#operation/CertificateAccordanceTypes).\n\nДля создания сертификата используйте [/v1/product/certificate/create](#operation/ProductAPI_ProductCertificateCreate), передав в запросе:\n- тип сертификата `type_code` — значение `value` из ответа [/v1/product/certificate/types](#operation/ProductAPI_ProductCertificateTypes);\n- тип соответствия требованиям `accordance_type_code` — значение `code` из ответа [/v2/product/certificate/accordance-types/list](#operation/CertificateAccordanceTypes).\n\nЧтобы удалить сертификат, используйте [/v1/product/certificate/delete](#operation/CertificateDelete).\n\n# Обновите цены и остатки товаров\n\nПосле загрузки товаров для схем FBS и rFBS можно перейти к обновлению остатков. Для схемы FBO остатки обновляются\nавтоматически по факту продажи.\n\nДля обновления остатков используйте методы:\n- [/v1/product/import/stocks](#operation/ProductAPI_ImportProductsStocks) — если у вас заведён один склад.\n- [/v2/products/stocks](#operation/ProductAPI_ProductsStocksV2) — если складов несколько. В этом методе дополнительно указывается идентификатор склада, на котором необходимо изменить остатки.\n\nДля получения информации о количестве остатков для FBO\nиспользуйте [/v3/product/info/stocks](#operation/ProductAPI_GetProductInfoStocksV3).\n\nДля получения информации о количестве остатков для FBS и rFBS\nиспользуйте [v1/product/info/stocks-by-warehouse/fbs](#operation/ProductAPI_ProductStocksByWarehouseFbs).\n\nЧтобы обновить цены по товарам и не менять карточку товара,\nиспользуйте [/v1/product/import/prices](#operation/ProductAPI_ImportProductsPrices).\n\nМетод позволяет обновить цену:\n\n- до скидок,\n- для клиентов с подпиской Ozon Premium,\n- на карточке товара с учётом скидок,\n- минимальную цену товара после применения акций.\n\n<aside class=\"warning\">\nЦена товара может упасть ниже минимальной, если вы примените разные типы акций к одному товару.\n</aside>\n\nДля получения информации о ценах, комиссиях и скидках на товары\nиспользуйте [/v4/product/info/prices](#operation/ProductAPI_GetProductInfoPricesV4).\n\n# Участвуйте в акциях\n\nДля продвижения товаров участвуйте в акциях, которые Ozon проводит для покупателей.\n\n- Получите список доступных акций: [/v1/actions](#operation/Promos).\n\n- Получите список товаров, которые могут участвовать в акции: [/v1/actions/candidates](#operation/PromosCandidates).\n\n- Добавьте товары в акцию: [/v1/actions/products/activate](#operation/PromosProductsActivate).\n\n- Получите список товаров, которые участвуют в акции: [/v1/actions/products](#operation/PromosProducts).\n\n- Удалите товары из акции: [/v1/actions/products/deactivate](#operation/PromosProductsDeactivate).\n\nПокупатели могут попросить у вас скидку на товар.\nЧтобы получить список товаров, которые покупатели хотят купить со скидкой, воспользуйтесь методом\n[/v1/actions/discounts-task/list](#operation/promos_task_list).\nЗаявки в статусах `NEW` (новые) или `SEEN` (просмотренные) вы можете:\n- одобрить — используйте метод [/v1/actions/discounts-task/approve](#operation/promos_task_approve),\n- отклонить — используйте метод [/v1/actions/discounts-task/decline](#operation/promos_task_decline).\n\n## Акции Hot Sale\n\n- Получите список доступных акций Hot Sale: [/v1/actions/hotsales/list](#operation/ActionsAPI_GetHotSalesList).\n\n- Получите список товаров, которые могут участвовать или уже участвуют в акции Hot\n  Sale: [/v1/actions/hotsales/products](#operation/ActionsAPI_GetHotSalesProducts).\n\n- Добавьте товары в акцию Hot Sale: [/v1/actions/hotsales/activate](#operation/ActionsAPI_ActivateHotSalesProducts).\n\n- Удалите товары из акции Hot Sale: [/v1/actions/hotsales/deactivate](#operation/ActionsAPI_DeactivateHotSalesProducts).\n\n[Подробнее об акциях в Базе знаний продавца](https://seller-edu.ozon.ru/docs/how-to-sell-effectively/promo/promo.html)\n\n# Настройте стратегии ценообразования\n\nСтратегии ценообразования — инструмент для автоматического изменения стоимости товаров в соответствии с ценами на аналогичные товары в других интернет-магазинах и маркетплейсах.\n\n[Подробнее о стратегиях в Базе знаний для продавцов из России](https://seller-edu.ozon.ru/work-with-goods/rabota-s-tsenami/rival-strategies)\n\n[Подробнее о стратегиях в Справке для продавцов Ozon Global](https://docs.ozon.ru/global/prices/pricing-strategies/)\n\nЧтобы настроить стратегии ценообразования:\n\n1. Получите список конкурентов: [/v1/pricing-strategy/competitors/list](#operation/pricing_competitors).\n\n2. Получите список стратегий ценообразования: [/v1/pricing-strategy/list](#operation/pricing_list).\n\n3. Создайте свою стратегию: [/v1/pricing-strategy/create](#operation/pricing_create) и установите коэффициенты, чтобы изменять стоимость товара по сравнению с другими площадками в большую и меньшую сторону.\n   Чтобы получить информацию о стратегии, используйте метод [/v1/pricing-strategy/info](#operation/pricing_info).\n\n4. Добавьте товары в стратегию: [/v1/pricing-strategy/products/add](#operation/pricing_items-add).\n      \n   Вы можете добавить товары:\n   - На которые установлена минимальная цена с помощью метода [/v1/product/import/prices](#operation/ProductAPI_ImportProductsPrices). \n     Чтобы проверить цену, используйте метод [/v4/product/info/prices](#operation/ProductAPI_GetProductInfoPricesV4).\n   - Которые не привязаны к другой стратегии.\n     Чтобы проверить привязку товара к стратегии, используйте метод [/v1/pricing-strategy/strategy-ids-by-product-ids](#operation/pricing_ids).\n\n   Чтобы получить список товаров, которые привязаны к стратегии, используйте метод [/v1/pricing-strategy/products/list](#operation/pricing_items-list), а для удаления товаров из стратегии — [/v1/pricing-strategy/products/delete](#operation/pricing_items-delete).\n\n7. Включите или отключите стратегию: [/v1/pricing-strategy/status](#operation/pricing_status).\n\nЧтобы изменить список выбранных конкурентов и название стратегии, используйте метод [/v1/pricing-strategy/update](#operation/pricing_update).\n\nДля удаления стратегии используйте метод [/v1/pricing-strategy/delete](#operation/pricing_delete).\n\n# Получите информацию о складах\n\n- [/v1/delivery-method/list](#operation/WarehouseAPI_DeliveryMethodList) — получите список методов склада.\n\n- [/v1/warehouse/list](#operation/WarehouseAPI_WarehouseList) — получите список складов.\n\n# Управляйте заказами FBO, FBS и rFBS\n\nОбработайте заказы в зависимости от схемы работы:\n\n- [cхема FBO](#section/Upravlyajte-zakazami-FBO-FBS-i-rFBS/Shema-FBO);\n- [стандартная схема FBS](#section/Upravlyajte-zakazami-FBO-FBS-i-rFBS/Shema-FBS-Standart);\n- [схема FBS PickUp с подключённой доверительной приёмкой](#section/Upravlyajte-zakazami-FBO-FBS-i-rFBS/Shema-FBS-PickUp-s-doveritelnoj-priyomkoj);\n- [стандартная схема rFBS](#section/Upravlyajte-zakazami-FBO-FBS-i-rFBS/Shema-rFBS-Standart);\n- [схема rFBS с доставкой через интегрированную службу](#section/Upravlyajte-zakazami-FBO-FBS-i-rFBS/Shema-rFBS-s-integrirovannoj-sluzhboj-dostavki);\n- [схема rFBS Агрегатор](#section/Upravlyajte-zakazami-FBO-FBS-i-rFBS/Shema-rFBS-Agregator).\n\nЕсли вы продаёте товары из-за рубежа, обрабатывайте заказы по одной из схем:\n\n- [rFBS Crossborder](#section/Upravlyajte-zakazami-FBO-FBS-i-rFBS/Shema-rFBS-Crossborder);\n- [rFBS Crossborder с интегрированной службой доставки](#section/Upravlyajte-zakazami-FBO-FBS-i-rFBS/Shema-rFBS-Crossborder-s-integrirovannoj-sluzhboj-dostavki);\n- [rFBS Агрегатор](#section/Upravlyajte-zakazami-FBO-FBS-i-rFBS/Shema-rFBS-Agregator).\n\n[Подробнее о заказах с весовыми товарами при работе по схеме rFBS](#section/Upravlyajte-zakazami-FBO-FBS-i-rFBS/Kak-rabotat-s-zakazami-s-vesovymi-tovarami-(rFBS))\n\n## Схема FBO\n\nДля получения списка отправлений, финансовой и аналитической информации\nиспользуйте [/v2/posting/fbo/list](#operation/PostingAPI_GetFboPostingList). Также метод возвращает информацию о\nпроданных кодах активации с привязкой к номеру отправления.\n\nЧтобы получить информацию по отправлению, используйте [/v2/posting/fbo/get](#operation/PostingAPI_GetFboPosting).\n\n### Получите информацию о заявках на поставку\n\nДля поставки на фулфилмент Ozon нужна заявка. В ней указано, какие товары и в каком количестве вы привезёте.\n\n1. [/v1/supply-order/list](#operation/SupplyOrderAPI_GetSupplyOrdersList) — получите список заявок на поставку.\n2. [/v1/supply-order/get](#operation/SupplyOrderAPI_GetSupplyOrder) — получите информацию по заявке.\n3. [/v1/supply-order/items](#operation/SupplyOrderAPI_GetSupplyOrderItems) — получите список товаров в заявке.\n\n## Схема FBS Стандарт\n\n1. Перед началом работы с отправлениями получите список необработанных\n   отправлений: [/v3/posting/fbs/unfulfilled/list](#operation/PostingAPI_GetFbsPostingUnfulfilledList).\n\n   Если покупатель юридическое лицо, то в блоке `requirements` будет информация о необходимости передать\n   страну-производителя для всех товаров в заказе, у которых она не указана. Получите список доступных для выбора\n   стран: [/v2/posting/fbs/product/country/list](#operation/PostingAPI_ListCountryProductFbsPostingV2). Затем передайте\n   информацию о\n   стране-производителе: [/v2/posting/fbs/product/country/set](#operation/PostingAPI_SetCountryProductFbsPostingV2).\n\n   Также можно получать список заказов (отправлений): [/v3/posting/fbs/list](#operation/PostingAPI_GetFbsPostingListV3).\n   Он позволяет получить все заказы, используя фильтры с различными статусами. Можно также получить данные аналитики,\n   если поле `with` отправить со значением `analytics_data`.\n\n   Изначально все отправления по API приходят в статусе `awaiting_packaging`.\n\n2. Получите дополнительную информацию к заказам: [/v3/posting/fbs/get](#operation/PostingAPI_GetFbsPostingV3).\n\n   В блоке `requirements` указывается:\n    - какие товары подлежат обязательной маркировке;\n    - нужно ли передать номер грузовой таможенной декларации и регистрационный номер партии товара — эту информацию\n      также можно получить с помощью методов [/v3/posting/fbs/list](#operation/PostingAPI_GetFbsPostingListV3)\n      и [/v3/posting/fbs/unfulfilled/list](#operation/PostingAPI_GetFbsPostingUnfulfilledList).\n\n   Дополнительную информацию вы также можете получить по\n   штрихкоду: [/v2/posting/fbs/get-by-barcode](#operation/PostingAPI_GetFbsPostingByBarcode).\n\n3. Проверьте, что коды маркировки соответствуют требованиям системы «Честный ЗНАК» по составу и количеству\n   символов: [/v4/fbs/posting/product/exemplar/validate](#operation/PostingAPI_FbsPostingProductExemplarValidate).\n\n   Передайте маркировку в систему «Честный\n   ЗНАК»: [/v4/fbs/posting/product/exemplar/set](#operation/PostingAPI_SetProductExemplar). При необходимости передайте\n   номера таможенных деклараций и регистрационные номера партии товара или укажите, что их нет.\n\n   Получите статусы передачи\n   маркировок: [/v4/fbs/posting/product/exemplar/status](#operation/PostingAPI_GetProductExemplarStatus).\n\n4. Перед сборкой убедитесь, что отправление соответствует установленным в пункте приёма ограничениям. Получите\n   ограничения пункта приёма по номеру\n   отправления: [/v1/posting/fbs/restrictions](#operation/PostingAPI_GetRestrictions).\n\n5. До окончания времени на сборку подтвердите, что вы собрали\n   заказ: [/v4/posting/fbs/ship](#operation/PostingAPI_ShipFbsPostingV4). Вы не сможете собрать заказ, если не указали\n   коды маркировки для товаров, подлежащих обязательной маркировке.\n\n   При необходимости используйте этот метод, чтобы разделить заказ на несколько отправлений. Например, если в заказе\n   несколько товаров и их необходимо упаковать в разные коробки, так как вместе они не отвечают требованиям к упаковке.\n\n   После использования метода статус отправления изменится на `awaiting_deliver`.\n\n   Вы можете использовать метод для частичной\n   сборки: [/v3/posting/fbs/ship/package](#operation/PostingAPI_PackageShipFbsPostingV3).\n\n6. Создайте акт приёма-передачи и транспортную\n   накладную: [/v2/posting/fbs/act/create](#operation/PostingAPI_PostingFBSActCreate). В результате работы метода вы\n   получите идентификатор задания на формирование документов.\n\n7. Получите список перевозок, для которых нужно распечатать акт приёма-передачи и транспортную\n   накладную: [/v1/posting/carriage-available/list](#operation/PostingAPI_GetCarriageAvailableList).\n\n8. Проверьте, что документы созданы: [/v2/posting/fbs/act/check-status](#operation/PostingAPI_PostingFBSActCheckStatus).\n\n9. В зависимости от вида акта:\n    - Для бумажного.<br>\n      Когда статус документа перейдёт в `ready`, получите файлы акта и\n      накладной: [/v2/posting/fbs/act/get-pdf](#operation/PostingAPI_PostingFBSGetAct).\n    - Для электронного.<br>\n      Проверьте статус формирования электронного\n      документа: [/v2/posting/fbs/digital/act/check-status](#operation/PostingAPI_PostingFBSDigitalActCheckStatus).\n      Когда статус документа перейдёт в `FORMED`, получите файл накладной и\n      акта: [/v2/posting/fbs/act/get-pdf](#operation/PostingAPI_PostingFBSGetAct)\n      и [/v2/posting/fbs/digital/act/get-pdf](#operation/PostingAPI_PostingFBSGetDigitalAct).\n\n10. Для каждого отправления распечатайте наклейку для идентификации в системе\n    Ozon: [/v2/posting/fbs/package-label](#operation/PostingAPI_PostingFBSPackageLabel).\n\nПосле этого можете отвезти отправления и документы в пункт приёма.\n\nЕсли отправление передано в доставку, но не просканировано в сортировочном центре, вы можете открыть\nспор: [/v2/posting/fbs/arbitration](#operation/PostingAPI_MoveFbsPostingToArbitration). Открытый спор переведёт\nотправление в статус `arbitration`.\n\nЕсли спор по отправлению откроет покупатель, статус отправления изменится на `client_arbitration`.\n\nЧтобы отследить изменение статуса, когда отправление найдено,\nиспользуйте [/v3/posting/fbs/list](#operation/PostingAPI_GetFbsPostingListV3) с нужными фильтрами.\n\nДля передачи спорных заказов к отгрузке\nиспользуйте [/v2/posting/fbs/awaiting-delivery](#operation/PostingAPI_MoveFbsPostingToAwaitingDelivery). Статус\nотправления изменится на `awaiting_deliver`.\n\n### Отменить доставку отправления\n\n1. Используйте [/v2/posting/fbs/cancel-reason/list](#operation/PostingAPI_GetPostingFbsCancelReasonList) на любом этапе\n   работы с отправлением, чтобы получить список причин отмены отправления.\n\n2. Затем передайте этот список и номер отправления: [/v2/posting/fbs/cancel](#operation/PostingAPI_CancelFbsPosting).\n\nЧтобы отменить часть товаров в отправлении,\nиспользуйте [/v2/posting/fbs/product/cancel](#operation/PostingAPI_CancelFbsPostingProduct).\n\nЕсли отправление отменит покупатель, статус изменится на `cancelled`.\n\n## Схема FBS PickUp с доверительной приёмкой\n\n1. Перед началом работы с отправлениями получите список необработанных\n   отправлений: [/v3/posting/fbs/unfulfilled/list](#operation/PostingAPI_GetFbsPostingUnfulfilledList).\n\n   Если покупатель юридическое лицо, то в блоке `requirements` будет информация о необходимости передать\n   страну-производителя для всех товаров в заказе, у которых она не указана. Получите список доступных для выбора\n   стран: [/v2/posting/fbs/product/country/list](#operation/PostingAPI_ListCountryProductFbsPostingV2). Затем передайте\n   информацию о\n   стране-производителе: [/v2/posting/fbs/product/country/set](#operation/PostingAPI_SetCountryProductFbsPostingV2).\n\n   Также можно получать список заказов (отправлений): [/v3/posting/fbs/list](#operation/PostingAPI_GetFbsPostingListV3).\n   Он позволяет получить все заказы, используя фильтры с различными статусами. Можно также получить данные аналитики,\n   если поле `with` отправить со значением `analytics_data`.\n\n   Изначально все отправления по API приходят в статусе `awaiting_packaging`.\n\n2. Получите дополнительную информацию к заказам: [/v3/posting/fbs/get](#operation/PostingAPI_GetFbsPostingV3).\n\n   В блоке `requirements` указывается:\n    - какие товары подлежат обязательной маркировке;\n    - нужно ли передать номер грузовой таможенной декларации и регистрационный номер партии товара — эту информацию\n      также можно получить с помощью методов [/v3/posting/fbs/list](#operation/PostingAPI_GetFbsPostingListV3) и\n      [/v3/posting/fbs/unfulfilled/list](#operation/PostingAPI_GetFbsPostingUnfulfilledList).\n\n   Дополнительную информацию вы также можете получить по\n   штрихкоду: [/v2/posting/fbs/get-by-barcode](#operation/PostingAPI_GetFbsPostingByBarcode).\n\n3. Проверьте, что коды маркировки соответствуют требованиям системы «Честный ЗНАК» по составу и количеству\n   символов: [/v4/fbs/posting/product/exemplar/validate](#operation/PostingAPI_FbsPostingProductExemplarValidate).\n\n   Передайте маркировку в систему «Честный\n   ЗНАК»: [/v4/fbs/posting/product/exemplar/set](#operation/PostingAPI_SetProductExemplar). При необходимости передайте\n   номера таможенных деклараций и регистрационные номера партии товара или укажите, что их нет.\n\n   Получите статусы передачи\n   маркировок: [/v4/fbs/posting/product/exemplar/status](#operation/PostingAPI_GetProductExemplarStatus).\n\n4. Перед сборкой убедитесь, что отправление соответствует установленным в пункте приёма ограничениям. Получите\n   ограничения пункта приёма по номеру\n   отправления: [/v1/posting/fbs/restrictions](#operation/PostingAPI_GetRestrictions).\n\n5. До окончания времени на сборку подтвердите, что вы собрали\n   заказ: [/v4/posting/fbs/ship](#operation/PostingAPI_ShipFbsPostingV4). Вы не сможете собрать заказ, если не указали\n   коды маркировки для товаров, подлежащих обязательной маркировке.\n\n   При необходимости используйте этот метод, чтобы разделить заказ на несколько отправлений. Например, если в заказе\n   несколько товаров и их необходимо упаковать в разные коробки, так как вместе они не отвечают требованиям к упаковке.\n\n   После использования метода статус отправления изменится на `awaiting_deliver`.\n\n   Вы можете использовать метод для частичной\n   сборки: [/v3/posting/fbs/ship/package](#operation/PostingAPI_PackageShipFbsPostingV3).\n\n6. Создайте акт приёма-передачи и транспортную\n   накладную: [/v2/posting/fbs/act/create](#operation/PostingAPI_PostingFBSActCreate). В результате работы метода вы\n   получите идентификатор задания на формирование документов.\n\n7. Получите список перевозок, для которых нужно распечатать акт приёма-передачи и транспортную\n   накладную: [/v1/posting/carriage-available/list](#operation/PostingAPI_GetCarriageAvailableList).\n\n8. Проверьте, что документы созданы: [/v2/posting/fbs/act/check-status](#operation/PostingAPI_PostingFBSActCheckStatus).\n\n9. В зависимости от вида акта:\n    - Для бумажного.<br>\n      Когда статус документа перейдёт в `ready`, получите файлы акта и\n      накладной: [/v2/posting/fbs/act/get-pdf](#operation/PostingAPI_PostingFBSGetAct).\n    - Для электронного.<br>\n      Проверьте статус формирования электронного\n      документа: [/v2/posting/fbs/digital/act/check-status](#operation/PostingAPI_PostingFBSDigitalActCheckStatus).\n      Когда статус документа перейдёт в `FORMED`, получите файл накладной и\n      акта: [/v2/posting/fbs/act/get-pdf](#operation/PostingAPI_PostingFBSGetAct)\n      и [/v2/posting/fbs/digital/act/get-pdf](#operation/PostingAPI_PostingFBSGetDigitalAct).\n\n10. Для каждого отправления распечатайте наклейку для идентификации в системе\n    Ozon: [/v2/posting/fbs/package-label](#operation/PostingAPI_PostingFBSPackageLabel).\n\n11. После того как вы упаковали все отправления по требованиям из\n    раздела [Доверительная приёмка грузового места](https://seller-edu.ozon.ru/docs/fbs/ozon-logistika/doveritel-naya-priemka-gruzovogo-mesta.html#какие-требования-к-грузовому-месту)\n    в Базе знаний продавца, получите этикетки на каждое грузовое\n    место: [/v2/posting/fbs/act/get-container-labels](#operation/PostingAPI_PostingFBSActGetContainerLabels).\n\nПосле этого можете передать грузовое место в пункт приёма или курьеру Ozon.\n\nЕсли отправление передано в доставку, но не просканировано в сортировочном центре, вы можете открыть\nспор: [/v2/posting/fbs/arbitration](#operation/PostingAPI_MoveFbsPostingToArbitration). Открытый спор переведёт\nотправление в статус `arbitration`.\n\nЕсли спор по отправлению откроет покупатель, статус отправления изменится на `client_arbitration`.\n\nЧтобы отследить изменение статуса, когда отправление найдено,\nиспользуйте [/v3/posting/fbs/list](#operation/PostingAPI_GetFbsPostingListV3) с нужными фильтрами.\n\nДля передачи спорных заказов к отгрузке\nиспользуйте [/v2/posting/fbs/awaiting-delivery](#operation/PostingAPI_MoveFbsPostingToAwaitingDelivery). Статус\nотправления изменится на `awaiting_deliver`.\n\n## Схема rFBS Стандарт\n\n1. Перед началом работы с отправлениями получите список необработанных заказов (отправлений):\n   [/v3/posting/fbs/unfulfilled/list](#operation/PostingAPI_GetFbsPostingUnfulfilledList).\n\n   Если покупатель юридическое лицо, то в блоке `requirements` будет информация о необходимости передать\n   страну-производителя для всех товаров в заказе, у которых она не указана.    \n   Получите список доступных для выбора\n   стран: [/v2/posting/fbs/product/country/list](#operation/PostingAPI_ListCountryProductFbsPostingV2). Затем передайте\n   информацию о\n   стране-производителе: [/v2/posting/fbs/product/country/set](#operation/PostingAPI_SetCountryProductFbsPostingV2).\n\n   Также можно получать список заказов (отправлений): [/v3/posting/fbs/list](#operation/PostingAPI_GetFbsPostingListV3).\n   Он позволяет получить все заказы, используя фильтры с различными статусами. Можно также получить данные аналитики,\n   если поле `with` отправить со значением `analytics_data`.\n\n   Изначально все отправления по API приходят в статусе `awaiting_packaging`.\n\n2. Получите дополнительную информацию к заказам: [/v3/posting/fbs/get](#operation/PostingAPI_GetFbsPostingV3).\n\n   В блоке `requirements` указывается:\n    - какие товары подлежат обязательной маркировке;\n    - нужно ли передать номер грузовой таможенной декларации и регистрационный номер партии товара — эту информацию\n      также можно получить с помощью методов [/v3/posting/fbs/list](#operation/PostingAPI_GetFbsPostingListV3)\n      и [/v3/posting/fbs/unfulfilled/list](#operation/PostingAPI_GetFbsPostingUnfulfilledList).\n\n   Дополнительную информацию вы также можете получить по\n   штрихкоду: [/v2/posting/fbs/get-by-barcode](#operation/PostingAPI_GetFbsPostingByBarcode).\n\n3. Проверьте, что коды маркировки соответствуют требованиям системы «Честный ЗНАК» по составу и количеству\n   символов: [/v4/fbs/posting/product/exemplar/validate](#operation/PostingAPI_FbsPostingProductExemplarValidate).\n\n   Передайте маркировку в систему «Честный\n   ЗНАК»: [/v4/fbs/posting/product/exemplar/set](#operation/PostingAPI_SetProductExemplar). При необходимости передайте\n   номера таможенных деклараций и регистрационные номера партии товара или укажите, что их нет.\n\n   Получите статусы передачи\n   маркировок: [/v4/fbs/posting/product/exemplar/status](#operation/PostingAPI_GetProductExemplarStatus).\n\n4. До окончания времени на сборку подтвердите, что вы собрали\n   заказ: [/v4/posting/fbs/ship](#operation/PostingAPI_ShipFbsPostingV4). Вы не сможете собрать заказ, если не указали\n   коды маркировки для товаров, подлежащих обязательной маркировке.\n\n   При необходимости используйте этот метод, чтобы разделить заказ на несколько отправлений. Например, если в заказе\n   несколько товаров и их необходимо упаковать в разные коробки, так как вместе они не отвечают требованиям к упаковке.\n\n   После использования метода статус отправления изменится на `awaiting_deliver`.\n\n   Вы можете использовать метод для частичной\n   сборки: [/v3/posting/fbs/ship/package](#operation/PostingAPI_PackageShipFbsPostingV3).\n\nКогда сборка заказа завершена, свяжитесь с покупателем для согласования даты доставки.\nЕсли покупателю не подходит дата, вы можете перенести её: [/v1/posting/fbs/timeslot/set](#operation/PostingAPI_SetPostingTimeslot).\nПосмотрите доступные даты для переноса доставки и количество доступных переносов: [/v1/posting/fbs/timeslot/change-restrictions](#operation/PostingAPI_PostingTimeslotChangeRestrictions).\n\nПередайте отправление курьеру:\n\n1. Когда курьер забрал отправление, измените статус отправления на\n   «Доставляется»: [/v2/fbs/posting/delivering](#operation/PostingAPI_FbsPostingDelivering).\n\n   <aside class=\"notice\">\n   Если вы не составляете маршрутный лист и курьер сразу направляется к покупателю, можете сразу перевести отправление из\n   статуса «Доставляется» в «Последняя миля»: <a href=\"#operation/PostingAPI_FbsPostingLastMile\">/v2/fbs/posting/last-mile</a>.\n   </aside>\n\n   Одновременно с этим, если у отправления есть трек-номер, передайте\n   его: [/v2/fbs/posting/tracking-number/set](#operation/PostingAPI_FbsPostingTrackingNumberSet).\n\n2. Когда курьер едет к покупателю, поменяйте статус отправления на «Последняя\n   миля»: [/v2/fbs/posting/last-mile](#operation/PostingAPI_FbsPostingLastMile).\n\n3. Когда курьер передал отправление покупателю, поменяйте статус на\n   «Доставлено»: [/v2/fbs/posting/delivered](#operation/PostingAPI_FbsPostingDelivered).\n\n### Отменить доставку отправления\n\n1. Используйте [/v2/posting/fbs/cancel-reason/list](#operation/PostingAPI_GetPostingFbsCancelReasonList) на любом этапе\n   работы с отправлением, чтобы получить список причин отмены отправления.\n\n2. Затем передайте этот список и номер отправления: [/v2/posting/fbs/cancel](#operation/PostingAPI_CancelFbsPosting).\n\nЧтобы отменить часть товаров в отправлении,\nиспользуйте [/v2/posting/fbs/product/cancel](#operation/PostingAPI_CancelFbsPostingProduct).\n\nЕсли отправление отменит покупатель, статус изменится на `cancelled`.\n\n## Схема rFBS с интегрированной службой доставки\n\n1. Перед началом работы с отправлениями получите список необработанных заказов (отправлений):\n   [/v3/posting/fbs/unfulfilled/list](#operation/PostingAPI_GetFbsPostingUnfulfilledList).\n\n   Если покупатель юридическое лицо, то в блоке `requirements` будет информация о необходимости передать\n   страну-производителя для всех товаров в заказе, у которых она не указана. Получите список доступных для выбора\n   стран: [/v2/posting/fbs/product/country/list](#operation/PostingAPI_ListCountryProductFbsPostingV2). Затем передайте\n   информацию о\n   стране-производителе: [/v2/posting/fbs/product/country/set](#operation/PostingAPI_SetCountryProductFbsPostingV2).\n\n   Также можно получать список заказов (отправлений): [/v3/posting/fbs/list](#operation/PostingAPI_GetFbsPostingListV3).\n   Он позволяет получить все заказы, используя фильтры с различными статусами. Можно также получить данные аналитики,\n   если поле `with` отправить со значением `analytics_data`.\n\n   Изначально все отправления по API приходят в статусе `awaiting_packaging`.\n\n2. Получите дополнительную информацию к заказам: [/v3/posting/fbs/get](#operation/PostingAPI_GetFbsPostingV3).\n\n   В блоке `requirements` указывается:\n    - какие товары подлежат обязательной маркировке;\n    - нужно ли передать номер грузовой таможенной декларации и регистрационный номер партии товара — эту информацию\n      также можно получить с помощью методов [/v3/posting/fbs/list](#operation/PostingAPI_GetFbsPostingListV3)\n      и [/v3/posting/fbs/unfulfilled/list](#operation/PostingAPI_GetFbsPostingUnfulfilledList).\n\n   Дополнительную информацию вы также можете получить по\n   штрихкоду: [/v2/posting/fbs/get-by-barcode](#operation/PostingAPI_GetFbsPostingByBarcode).\n\n3. Проверьте, что коды маркировки соответствуют требованиям системы «Честный ЗНАК» по составу и количеству\n   символов: [/v4/fbs/posting/product/exemplar/validate](#operation/PostingAPI_FbsPostingProductExemplarValidate).\n\n   Передайте маркировку в систему «Честный\n   ЗНАК»: [/v4/fbs/posting/product/exemplar/set](#operation/PostingAPI_SetProductExemplar). При необходимости передайте\n   номера таможенных деклараций и регистрационные номера партии товара или укажите, что их нет.\n\n   Получите статусы передачи\n   маркировок: [/v4/fbs/posting/product/exemplar/status](#operation/PostingAPI_GetProductExemplarStatus).\n\n4. До окончания времени на сборку подтвердите, что вы собрали\n   заказ: [/v4/posting/fbs/ship](#operation/PostingAPI_ShipFbsPostingV4). Вы не сможете собрать заказ, если не указали\n   коды маркировки для товаров, подлежащих обязательной маркировке.\n\n   При необходимости используйте этот метод, чтобы разделить заказ на несколько отправлений. Например, если в заказе\n   несколько товаров и их необходимо упаковать в разные коробки, так как вместе они не отвечают требованиям к упаковке.\n\n   После использования метода статус отправления изменится на `awaiting_deliver`.\n\n   Вы можете использовать метод для частичной\n   сборки: [/v3/posting/fbs/ship/package](#operation/PostingAPI_PackageShipFbsPostingV3).\n\nПередайте отправление в службу доставки. Все статусы от «Доставляется» до «Доставлено» будет передавать служба доставки.\n\n### Отменить доставку отправления\n\n1. Используйте [/v2/posting/fbs/cancel-reason/list](#operation/PostingAPI_GetPostingFbsCancelReasonList) на любом этапе\n   работы с отправлением, чтобы получить список причин отмены отправления.\n\n2. Затем передайте этот список и номер отправления: [/v2/posting/fbs/cancel](#operation/PostingAPI_CancelFbsPosting).\n\nЧтобы отменить часть товаров в отправлении,\nиспользуйте [/v2/posting/fbs/product/cancel](#operation/PostingAPI_CancelFbsPostingProduct).\n\nЕсли отправление отменит покупатель, статус изменится на `cancelled`.\n\n## Схема rFBS Агрегатор\n\n1. Перед началом работы с отправлениями получите список необработанных заказов (отправлений):\n   [/v3/posting/fbs/unfulfilled/list](#operation/PostingAPI_GetFbsPostingUnfulfilledList).\n\n   Если покупатель юридическое лицо, то в блоке `requirements` будет информация о необходимости передать\n   страну-производителя для всех товаров в заказе, у которых она не указана. Получите список доступных для выбора\n   стран: [/v2/posting/fbs/product/country/list](#operation/PostingAPI_ListCountryProductFbsPostingV2). Затем передайте\n   информацию о\n   стране-производителе: [/v2/posting/fbs/product/country/set](#operation/PostingAPI_SetCountryProductFbsPostingV2).\n\n   Также можно получать список заказов (отправлений): [/v3/posting/fbs/list](#operation/PostingAPI_GetFbsPostingListV3).\n   Он позволяет получить все заказы, используя фильтры с различными статусами. Можно также получить данные аналитики,\n   если поле `with` отправить со значением `analytics_data`.\n\n   Изначально все отправления по API приходят в статусе `awaiting_packaging`.\n\n2. Получите дополнительную информацию к заказам: [/v3/posting/fbs/get](#operation/PostingAPI_GetFbsPostingV3).\n\n   В блоке `requirements` указывается:\n   - какие товары подлежат обязательной маркировке;\n   - нужно ли передать номер грузовой таможенной декларации и регистрационный номер партии товара — эту информацию\n     также можно получить с помощью методов [/v3/posting/fbs/list](#operation/PostingAPI_GetFbsPostingListV3)\n     и [/v3/posting/fbs/unfulfilled/list](#operation/PostingAPI_GetFbsPostingUnfulfilledList).\n\n   Дополнительную информацию вы также можете получить по\n   штрихкоду: [/v2/posting/fbs/get-by-barcode](#operation/PostingAPI_GetFbsPostingByBarcode).\n\n3. Проверьте, что коды маркировки соответствуют требованиям системы «Честный ЗНАК» по составу и количеству\n   символов: [/v4/fbs/posting/product/exemplar/validate](#operation/PostingAPI_FbsPostingProductExemplarValidate).\n\n   Передайте маркировку в систему «Честный\n   ЗНАК»: [/v4/fbs/posting/product/exemplar/set](#operation/PostingAPI_SetProductExemplar). При необходимости передайте\n   номера таможенных деклараций и регистрационные номера партии товара или укажите, что их нет.\n\n   Получите статусы передачи\n   маркировок: [/v4/fbs/posting/product/exemplar/status](#operation/PostingAPI_GetProductExemplarStatus).\n\n4. Если товар в отправлении упакован в несколько коробок, передайте их количество: [/v3/posting/multiboxqty/set](#operation/PostingAPI_PostingMultiBoxQtySetV3). Если не сделать этого до сборки, вам придётся объединить все коробки в одну.\n\n5. До окончания времени на сборку подтвердите, что вы собрали\n   заказ: [/v4/posting/fbs/ship](#operation/PostingAPI_ShipFbsPostingV4). Вы не сможете собрать заказ, если не указали\n   коды маркировки для товаров, подлежащих обязательной маркировке.\n\n   При необходимости используйте этот метод, чтобы разделить заказ на несколько отправлений. Например, если в заказе\n   несколько товаров и их необходимо упаковать в разные коробки, так как вместе они не отвечают требованиям к упаковке.\n\n   После использования метода статус отправления изменится на `awaiting_registration`.\n\n   Вы можете использовать метод для частичной\n   сборки: [/v3/posting/fbs/ship/package](#operation/PostingAPI_PackageShipFbsPostingV3).\n\n6. Когда перевозчик обработает отправление, его статус изменится с `awaiting_registration` на `awaiting_delivery`. После\n   этого отправлению будет присвоен трек-номер.\n\n   Для каждого отправления распечатайте этикетку для идентификации в системе\n   Ozon: [/v2/posting/fbs/package-label](#operation/PostingAPI_PostingFBSPackageLabel).\n\n   Передайте отправление в службу доставки. Все статусы от «Доставляется» до «Доставлено» будет передавать служба доставки.\n\nЕсли вы продаёте из Турции и вам нужны декларации Elektronik Ticaret Gümrük Beyannamesi (ETGB) для возврата налоговой пошлины, \nполучите декларации: [/v1/posting/global/etgb](#operation/PostingAPI_GetEtgb).\n\n### Отменить доставку отправления\n\n1. Используйте [/v2/posting/fbs/cancel-reason/list](#operation/PostingAPI_GetPostingFbsCancelReasonList) на любом этапе\n   работы с отправлением, чтобы получить список причин отмены отправления.\n\n2. Затем передайте этот список и номер отправления: [/v2/posting/fbs/cancel](#operation/PostingAPI_CancelFbsPosting).\n\nЧтобы отменить часть товаров в отправлении,\nиспользуйте [/v2/posting/fbs/product/cancel](#operation/PostingAPI_CancelFbsPostingProduct).\n\nЕсли отправление отменит покупатель, статус изменится на `cancelled`.\n\n## Схема rFBS Crossborder\n\n1. Перед началом работы с отправлениями получите список необработанных заказов (отправлений):\n   [/v3/posting/fbs/unfulfilled/list](#operation/PostingAPI_GetFbsPostingUnfulfilledList).\n\n   Если покупатель юридическое лицо, то в блоке `requirements` будет информация о необходимости передать\n   страну-производителя для всех товаров в заказе, у которых она не указана.    \n   Получите список доступных для выбора\n   стран: [/v2/posting/fbs/product/country/list](#operation/PostingAPI_ListCountryProductFbsPostingV2). Затем передайте\n   информацию о\n   стране-производителе: [/v2/posting/fbs/product/country/set](#operation/PostingAPI_SetCountryProductFbsPostingV2).\n\n   Также можно получать список заказов (отправлений): [/v3/posting/fbs/list](#operation/PostingAPI_GetFbsPostingListV3).\n   Он позволяет получить все заказы, используя фильтры с различными статусами. Можно также получить данные аналитики,\n   если поле `with` отправить со значением `analytics_data`.\n\n   Изначально все отправления по API приходят в статусе `awaiting_packaging`.\n\n2. Получите дополнительную информацию к заказам: [/v3/posting/fbs/get](#operation/PostingAPI_GetFbsPostingV3).\n\n   В блоке `requirements` указывается:\n    - какие товары подлежат обязательной маркировке;\n    - нужно ли передать номер грузовой таможенной декларации и регистрационный номер партии товара — эту информацию\n      также можно получить с помощью методов [/v3/posting/fbs/list](#operation/PostingAPI_GetFbsPostingListV3)\n      и [/v3/posting/fbs/unfulfilled/list](#operation/PostingAPI_GetFbsPostingUnfulfilledList).\n\n   Дополнительную информацию вы также можете получить по\n   штрихкоду: [/v2/posting/fbs/get-by-barcode](#operation/PostingAPI_GetFbsPostingByBarcode).\n\n3. Проверьте, что коды маркировки соответствуют требованиям системы «Честный ЗНАК» по составу и количеству\n   символов: [/v4/fbs/posting/product/exemplar/validate](#operation/PostingAPI_FbsPostingProductExemplarValidate).\n\n   Передайте маркировку в систему «Честный\n   ЗНАК»: [/v4/fbs/posting/product/exemplar/set](#operation/PostingAPI_SetProductExemplar). При необходимости передайте\n   номера таможенных деклараций и регистрационные номера партии товара или укажите, что их нет.\n\n   Получите статусы передачи\n   маркировок: [/v4/fbs/posting/product/exemplar/status](#operation/PostingAPI_GetProductExemplarStatus).\n\n4. До окончания времени на сборку подтвердите, что вы собрали\n   заказ: [/v4/posting/fbs/ship](#operation/PostingAPI_ShipFbsPostingV4). Вы не сможете собрать заказ, если не указали\n   коды маркировки для товаров, подлежащих обязательной маркировке.\n\n   При необходимости используйте этот метод, чтобы разделить заказ на несколько отправлений. Например, если в заказе\n   несколько товаров и их необходимо упаковать в разные коробки, так как вместе они не отвечают требованиям к упаковке.\n\n   После использования метода статус отправления изменится на `awaiting_deliver`.\n\n   Вы можете использовать метод для частичной\n   сборки: [/v3/posting/fbs/ship/package](#operation/PostingAPI_PackageShipFbsPostingV3).\n\n5. Если в настройках метода доставки вы задали временной промежуток для передачи отправления в службу доставки, измените\n   статус отправления на `sent_by_seller` — «Отправлено\n   продавцом»: [/v2/fbs/posting/sent-by-seller](#operation/PostingAPI_FbsPostingSentbyseller).\n\n6. После передачи отправления в службу доставки измените статус отправления на `delivering` —\n   «Доставляется»: [/v2/fbs/posting/delivering](#operation/PostingAPI_FbsPostingDelivering).\n\n7. Одновременно с этим, если у отправления есть трек-номер, передайте\n   его: [/v2/fbs/posting/tracking-number/set](#operation/PostingAPI_FbsPostingTrackingNumberSet).\n\n8. Когда курьер едет к покупателю, поменяйте статус отправления на «Последняя\n   миля»: [/v2/fbs/posting/last-mile](#operation/PostingAPI_FbsPostingLastMile).\n\n9. Когда курьер передал отправление покупателю, поменяйте статус на\n   «Доставлено»: [/v2/fbs/posting/delivered](#operation/PostingAPI_FbsPostingDelivered).\n\n## Схема rFBS Crossborder с интегрированной службой доставки\n\n1. Перед началом работы с отправлениями получите список необработанных заказов (отправлений):\n   [/v3/posting/fbs/unfulfilled/list](#operation/PostingAPI_GetFbsPostingUnfulfilledList).\n\n   Если покупатель юридическое лицо, то в блоке `requirements` будет информация о необходимости передать\n   страну-производителя для всех товаров в заказе, у которых она не указана.    \n   Получите список доступных для выбора\n   стран: [/v2/posting/fbs/product/country/list](#operation/PostingAPI_ListCountryProductFbsPostingV2). Затем передайте\n   информацию о\n   стране-производителе: [/v2/posting/fbs/product/country/set](#operation/PostingAPI_SetCountryProductFbsPostingV2).\n\n   Также можно получать список заказов (отправлений): [/v3/posting/fbs/list](#operation/PostingAPI_GetFbsPostingListV3).\n   Он позволяет получить все заказы, используя фильтры с различными статусами. Можно также получить данные аналитики,\n   если поле `with` отправить со значением `analytics_data`.\n\n   Изначально все отправления по API приходят в статусе `awaiting_packaging`.\n\n2. Получите дополнительную информацию к заказам: [/v3/posting/fbs/get](#operation/PostingAPI_GetFbsPostingV3).\n\n   В блоке `requirements` указывается:\n    - какие товары подлежат обязательной маркировке;\n    - нужно ли передать номер грузовой таможенной декларации и регистрационный номер партии товара — эту информацию\n      также можно получить с помощью методов [/v3/posting/fbs/list](#operation/PostingAPI_GetFbsPostingListV3)\n      и [/v3/posting/fbs/unfulfilled/list](#operation/PostingAPI_GetFbsPostingUnfulfilledList).\n\n   Дополнительную информацию вы также можете получить по\n   штрихкоду: [/v2/posting/fbs/get-by-barcode](#operation/PostingAPI_GetFbsPostingByBarcode).\n\n3. Проверьте, что коды маркировки соответствуют требованиям системы «Честный ЗНАК» по составу и количеству\n   символов: [/v4/fbs/posting/product/exemplar/validate](#operation/PostingAPI_FbsPostingProductExemplarValidate).\n\n   Передайте маркировку в систему «Честный\n   ЗНАК»: [/v4/fbs/posting/product/exemplar/set](#operation/PostingAPI_SetProductExemplar). При необходимости передайте\n   номера таможенных деклараций и регистрационные номера партии товара или укажите, что их нет.\n\n   Получите статусы передачи\n   маркировок: [/v4/fbs/posting/product/exemplar/status](#operation/PostingAPI_GetProductExemplarStatus).\n\n4. До окончания времени на сборку подтвердите, что вы собрали\n   заказ: [/v4/posting/fbs/ship](#operation/PostingAPI_ShipFbsPostingV4). Вы не сможете собрать заказ, если не указали\n   коды маркировки для товаров, подлежащих обязательной маркировке.\n\n   При необходимости используйте этот метод, чтобы разделить заказ на несколько отправлений. Например, если в заказе\n   несколько товаров и их необходимо упаковать в разные коробки, так как вместе они не отвечают требованиям к упаковке.\n\n   После использования метода статус отправления изменится на `awaiting_deliver`.\n\n   Вы можете использовать метод для частичной\n   сборки: [/v3/posting/fbs/ship/package](#operation/PostingAPI_PackageShipFbsPostingV3).\n\n5. Для каждого отправления распечатайте этикетку для идентификации в системе\n   Ozon: [/v2/posting/fbs/package-label](#operation/PostingAPI_PostingFBSPackageLabel).\n\n6. Если в настройках метода доставки вы задали временной промежуток для передачи отправления в службу доставки, измените\n   статус отправления на `sent_by_seller` — «Отправлено\n   продавцом»: [/v2/fbs/posting/sent-by-seller](#operation/PostingAPI_FbsPostingSentbyseller).\n\nПередайте отправление в службу доставки. Все статусы от «Доставляется» до «Доставлено» будет передавать служба доставки.\n\n### Отменить доставку отправления\n\n1. Используйте [/v2/posting/fbs/cancel-reason/list](#operation/PostingAPI_GetPostingFbsCancelReasonList) на любом этапе\n   работы с отправлением, чтобы получить список причин отмены отправления.\n\n2. Затем передайте этот список и номер отправления: [/v2/posting/fbs/cancel](#operation/PostingAPI_CancelFbsPosting).\n\nЧтобы отменить часть товаров в отправлении,\nиспользуйте [/v2/posting/fbs/product/cancel](#operation/PostingAPI_CancelFbsPostingProduct).\n\nЕсли отправление отменит покупатель, статус изменится на `cancelled`.\n\n## Как работать с заказами с весовыми товарами (rFBS)\n\nПеред тем, как перевести заказ с весовыми товарами в статус «Ожидает отгрузки» — `awaiting_delivery`, передайте\nуточнённые данные о весе весовых товаров. Для этого после взвешивания во время сборки передайте информацию о весе\nкаждого экземпляра каждого весового SKU через\nметод [/v2/posting/fbs/product/change](#operation/PostingAPI_CancelFbsPosting).\n\nТовар необходимо взвешивать, если при создании товара вы указали, что товар весовой, и добавили к нему атрибуты 20577,\n8933 и 8934.\n\nПосле передачи корректного веса для всех экземпляров всех весовых товаров вы сможете перевести отправление в статус\n«Ожидает отгрузки» — `awaiting_delivery`.\n\nAPI вернёт ошибку 400, если вы:\n\n- взвесили не все экземпляры из отправления,\n- передали значение веса для невесового товара,\n- вес экземпляра не попал в диапазон заданный атрибутами 8933 и 8934.\n\n# Работа с архивом актов\n\n- [/v2/posting/fbs/act/list](#operation/PostingAPI_FbsActList) — получите список сформированных ранее актов.\n- [/v2/posting/fbs/act/get-postings](#operation/PostingAPI_ActPostingList) — получите список отправлений по каждому\n  акту.\n- [/v2/posting/fbs/digital/act/document-sign](#operation/PostingAPI_DigitalActDocumentSign) — подпишите электронные акты\n  о расхождении и излишках, если вы подключены к электронному документообороту (ЭДО).<br>\n  Перед подписанием проверьте статусы актов: [/v2/posting/fbs/act/list](#operation/PostingAPI_FbsActList). В ответе\n  метода поля `act_of_mismatch.document_status` и `act_of_excess.document_status` должны иметь значения `NEED_TO_SIGN`.\n\n# Получите информацию о возвратах товаров\n\n- [/v2/returns/company/fbo](#operation/ReturnsAPI_GetReturnsCompanyFboV2) — получите информацию о возвращённых товарах,\n  которые продаются по схеме FBO.\n\n- [/v2/returns/company/fbs](#operation/ReturnsAPI_GetReturnsCompanyFBS) — получите информацию о возвращённых товарах,\n  которые продаются по схеме FBS.\n\n# Управляйте заявками на отмену\n\nПолучите заявки и информацию о них:\n\n- [/v1/conditional-cancellation/get](#operation/CancellationAPI_GetConditionalCancellation) — получите информацию по\n  заявке на отмену rFBS.\n- [/v1/conditional-cancellation/list](#operation/CancellationAPI_GetConditionalCancellationList) — получите список\n  заявок на отмену rFBS.\n\nПримите решение по новой заявке на отмену — подтвердите или отклоните её:\n\n- [/v1/conditional-cancellation/approve](#operation/CancellationAPI_ConditionalCancellationApprove) — подтвердите заявку\n  на отмену rFBS. Заказ будет автоматически отменён, а деньги вернутся покупателю.\n- [/v1/conditional-cancellation/reject](#operation/CancellationAPI_ConditionalCancellationReject) — отклоните заявку на\n  отмену rFBS. Заказ останется в том же статусе, и его нужно будет доставить покупателю.\n\n# Управляйте чатами\n\nДля получения списка чатов используйте [/v1/chat/list](#operation/ChatAPI_ChatList)\nили [/v2/chat/list](#operation/ChatAPI_ChatListV2). В ответе будут идентификаторы текущих чатов и последних сообщений.\n\nДля отправки сообщений по идентификатору чата используйте методы:\n\n- [/v1/chat/send/message](#operation/ChatAPI_ChatSendMessage) — для отправки текстового сообщения.\n\n- [/v1/chat/send/file](#operation/ChatAPI_ChatSendFile) — для отправки файла или изображения.\n\nДля получения истории чата по идентификатору чата или сообщения используйте методы:\n\n- [/v1/chat/history](#operation/ChatAPI_ChatHistory) — чтобы получить историю по порядку от старых сообщений к новым.\n\n- [/v1/chat/updates](#operation/ChatAPI_ChatUpdates) — чтобы получить историю по порядку от новых сообщений к старым.\n\n- [/v2/chat/history](#operation/ChatAPI_ChatHistoryV2) — чтобы получить историю сообщений. Направление сортировки по\n  умолчанию — от новых сообщений к старым.\n\nЕсли указать идентификатор сообщения, то история начнётся с этого сообщения.\n\nЧтобы создать новый чат с покупателем по номеру отправления,\nвоспользуйтесь [/v1/chat/start](#operation/ChatAPI_ChatStart).\n\nЧтобы отметить сообщение и все сообщения до него прочитанными,\nиспользуйте [/v2/chat/read](#operation/ChatAPI_ChatReadV2).\n\n# Создайте и получите отчёты\n\nПри запросе любого из отчётов сначала возвращается код на создание документа. Отправьте его в запросе метода\n[/v1/report/info](#operation/ReportAPI_ReportInfo) — в ответе вернётся файл отчёта и дополнительная информация.\n\nЧтобы получить список сформированных ранее отчётов, используйте [/v1/report/list](#operation/ReportAPI_ReportList).\n\nМетоды для получения отчётов:\n\n- [/v1/report/products/create](#operation/ReportAPI_CreateCompanyProductsReport) — отчёт с данными о товарах, например\n  Ozon&nbsp;ID, описанием товара, цены, комиссии или габаритов упаковки.\n\n- [/v1/report/transactions/create](#operation/ReportAPI_CreateCompanyTransactionsReport) — отчёт по транзакциям,\n  доступный в личном кабинете продавца.\n\n- [/v1/report/products/prices/create](#operation/ReportAPI_CreateCompanyProductsPricesReport) — отчёт по ценам.\n\n- [/v1/report/stock/create](#operation/ReportAPI_CreateCompanyStockReport) — отчёт по остаткам.\n\n- [/v1/report/products/movement/create](#operation/ReportAPI_CreateProductsMovementReport) — отчёт о перемещении\n  товаров.\n\n- [/v1/report/returns/create](#operation/ReportAPI_CreateCompanyReturnsReport) — отчёт о возвращённых товарах для FBS и\n  rFBS. Отчёт содержит товары, принятые от покупателя, готовые к получению или переданные продавцу.\n\n- [/v1/report/postings/create](#operation/ReportAPI_CreateCompanyPostingsReport) — отчёт об отправлениях.\n\n- [/v1/report/finance/create](#operation/ReportAPI_CreateCompanyFinanceReport) — финансовый отчёт.\n\n# Получите аналитические отчёты\n\n- [/v1/analytics/data](#operation/AnalyticsAPI_AnalyticsGetData) — получите данные аналитики.\n\n  Если укажете период и метрики, которые нужно рассчитать, в ответе будет аналитиĸа, сгруппированная по параметру\n  `dimensions`.\n\n- [/v1/analytics/stock_on_warehouses](#operation/AnalyticsAPI_AnalyticsGetStockOnWarehouses) — получите отчёт по\n  остаткам и товарам в перемещении на складах Ozon.\n\n- [/v1/analytics/item_turnover](#operation/AnalyticsAPI_AnalyticsItemTurnoverDataV3) — получите отчёт по оборачиваемости\n  FBO по категориям за последние 15 дней.\n\n# Получите финансовые отчёты\n\n- [/v3/finance/transaction/list](#operation/FinanceAPI_FinanceTransactionListV3) — получите подробную информацию по\n  транзакциям для отправления.\n\n- [/v3/finance/transaction/totals](#operation/FinanceAPI_FinanceTransactionTotalV3) — получите детальную информацию по\n  итоговым суммам транзакций за указанный период.\n\n# Получите информацию о рейтинге\n\n- [/v1/rating/summary](#operation/RatingAPI_RatingSummaryV1) — получите текущие значения рейтингов продавца.\n\n- [/v1/rating/history](#operation/RatingAPI_RatingHistoryV1) — получите информацию о рейтингах продавца за период и\n  количество штрафных баллов, начисленных в Premium-программе."
      },
      {
        "name": "Disable",
        "x-displayName": "Отключение методов",
        "description": "1 апреля 2023 года мы отключим часть методов. Перейдите на работу с актуальными версиями. Если метода на замену ещё нет,\nследите за обновлениями в [документации](#tag/News) и [Telegram-канале](https://t.me/OzonSellerAPI).\n\nМетоды, которые мы отключим: \n- [/v2/returns/company/fbo](#operation/ReturnsAPI_GetReturnsCompanyFboV2) — переключитесь на [/v3/returns/company/fbo](#operation/ReturnsAPI_GetReturnsCompanyFbo);\n- [/v3/product/info/limit](#operation/ProductAPI_GetProductInfoLimit) — переключитесь на [/v4/product/info/limit](#operation/ProductAPI_GetUploadQuota);\n- [/v1/analytics/stock_on_warehouses](#operation/AnalyticsAPI_AnalyticsGetStockOnWarehouses) — переключитесь на [/v2/analytics/stock_on_warehouses](#operation/AnalyticsAPI_AnalyticsGetStockOnWarehousesV2);\n- [/v1/analytics/item_turnover](#operation/AnalyticsAPI_AnalyticsItemTurnoverDataV3)."
      },
      {
        "name": "News",
        "x-displayName": "Обновления",
        "description": "<br> \n<aside class=\"warning\">\nСледите за обновлениями документации в <a href=\"https://t.me/OzonSellerAPI\">Telegram-канале</a>.\n</aside>\n\n## 27 апреля 2023\n\n| Метод | Что изменилось                                                                     |\n|-------|------------------------------------------------------------------------------------|\n| —     | Обновили инструкцию [**Как получить API-ключ**](#section/Kak-poluchit-API-klyuch). |\n\n## 20 апреля 2023\n\n| Метод                                                                                                                                              | Что изменилось                                                                                       |\n|----------------------------------------------------------------------------------------------------------------------------------------------------|------------------------------------------------------------------------------------------------------|\n| [/v1/finance/cash-flow-statement/list](#operation/FinanceAPI_FinanceCashFlowStatementList)                                                                  | Добавили необязательный параметр `with_details` в запрос метода и параметр `details` в ответ метода. |\n| [/v1/pricing-strategy/competitors/list](#operation/pricing_competitors)    | Добавили метод для получения списка конкурентов.                                                                                                                     | \n| [/v1/pricing-strategy/list](#operation/pricing_list)                       | Добавили метод для получения списка стратегий ценообразования.                                                                                                       | \n| [/v1/pricing-strategy/create](#operation/pricing_create)                   | Добавили метод для создания стратегии ценообразования.                                                                                                               | \n| [/v1/pricing-strategy/info](#operation/pricing_info)                       | Добавили метод для получения информации о стратегии ценообразования.                                                                                                 | \n| [/v1/pricing-strategy/update](#operation/pricing_update)                   | Добавили метод для изменения списка выбранных конкурентов и названия стратегии ценообразования.                                                                      | \n| [/v1/pricing-strategy/products/add](#operation/pricing_items-add)          | Добавили метод для добавления товаров в стратегию ценообразования.                                                                                                   | \n| [/v1/pricing-strategy/strategy-ids-by-product-ids](#operation/pricing_ids) | Добавили метод для проверки привязки товара к стратегии ценообразования.                                                                                             | \n| [/v1/pricing-strategy/products/list](#operation/pricing_items-list)        | Добавили метод для получения списка товаров, которые привязаны к стратегии ценообразования.                                                                          | \n| [/v1/pricing-strategy/products/delete](#operation/pricing_items-delete)    | Добавили метод для удаления товаров из стратегии ценообразования.                                                                                                    | \n| [/v1/pricing-strategy/product/info](#operation/pricing_items-info)         | Добавили метод для получения цены товара у конкурента.                                                                                                               |\n| [/v1/pricing-strategy/status](#operation/pricing_status)                   | Добавили метод для включения и отключения стратегии ценообразования.                                                                                                 | \n| [/v1/pricing-strategy/delete](#operation/pricing_delete)                   | Добавили метод для удаления стратегии ценообразования.                                                                                                               | \n| —                                                                          | В разделе [**Порядок работы с методами**](#tag/Process) добавили подраздел [**Настройте стратегии ценообразования**](#section/Nastrojte-strategii-cenoobrazovaniya). |\n\n## 11 апреля 2023\n\n| Метод                                                                                                                                              | Что изменилось                                                                                                                                |\n|----------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------|\n| [/v1/product/info/subscription](#operation/ProductAPI_GetProductInfoSubscription)                                                                  | Добавили метод для получения количества пользователей, подписанных на товары. |\n| [/v2/product/info](#operation/ProductAPI_GetProductInfoV2)                                                                                         | Добавили параметр `result.price_indexes` в ответ метода.<br><br>Пометили параметр `result.price_index` в ответе как неактуальный.             |\n| [/v2/product/info/list](#operation/ProductAPI_GetProductInfoListV2)<br><br>[/v4/product/info/prices](#operation/ProductAPI_GetProductInfoPricesV4) | Добавили параметр `result.items.price_indexes` в ответ метода.<br><br>Пометили параметр `result.items.price_index` в ответе как неактуальный. |\n| [/v3/posting/fbs/get](#operation/PostingAPI_GetFbsPostingV3)                                                                                       | Добавили параметр `result.substatus` в ответ метода.                                                                                        |\n| [/v3/posting/fbs/list](#operation/PostingAPI_GetFbsPostingListV3)                                                                                  | Добавили параметр `result.postings.substatus` в ответ метода.<br><br>Дополнили описание параметра `result.postings.status` в ответе метода. |\n\n## 10 апреля 2023\n\n| Метод                                                                   | Что изменилось                                                                                                                                                                     |\n|-------------------------------------------------------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [/v1/supply-order/list](#operation/SupplyOrderAPI_GetSupplyOrdersList)  | Добавили метод для получения списка заявок на поставку на склад Ozon.                                                                                                              |\n| [/v1/supply-order/get](#operation/SupplyOrderAPI_GetSupplyOrder)        | Добавили метод для получения информации о заявке на поставку.                                                                                                                      |\n| [/v1/supply-order/items](#operation/SupplyOrderAPI_GetSupplyOrderItems) | Добавили метод для получения списка товаров в заявке на поставку.                                                                                                                  |\n| —                                                                       | Добавили подраздел [**Схема FBO → Получите информацию о заявках на поставку**](#section/Upravlyajte-zakazami-FBO-FBS-i-rFBS/Shema-FBO) в раздел [**Порядок работы с методами**](#tag/Process). |\n\n## 22 марта 2023\n\n| Метод                                                                   | Что изменилось                                                         |\n|-------------------------------------------------------------------------|------------------------------------------------------------------------|\n| [/v3/returns/company/fbs](#operation/ReturnsAPI_GetReturnsCompanyFBSv3) | Добавили новую версию метода для получения информации о возвратах FBS. |\n\n## 21 марта 2023\n\n| Метод                                                                          | Что изменилось                                                                                                           |\n|--------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------|\n| —                                                                              | В раздел [**Пуш-уведомления → Как подключить**](#tag/push_start) добавили IP-адреса, с которых отправляются уведомления. |\n| [/v2/returns/company/fbs](#operation/ReturnsAPI_GetReturnsCompanyFBS)          | Добавили описание статусов `moving`, `disposed` и `disposing` для параметра `filter.status` в запросе метода.            |\n| [/v3/finance/transaction/list](#operation/FinanceAPI_FinanceTransactionListV3) | Дополнили описание параметра `filter.operation_type` в запросе метода.                                                   |\n\n## 14 марта 2023\n\n| Метод | Что изменилось                                                                                                        |\n|-------|-----------------------------------------------------------------------------------------------------------------------|\n| [/v3/finance/transaction/list](#operation/FinanceAPI_FinanceTransactionListV3) | Обновили описание метода: теперь максимальный период, за который можно получить информацию в одном запросе — 1 месяц. |\n\n## 3 марта 2023\n\n| Метод                                                                                         | Что изменилось                                                                      |\n|-----------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------|\n| [/v1/posting/fbs/timeslot/set](#operation/PostingAPI_SetPostingTimeslot) | Добавили метод для переноса даты доставки отправления.                              |\n| [/v1/posting/fbs/timeslot/change-restrictions](#operation/PostingAPI_PostingTimeslotChangeRestrictions) | Добавили метод для получения доступных дат для переноса доставки и количества доступных переносов.|\n\n\n## 22 февраля 2023\n\n| Метод                                                                                        | Что изменилось                                                           |\n|----------------------------------------------------------------------------------------------|--------------------------------------------------------------------------|\n| [/v2/analytics/stock_on_warehouses](#operation/AnalyticsAPI_AnalyticsGetStockOnWarehousesV2) | Добавили новую версию метода для получения отчёта по товарам и остаткам. |\n\n\n## 17 февраля 2023\n\n| Метод                                                                      | Что изменилось                                           |\n|----------------------------------------------------------------------------|----------------------------------------------------------|\n| [/v1/posting/global/etgb](#operation/PostingAPI_GetEtgb) | Добавили метод для получения таможенных деклараций ETGB. |\n\n## 16 февраля 2023\n\n| Метод                                                                                      | Что изменилось                                          |\n|--------------------------------------------------------------------------------------------|---------------------------------------------------------|\n| —     | В разделе [**Пуш-уведомления → Как подключить**](#tag/push_start) обновили инструкцию: теперь подключать пуш-уведомления нужно в личном кабинете.<br><br>В раздел [**Уведомления, которые отправляет Ozon**](#tag/push_types) добавили описания новых типов уведомлений:<br>• [TYPE_NEW_MESSAGE](#section/Novoe-soobshenie-v-chate)<br>• [TYPE_UPDATE_MESSAGE](#section/Soobshenie-v-chate-izmeneno)<br>• [TYPE_MESSAGE_READ](#section/Vashe-soobshenie-prochitano)<br>• [TYPE_CHAT_CLOSED](#section/Chat-zakryt) |\n| [/v1/posting/fbs/package-label/create](#operation/PostingAPI_CreateLabelBatch)<br><br>[/v1/posting/fbs/package-label/get](#operation/PostingAPI_GetLabelBatch) | Добавили методы для асинхронного формирования этикеток. |\n\n## 14 февраля 2023\n\n| Метод                                                                                                                                                                            | Что изменилось                                         |\n|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------|\n| [/v2/returns/company/fbo](#operation/ReturnsAPI_GetReturnsCompanyFboV2)<br>[/v3/product/info/limit](#operation/ProductAPI_GetProductInfoLimit)<br>[/v1/analytics/stock_on_warehouses](#operation/AnalyticsAPI_AnalyticsGetStockOnWarehouses)<br>[/v1/analytics/item_turnover](#operation/AnalyticsAPI_AnalyticsItemTurnoverDataV3) | 1 апреля 2023 отключим эти методы. Добавили предупреждение в описание методов и в раздел [**Отключение методов**](#tag/Disable). |\n| /v1/auto/bookings/get<br>/v1/auto/bookings/list<br>/v1/auto/cbos/list<br>/v1/auto/modifications/list<br>/v1/auto/offers/create<br>/v1/auto/offers/list<br>/v1/auto/offers/update | Удалили раздел **Автомобили** из документации. |\n\n## 13 февраля 2023\n\n| Метод                                                          | Что изменилось                                                                      |\n|----------------------------------------------------------------|-------------------------------------------------------------------------------------|\n| [/v4/product/info/limit](#operation/ProductAPI_GetUploadQuota) | Добавили метод для получения лимитов на ассортимент, создание и обновление товаров. |\n\n## 10 февраля 2023\n\n| Метод                                                                      | Что изменилось                                                               |\n|----------------------------------------------------------------------------|------------------------------------------------------------------------------|\n| [/v1/product/update/discount](#operation/ProductAPI_ProductUpdateDiscount) | \tДобавили метод для установки скидки на уценённые товары, продающиеся по схеме FBS. |\n| [/v2/posting/fbs/act/list](#operation/PostingAPI_FbsActList)               | Обновили описание параметра `filter.status` в запросе.                       |\n| [/v3/category/attribute](#operation/CategoryAPI_GetCategoryAttributesV3)                                                 | Добавили поле `result.attributes.category_dependent` в ответ метода.         |\n\n## 9 февраля 2023\n\n| Метод   | Что изменилось                                                                                                                                                 |\n|---------|----------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| —       | Дополнили таблицу [«Частые ошибки»](#tag/Errors). Добавили описания ошибок для метода [/v2/posting/fbs/act/create](#operation/PostingAPI_PostingFBSActCreate). |\n| [/v2/product/info](#operation/ProductAPI_GetProductInfoV2)<br>[/v1/product/info/list](#operation/ProductAPI_GetProductInfoListV2) | В ответы методов добавили поле `updated_at`: дата последнего обновления товара.  |\n\n## 2 февраля 2023\n\n| Метод                                                                                                                                                                                                               | Что изменилось                                                                                                        |\n|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------|\n| [/v2/product/import](#operation/ProductAPI_ImportProductsV2)<br>[/v1/product/import-by-sku](#operation/ProductAPI_ImportProductsBySKU) | В запросах методов обновили описание параметра `offer_id`: максимальная длина передаваемого значения — 50 символов.   |\n| [/v1/product/update/offer-id](#operation/ProductAPI_ProductUpdateOfferID) | В запросе метода обновили описание параметра `new_offer_id`: максимальная длина передаваемого значения — 50 символов. |\n\n## 26 января 2023\n\n| Метод | Что изменилось |\n|--------|--------------|\n| [/v1/product/certificate/delete](#operation/CertificateDelete) | Добавили метод для удаления сертификата. |\n| [/v1/product/certificate/info](#operation/CertificateInfo) | Добавили метод для получения информация о сертификате. |\n| [/v1/product/certificate/list](#operation/CertificateList) | Добавили метод для получения списка сертификатов. |\n| [/v1/product/certificate/product_status/list](#operation/ProductStatusList) | Добавили метод для получения списка возможных статусов товаров. |\n| [/v1/product/certificate/products/list](#operation/CertificateProductsList) | Добавили метод для получения списка товаров, привязанных к сертификату. |\n| [/v1/product/certificate/unbind](#operation/CertificateUnbind) | Добавили метод для отвязки товара от сертификата. |\n| [/v1/product/certificate/rejection_reasons/list](#operation/RejectionReasonsList) | Добавили метод для получения возможных причин отклонения сертификата. |\n| [/v1/product/certificate/status/list](#operation/CertificateStatusList) | Добавили метод для получения возможных статусов сертификатов. |\n| [/v2/product/certificate/accordance-types/list](#operation/CertificateAccordanceTypes) | Добавили новую версию метода для получения списка типов соответствия требованиям. |\n| — | Дополнили подраздел [Загрузите сертификаты брендов](#section/Zagruzite-sertifikaty-brendov) в разделе [Порядок работы с методами](#tag/Process). |\n\n## 20 января 2023\n\n| Метод | Что изменилось                                                                |\n|-------|-------------------------------------------------------------------------------|\n| [/v2/category/tree](#operation/CategoryAPI_GetCategoryTree)  | В запросе метода обновили значение параметра `language` для китайского языка. |\n\n## 19 января 2023\n\n| Метод                                                                                                                                                       | Что изменилось                                                                                                                                           |\n|-------------------------------------------------------------------------------------------------------------------------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [/v3/posting/multiboxqty/set](#operation/PostingAPI_PostingMultiBoxQtySetV3)                                                                                | Добавили метод для передачи количества коробок в многокоробочных отправлениях.                                                                           |\n| [/v3/posting/fbs/get](#operation/PostingAPI_GetFbsPostingV3)                                                                                                | В ответ метода добавили поля для получения информации о многокоробочных отправлениях: `result.is_multibox` и `result.multi_box_qty`.                     |\n| [/v3/posting/fbs/list](#operation/PostingAPI_GetFbsPostingListV3)<br>[/v3/posting/fbs/unfulfilled/list](#operation/PostingAPI_GetFbsPostingUnfulfilledList) | В ответы методов добавили поля для получения информации о многокоробочных отправлениях: `result.postings.is_multibox` и `result.postings.multi_box_qty`. |\n| [/v2/posting/fbs/act/get-postings](#operation/PostingAPI_ActPostingList)                                                                                    | В ответ метода добавили поле `result.multi_box_qty` для получения количества коробок в многокоробочных отправлениях.                                     |\n\n## 10 января 2023\n\n| Метод                                                                                                                | Что изменилось                                                |\n|----------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------------|\n| —                                                                                                                    | Обновили срок подключения [пуш-уведомлений](#tag/push_start). |\n| /v1/supplier/orders/{orderId}/waybill_acceptance_results<br><br>/v1/supplier/waybill_acceptance_results/{waybillId}  | Убрали методы из документации.                                |\n| [/v3/category/attribute](#operation/CategoryAPI_GetCategoryAttributesV3)  | В ответ метода добавили поле `result.attributes.is_aspect`. |\n| [/v2/product/info](#operation/ProductAPI_GetProductInfoV2)<br>[/v2/product/info/list](#operation/ProductAPI_GetProductInfoListV2)  | В ответы методов добавили поле `barcodes` для получения всех штрихкодов товара. |\n\n<!--\n## 30 декабря 2022\n\n| Метод | Что изменилось |\n|--------|--------------|\n| [/v2/product/import](#operation/ProductAPI_ImportProductsV2) | Вернули возможность загружать Rich-контент. |\n| [/v1/actions/discounts-task/list](#operation/promos_task_list) | Добавили метод для получения списка товаров, которые покупатели хотят купить со скидкой. |\n| [/v1/actions/discounts-task/approve](#operation/promos_task_approve) | Добавили метод для одобрения заявок на скидку. |\n| [/v1/actions/discounts-task/decline](#operation/promos_task_decline) | Добавили метод для отклонения заявок на скидку. |\n\n## 26 декабря 2022\n\n| Метод | Что изменилось |\n|-------|----------------|\n| [/v1/invoice/create-or-update](#operation/invoice_create) | Добавили метод для создания или изменения ссылки на счёт-проформу для возврата НДС продавцам из Турции. |\n| [/v1/invoice/get](#operation/invoice_get) | Добавили метод для получения ссылки на счёт-проформу. |\n| [/v1/invoice/delete](#operation/invoice_delete) | Добавили метод для удаления ссылки на счёт-проформу. |\n\n## 15 декабря 2022\n\n| Метод                                                               | Что изменилось                                                           |\n|---------------------------------------------------------------------|--------------------------------------------------------------------------|\n| [/v3/product/info/limit](#operation/ProductAPI_GetProductInfoLimit) | Добавили метод для получения общего лимита и лимита на загрузку товаров. |\n\n## 7 декабря 2022\n\n| Метод                                                        | Что изменилось                                                                                                                                                                           |\n|--------------------------------------------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [/v2/product/import](#operation/ProductAPI_ImportProductsV2) | Мы временно отключили возможность загружать Rich-контент. О возобновлении работы с ним сообщим отдельно — следите за обновлениями.<br><br>Ранее добавленный Rich-контент останется на витрине. |\n\n## 5 декабря 2022\n\n| Метод                                                                                                                                              | Что изменилось                                                                                                                    |\n|----------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------|\n| [/v2/posting/fbs/act/list](#operation/PostingAPI_FbsActList)<br>[/v2/posting/fbs/act/check-status](#operation/PostingAPI_PostingFBSActCheckStatus) | В ответы методов добавили поля для работы с частичной перевозкой: `is_partial`, `has_postings_for_next_carriage` и `partial_num`. |\n\n## 24 ноября 2022\n\n| Метод                                                                                 | Что изменилось                                                                                                                                    |\n|---------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------|\n| [/v1/posting/carriage-available/list](#operation/PostingAPI_GetCarriageAvailableList) | В ответ метода добавили поля `mandatory_postings_count`, `mandatory_packaged_count`, `cutoff_at` и `warehouse_timezone`.                          |\n| [/v3/posting/fbs/list](#operation/PostingAPI_GetFbsPostingListV3)                     | Обновили описание полей `result.postings.cancellation.cancellation_initiator` и `result.postings.cancellation.cancellation_type` в ответе метода. |\n| [/v3/posting/fbs/get](#operation/PostingAPI_GetFbsPostingV3)                                                                                       | Обновили описание полей `result.cancellation.cancellation_initiator` и `result.cancellation.cancellation_type` в ответе методов.                  |\n\n## 9 ноября 2022\n\n| Метод                                                                              | Что изменилось                                                                                |\n|------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------|\n| [/v1/rating/summary](#operation/RatingAPI_RatingSummaryV1)                         | Добавили метод для получения информации о текущих рейтингах продавца.                         |\n| [/v1/rating/history](#operation/RatingAPI_RatingHistoryV1)                         | Добавили метод для получения информации о рейтингах продавца за период.                       |\n| [/v2/posting/fbs/act/check-status](#operation/PostingAPI_PostingFBSActCheckStatus) | В ответе метода добавили новое значение поля `result.status` — `cancelled`.                   |\n| [/v2/posting/fbs/act/list](#operation/PostingAPI_FbsActList) | В ответе метода дополнили описания полей `document_status` значениями для каждого вида актов. |\n\n\n## 3 ноября 2022\n\n| Метод                                                                                                                                                       | Что изменилось                                                                               |\n|-------------------------------------------------------------------------------------------------------------------------------------------------------------|----------------------------------------------------------------------------------------------|\n| [/v2/product/import](#operation/ProductAPI_ImportProductsV2)                                                                                                | Обновили инструкцию по загрузке видео для товаров.                                           |\n| [/v3/posting/fbs/unfulfilled/list](#operation/PostingAPI_GetFbsPostingUnfulfilledList)<br>[/v3/posting/fbs/list](#operation/PostingAPI_GetFbsPostingListV3) | Обновили описание методов: теперь можно получить список отправлений за период не больше года. |\n| [/v1/posting/fbs/cancel-reason](#operation/PostingAPI_GetPostingFbsCancelReasonV1)  | Добавили метод для получения причин отмены конкретных отправлений.                      |\n\n## 2 ноября 2022\n\n| Метод | Что изменилось                                                                                          |\n|-------|---------------------------------------------------------------------------------------------------------|\n| [/v3/posting/fbs/unfulfilled/list](#operation/PostingAPI_GetFbsPostingUnfulfilledList)  | Обновили описание метода: изменился список статусов отправлений, по которым можно получить информацию.  |\n| [/v2/posting/fbs/digital/act/get-pdf](#operation/PostingAPI_PostingFBSGetDigitalAct)<br>[/v2/posting/fbs/digital/act/check-status](#operation/PostingAPI_PostingFBSDigitalActCheckStatus) | Тестирование методов завершено, их можно использовать.                |\n\n## 21 октября 2022\n\n| Метод                                                                                                                         | Что изменилось                                                                      |\n|-------------------------------------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------|\n| [/v2/posting/fbo/get](#operation/PostingAPI_GetFboPosting)<br>[/v2/posting/fbo/list](#operation/PostingAPI_GetFboPostingList) | В ответы методов добавили поле `products.currency_code` с информацией о валюте цен. |\n\n## 18 октября 2022\n\n| Метод                | Что изменилось                                                                                                                |\n|----------------------|-------------------------------------------------------------------------------------------------------------------------------|\n| [/v2/posting/fbs/act/get-postings](#operation/PostingAPI_ActPostingList) | Добавили метод для получения списка отправлений в акте.                                                                       |\n| [/v2/posting/fbs/act/list](#operation/PostingAPI_FbsActList) | Добавили метод для получения списка актов.                                                                            |\n| [/v2/posting/fbs/digital/act/document-sign](#operation/PostingAPI_DigitalActDocumentSign) | Добавили метод для подписания электронных актов о расхождениях и излишках.                                                    |\n| [/v2/posting/fbs/digital/act/get-pdf](#operation/PostingAPI_PostingFBSGetDigitalAct)| Дополнили в описании, что метод возвращает один из видов документов по отгрузке. Добавили параметр `doc_type` в запрос метода. |\n\n## 12 октября 2022\n\n| Метод                                                                                                                         | Что изменилось                                                                                                   |\n|-------------------------------------------------------------------------------------------------------------------------------|------------------------------------------------------------------------------------------------------------------|\n| [/v2/posting/fbo/get](#operation/PostingAPI_GetFboPosting)<br>[/v2/posting/fbo/list](#operation/PostingAPI_GetFboPostingList) | Обновили описания поля `financial_data.products.picking` в ответах методов. Теперь оно всегда возвращает `null`. |\n| [/v1/warehouse/list](#operation/WarehouseAPI_WarehouseList)                                                                   | В ответ метода добавили поле `status` для обозначения статуса склада.                                            |\n\n## 11 октября 2022\n\n| Метод                | Что изменилось                                                                              |\n|----------------------|---------------------------------------------------------------------------------------------|\n| [/v1/report/discounted/create](#operation/ReportAPI_CreateDiscountedReport)<br>[/v1/report/discounted/info](#operation/ReportAPI_DiscountedReportInfo)<br>[/v1/report/discounted/list](#operation/ReportAPI_DiscountedReportList) | Добавили методы для получения отчётов об уценённых товарах.                                  |\n| [/v2/product/info](#operation/ProductAPI_GetProductInfoV2)<br>[/v2/product/info/list](#operation/ProductAPI_GetProductInfoListV2) | Добавили поля `has_discounted_item`, `is_discounted`, `discounted_stocks` в ответы методов. |\n\n## 7 октября 2022\n\n| Метод                                                                 | Что изменилось                                                                   |\n|-----------------------------------------------------------------------|----------------------------------------------------------------------------------|\n| [/v1/finance/realization](#operation/FinanceAPI_GetRealizationReport) | Добавили метод для получения отчёта о реализации доставленных и возвращённых товаров за месяц. |\n\n## 5 октября 2022\n\n| Метод                                                                               | Что изменилось                                                                   |\n|-------------------------------------------------------------------------------------|----------------------------------------------------------------------------------|\n| [/v1/actions/hotsales/list](#operation/ActionsAPI_GetHotSalesList)                          | Добавили метод для получения списка доступных акций Hot Sale.                    |\n| [/v1/actions/hotsales/products](#operation/ActionsAPI_GetHotSalesProducts)                  | Добавили метод для получения списка товаров, которые участвуют в акции Hot Sale. |\n| [/v1/actions/hotsales/activate](#operation/ActionsAPI_ActivateHotSalesProducts)                  | Добавили метод для добавления товаров в акцию Hot Sale.                          |\n| [/v1/actions/hotsales/deactivate](#operation/ActionsAPI_DeactivateHotSalesProducts) | Добавили метод для удаления товаров из акции Hot Sale.                                   |\n| [/v3/returns/company/fbo](#operation/ReturnsAPI_GetReturnsCompanyFbo)               | Добавили новую версию метода.                                                    |\n\n## 30 сентября 2022\n\n| Метод                                                                                        | Что изменилось                                                                                                                                                                     |\n|----------------------------------------------------------------------------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [/v1/product/update/offer-id](#operation/ProductAPI_ProductUpdateOfferID)                    | В описание метода добавили рекомендации по количеству `offer_id` в массиве — до 250.                                                                                               |\n| [/v1/report/transactions/create](#operation/ReportAPI_CreateCompanyTransactionsReport)       | Добавили предупреждение, что с 30 сентября 2022 года метод будет отключён. Используйте [/v3/finance/transaction/list](#operation/FinanceAPI_FinanceTransactionListV3).             |\n| [/v1/report/finance/create](#operation/ReportAPI_CreateCompanyFinanceReport)                 | Добавили предупреждение, что с 30 сентября 2022 года метод будет отключён. Используйте [/v1/finance/cash-flow-statement/list](#operation/FinanceAPI_FinanceCashFlowStatementList). |\n| [/v1/report/products/prices/create](#operation/ReportAPI_CreateCompanyProductsPricesReport)  | Добавили предупреждение, что с 30 сентября 2022 года метод будет отключён. Используйте [/v4/product/info/prices](#operation/ProductAPI_GetProductInfoPricesV4).                    |\n\n## 29 сентября 2022\n\n| Метод | Что изменилось                                                        |\n|-------|-----------------------------------------------------------------------|\n| —     | Добавили инструкцию по работе с [пуш-уведомлениями](#tag/push_intro). |\n\n## 28 сентября 2022\n\n| Метод | Что изменилось |\n|---|---|\n| [/v2/product/import](#operation/ProductAPI_ImportProductsV2) | Добавили в описание метода, как загрузить в карточку товара таблицу размеров. |\n\n## 19 сентября 2022\n\n| Метод                                                                     | Что изменилось                                                                                                          |\n|---------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------|\n| [/v1/product/update/offer-id](#operation/ProductAPI_ProductUpdateOfferID) | Добавили метод для изменения артикулов товаров из системы продавца.                                                     |\n| /v2/posting/fbs/ship                                                      | Метод устарел, удалили его из документации. Используйте [/v3/posting/fbs/ship](#operation/PostingAPI_ShipFbsPostingV3). |\n| /v1/categories/tree                                                       | Метод устарел, удалили его из документации. Используйте [/v2/category/tree](#operation/CategoryAPI_GetCategoryTree).    |\n\n## 7 сентября 2022\n\n| Метод                                             | Что изменилось                                                                                      |\n|---------------------------------------------------|-----------------------------------------------------------------------------------------------------|\n| /v1/auto/offers/create<br>/v1/auto/offers/update  | Добавили необязательный параметр `pts` в запросы методов.                                           |\n| /v1/auto/offers/list                              | Добавили поля `pts`, `status_info.decline_reasons` и `status_info.state_updated_at` в ответ метода. |\n\n## 5 сентября 2022\n\n| Метод                                                                                          | Что изменилось                                                                                                                                                                                                                                                 |\n|------------------------------------------------------------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [/v1/conditional-cancellation/list](#operation/CancellationAPI_GetConditionalCancellationList) | В теле и примере запроса изменили названия параметров: <br>• `filters.cancellation_initiators` на `filters.cancellation_initiator`;<br>• `filters.posting_numbers` на `filters.posting_number`;<br>• `filters.states` на `filters.state`.                      |\n| [/v1/product/rating-by-sku](#operation/ProductAPI_GetProductRatingBySku)                       | Обновили пример запроса.                                                                                                                                                                                                                                       |\n| [/v3/posting/fbs/unfulfilled/list](#operation/PostingAPI_GetFbsPostingUnfulfilledList)<br>[/v3/posting/fbs/list](#operation/PostingAPI_GetFbsPostingListV3)<br>[/v3/posting/fbs/get](#operation/PostingAPI_GetFbsPostingV3)    | Обновили описание поля `cancellation.cancelled_after_ship` в ответе: метод возвращает `true`, если заказ отменили после сборки отправления.<br><br>Обновили описание поля `tpl_integration_type` в ответе: заменили значение `tpl_tracking` на `3pl_tracking`. |\n\n\n## 1 сентября 2022\n\n| Метод                                                                                                                                 | Что изменилось                                             |\n|---------------------------------------------------------------------------------------------------------------------------------------|------------------------------------------------------------|\n| [/v1/categories/tree](#operation/CategoryAPI_GetCategoryTree3)<br>[/v2/category/tree](#operation/CategoryAPI_GetCategoryTree)<br>[/v3/category/attribute](#operation/CategoryAPI_GetCategoryAttributesV3) | Добавили возможное значение `TR` для параметра `language`. |\n\n## 31 августа 2022\n\n| Метод                                                                                                                                                                                                                                                               | Что изменилось                                                                                        |\n|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------|\n| [/v2/product/import](#operation/ProductAPI_ImportProductsV2)<br>[/v1/product/import/prices](#operation/ProductAPI_ImportProductsPrices)<br>[/v1/product/import-by-sku](#operation/ProductAPI_ImportProductsBySKU)                                                   | В запросы методов добавили параметр `currency_code` для передачи информации о валюте цен.             |\n| [/v3/posting/fbs/get](#operation/PostingAPI_GetFbsPostingV3)<br>[/v3/posting/fbs/list](#operation/PostingAPI_GetFbsPostingListV3)<br>[/v3/posting/fbs/unfulfilled/list](#operation/PostingAPI_GetFbsPostingUnfulfilledList)<br>[/v3/posting/fbs/ship](#operation/PostingAPI_ShipFbsPostingV3)<br>[/v4/posting/fbs/ship](#operation/PostingAPI_ShipFbsPostingV4)<br>[/v4/product/info/prices](#operation/ProductAPI_GetProductInfoPricesV4)<br>[/v2/product/info](#operation/ProductAPI_GetProductInfoV2)<br>[/v2/product/info/list](#operation/ProductAPI_GetProductInfoListV2) | В ответы методов добавили поле `currency_code` с информацией о валюте цен. |\n\n\n## 24 августа 2022\n\n| Метод                                                                                   | Что изменилось                                                                         |\n|-----------------------------------------------------------------------------------------|----------------------------------------------------------------------------------------|\n| [/v1/product/rating-by-sku](#operation/ProductAPI_GetProductRatingBySku)                | Добавили метод для получения контент-рейтинга товара и рекомендаций по его увеличению. |\n\n## 12 августа 2022\n\n| Метод                                                                                                                                                    | Что изменилось                                                                    |\n|----------------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------|\n| [/v1/finance/cash-flow-statement/list](#operation/FinanceAPI_FinanceCashFlowStatementList) | Добавили метод для получения финансовых отчётов. |\n\n## 11 августа 2022\n\n| Метод                                                                                                                                                    | Что изменилось                                                                    |\n|----------------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------|\n| [/v3/category/attribute](#operation/CategoryAPI_GetCategoryAttributesV3)<br>[/v2/category/attribute/values](#operation/CategoryAPI_DictionaryValueBatch) | Дополнили описания методов.                                                       |\n| [/v2/chat/list](#operation/ChatAPI_ChatListV2)                                                                                                           | Добавили метод для получения информации о чатах по указанным фильтрам.            |\n| [/v2/chat/read](#operation/ChatAPI_ChatReadV2)                                                                                                           | Добавили метод для отметки выбранного сообщения и сообщений до него прочитанными. |\n| [/v2/chat/history](#operation/ChatAPI_ChatHistoryV2)                                                                                                     | Добавили метод для получения истории сообщений в чате.                            |\n\n## 8 августа 2022\n\n| Метод                                                                                                                                                                                            | Что изменилось                                                                             |\n|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------|\n| [/v2/posting/fbo/list](#operation/PostingAPI_GetFboPostingList)<br>[/v2/posting/fbo/get](#operation/PostingAPI_GetFboPosting)<br>[/v3/posting/fbs/unfulfilled/list](#operation/PostingAPI_GetFbsPostingUnfulfilledList)<br>[/v3/posting/fbs/list](#operation/PostingAPI_GetFbsPostingListV3)<br>[/v3/posting/fbs/get](#operation/PostingAPI_GetFbsPostingV3) | В ответы методов добавили поля `commissions_currency_code`, `cluster_from` и `cluster_to`. |\n\n## 3 августа 2022\n\n| Метод                                                                                                                                                                                   | Что изменилось                                                                                                 |\n|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|----------------------------------------------------------------------------------------------------------------|\n| [/v2/posting/fbs/digital/act/check-status](#operation/PostingAPI_PostingFBSDigitalActCheckStatus)<br>[/v2/posting/fbs/digital/act/get-pdf](#operation/PostingAPI_PostingFBSGetDigitalAct) | Дополнили описания методов: методы доступны только для продавцов, подключённых к ЭДО.                          |\n| [/v2/posting/fbs/act/check-status](#operation/PostingAPI_PostingFBSActCheckStatus)<br>[/v2/posting/fbs/act/get-pdf](#operation/PostingAPI_PostingFBSGetAct)                                                                                              | Дополнили описания методов: указали, какую информацию получают продавцы, подключённые и не подключённые к ЭДО. |\n| [/v2/product/import](#operation/ProductAPI_ImportProductsV2)                                                                                                                            | Изменили номер атрибута для объединения карточек товаров.                                                      |\n\n## 27 июля 2022\n\n| Метод                                                                                                                                                                                                  | Что изменилось                                                                                |\n|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------|\n| [/v1/conditional-cancellation/approve](#operation/CancellationAPI_ConditionalCancellationApprove)<br>[/v1/conditional-cancellation/reject](#operation/CancellationAPI_ConditionalCancellationReject)   | Дополнили описания методов.                                                                   |\n| [/v1/product/info/discounted](#operation/ProductAPI_GetProductInfoDiscounted)                 | Добавили метод для получения информации об уценке и основном товаре по SKU уценённого товара. |\n\n## 25 июля 2022\n\n| Метод                                                                                  | Что изменилось                                                                                                                                                                                                                                                                              |\n|----------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [/v3/posting/fbs/get](#operation/PostingAPI_GetFbsPostingV3)                           | В запрос метода добавили параметр `with.related_postings`, с помощью которого можно получить информацию о связанных отправлениях.<br>В ответ метода добавили поля `result.related_posting_numbers` и `result.parent_posting_number` с информацией о связанных и родительском отправлениях. |\n| [/v3/posting/fbs/list](#operation/PostingAPI_GetFbsPostingListV3)                      | В ответ метода добавили поле `result.postings.parent_posting_number` с информацией о родительском отправлении.                                                                                                                                                                              |\n| [/v3/posting/fbs/unfulfilled/list](#operation/PostingAPI_GetFbsPostingUnfulfilledList) | В ответ метода добавили поле `result.postings.parent_posting_number` с информацией о родительском отправлении.                                                                                                                                                                              |\n| [/v3/posting/fbs/ship](#operation/PostingAPI_ShipFbsPostingV3)                         | В запрос метода добавили параметры `packages.products.exemplar_info.is_rnpt_absent` и `packages.products.exemplar_info.rnpt` для передачи информации о регистрационном номере партии товара.                                                                                                |\n| [/v3/posting/fbs/ship/package](#operation/PostingAPI_PackageShipFbsPostingV3)          | В запрос метода добавили параметры `products.exemplar_info.is_rnpt_absent` и `products.exemplar_info.rnpt` для передачи информации о регистрационном номере партии товара.                                                                                                                  |\n\n\n## 18 июля 2022\n\n| Метод                        | Что изменилось                                                              |\n|------------------------------|-----------------------------------------------------------------------------|\n| [/v2/product/info](#operation/ProductAPI_GetProductInfoV2)<br>[/v2/product/info/list](#operation/ProductAPI_GetProductInfoListV2) | В ответы методов добавили поле `is_kgt` — признак крупногабаритного товара. |\n\n## 12 июля 2022\n\n| Метод                                                                                                                                                                                                                                                                                                | Что изменилось                                                                |\n|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------|\n| [/v1/posting/fbs/restrictions](#operation/PostingAPI_GetRestrictions)                                                                                                                                                                                                                                | Добавили метод для получения ограничений пункта приёма по номеру отправления. |\n| [/v1/conditional-cancellation/get](#operation/CancellationAPI_GetConditionalCancellation)<br>[/v1/conditional-cancellation/list](#operation/CancellationAPI_GetConditionalCancellationList)<br>[/v1/conditional-cancellation/approve](#operation/CancellationAPI_ConditionalCancellationApprove)<br>[/v1/conditional-cancellation/reject](#operation/CancellationAPI_ConditionalCancellationReject)  | Добавили описания методов.                                                    |\n\n## 7 июля 2022\n\n| Метод | Что изменилось                                                                                                                    |\n|------|-----------------------------------------------------------------------------------------------------------------------------------|\n| [/v2/product/info](#operation/ProductAPI_GetProductInfoV2)                                                                       | Обозначили поля `buybox_price` и `min_ozon_price` как устаревшие в ответе метода. Теперь в них возвращается пустая строка — `\"\"`. |\n| [/v3/posting/fbs/ship](#operation/PostingAPI_ShipFbsPostingV3)<br>[/v4/posting/fbs/ship](#operation/PostingAPI_ShipFbsPostingV4) | Обновили описания методов и описания параметров `packages` в телах запросов.                                                      |\n\n## 6 июля 2022\n\n| Метод | Что изменилось                                                                               |\n|-------|----------------------------------------------------------------------------------------------|\n| [/v1/conditional-cancellation/get](#operation/CancellationAPI_GetConditionalCancellation)  | Добавили метод для получения информации о заявке на отмену товара, проданного по схеме rFBS. |\n| [/v1/conditional-cancellation/list](#operation/CancellationAPI_GetConditionalCancellationList) | Добавили метод для получения списка заявок на отмену товаров, проданных по схеме rFBS.       |\n| [/v1/conditional-cancellation/approve](#operation/CancellationAPI_ConditionalCancellationApprove) | Добавили метод для подтверждения заявок на отмену товара, проданного по схеме rFBS.          |\n| [/v1/conditional-cancellation/reject](#operation/CancellationAPI_ConditionalCancellationReject)                                                | Добавили метод для отклонения заявок на отмену товара, проданного по схеме rFBS.             |\n\n## 5 июля 2022\n\n| Метод | Что изменилось                                                                                    |\n|-------|---------------------------------------------------------------------------------------------------|\n| —     | Добавили в документацию [список методов](#tag/List), которые будут отключены 30 августа 2022 года. |\n\n## 4 июля 2022\n\n| Метод                                   | Что изменилось                                                                                                                    |\n|-----------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------|\n| [/v1/polygon/delete](#operation/PolygonAPI_DeletePolygon) | Обновили тип параметра `polygon_ids` в запросе метода.                                                                            |\n| [/v1/actions](#operation/Promos) | Добавили поле `is_voucher_action` в ответ метода.                                                                                 |\n| [/v1/chat/list](#operation/ChatAPI_ChatList) | Обновили типы полей `first_unread_message_id` и `last_message_id` в ответе метода.                                                |\n| [/v2/product/list](#operation/ProductAPI_GetProductList) | Обновили тип поля `total` в ответе метода.                                                                                        |\n| [/v4/posting/fbs/ship](#operation/PostingAPI_ShipFbsPostingV4) | Обновили тип поля `additional_data` в ответе метода.                                                                              |\n| [/v2/posting/fbo/get](#operation/PostingAPI_GetFboPosting) | Добавили параметр `translit` в тело запроса.                                                                                      |\n| [/v3/posting/fbs/get](#operation/PostingAPI_GetFbsPostingV3) | Добавили параметр `product_exemplars` в тело запроса.                                                                             |\n| [/v3/posting/fbs/unfulfilled/list](#operation/PostingAPI_GetFbsPostingUnfulfilledList)<br>[/v3/posting/fbs/list](#operation/PostingAPI_GetFbsPostingListV3) | Обновили описания полей `addressee.phone` и `customer.phone` в ответах методов. Теперь они всегда возвращают пустые строки `\"\"`. |\n\n## 24 июня 2022\n\n| Метод                                    | Что изменилось                                                     |\n|-------------------------------------------|--------------------------------------------------------------------|\n| [/v3/posting/fbs/get](#operation/PostingAPI_GetFbsPostingV3) | Обновили описание для поля `tpl_integration_type` в ответе метода. |\n\n## 23 июня 2022\n\n| Метод                                    | Что изменилось                                                     |\n|-------------------------------------------|--------------------------------------------------------------------|\n| [/v4/product/info/prices](#operation/ProductAPI_GetProductInfoPricesV4) | Добавили поле `auto_action_enabled` в ответ метода.                |\n\n## 22 июня 2022\n\n| Метод                                                                   | Что изменилось                 |\n|-------------------------------------------------------------------------|--------------------------------|\n| [/v2/posting/fbs/act/create](#operation/PostingAPI_PostingFBSActCreate) | Обновили пример ответа метода. |\n\n## 16 июня 2022\n\n| Метод                                                                                             | Что изменилось                                                                          |\n|---------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------|\n| [/v2/posting/fbs/digital/act/check-status](#operation/PostingAPI_PostingFBSDigitalActCheckStatus) | В описание метода добавили предупреждение, что метод тестируется и пока недоступен.     |\n| [/v2/posting/fbs/digital/act/get-pdf](#operation/PostingAPI_PostingFBSGetDigitalAct)              | В описание метода добавили предупреждение, что метод тестируется и пока недоступен. |\n\n## 10 июня 2022\n| Метод                                                                     | Что изменилось                                                                                                                                    |\n|---------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------|\n| [/v3/posting/fbs/list](#operation/PostingAPI_GetFbsPostingListV3)           | Обновили пример ответа. |\n| [/v1/actions/products/activate](#operation/PromosProductsActivate)                   | Добавили параметр `stock` в пример запроса.                                                                                                  |\n| [/v1/brand/company-certification/list](#operation/BrandAPI_BrandCompanyCertificationList) | Обновили пример запроса. |\n| [/v2/posting/fbs/act/create](#operation/PostingAPI_PostingFBSActCreate) | Добавили параметр `departure_date` в пример запроса. |\n\n## 6 июня 2022\n\n| Метод                      | Что изменилось                                                                                                                                    |\n|----------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------|\n| /v1/auto/bookings/list     | В запрос метода добавили необязательные параметры для фильтрации бронирований по времени создания: `created_at_gt_or_eq` и `created_at_lt_or_eq`. |\n| /v1/auto/cbos/list         | Добавили метод для получения списка автосалонов.                                                                                                  |\n| /v1/auto/modifications/list | Добавили метод для получения списка модификаций.                                                                                                  |\n| /v1/auto/offers/create     | Добавили метод для создания предложений о продаже автомобилей.                                                                                    |\n| /v1/auto/offers/list       | Добавили метод для получения списка предложений о продаже автомобилей.                                                                            |\n| /v1/auto/offers/update     | Добавили метод для обновления предложений о продаже автомобилей.                                                                                  |\n\n## 1 июня 2022\n\n| Метод                                                                                                | Что изменилось                                                                                                                                                                              |\n|------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [/v3/posting/fbs/get](#operation/PostingAPI_GetFbsPostingV3)                                         | В ответ метода добавили поля для работы с регистрационным номером партии товара: `requirements.products_requiring_rnpt`, `exemplars.rnpt`, `exemplars.is_rnpt_absent`.                      |\n| [/v3/posting/fbs/list](#operation/PostingAPI_GetFbsPostingListV3)                                    | В ответ метода добавили поле `reqirements.products_requiring_rnpt`.                                                                                                                         |\n| [/v3/posting/fbs/unfulfilled/list](#operation/PostingAPI_GetFbsPostingUnfulfilledList)               | В ответ метода добавили поле `requirements.products_requiring_rnpt`.                                                                                                                        |\n| [/v4/fbs/posting/product/exemplar/set](#operation/PostingAPI_SetProductExemplar)                     | В запрос метода добавили поля `exemplars.rnpt` и `exemplars.is_rnpt_absent`.                                                                                                                |\n| [/v4/fbs/posting/product/exemplar/status](#operation/PostingAPI_GetProductExemplarStatus)            | В ответ метода добавили поля для работы с регистрационным номером партии товара: `exemplars.rnpt`, `exemplars.is_rnpt_absent`, `exemplars.rnpt_check_status`, `exemplars.rnpt_error_codes`. |\n| [/v4/fbs/posting/product/exemplar/validate](#operation/PostingAPI_FbsPostingProductExemplarValidate) | В запрос и ответ добавили поле `exemplars.rnpt` для регистрационного номера партии товара.                                                                                                                  |\n\n## 30 мая 2022\n\n| Метод                                                                                  | Что изменилось                                                                                                             |\n|----------------------------------------------------------------------------------------|----------------------------------------------------------------------------------------------------------------------------|\n| [/v1/posting/carriage-available/list](#operation/PostingAPI_GetCarriageAvailableList) | Добавили метод для получения списка перевозок, для которых нужно распечатать акт приёма-передачи и транспортную накладную. |\n| [/v4/product/info/prices](#operation/ProductAPI_GetProductInfoPricesV4)                | В ответ метода добавили поле `min_price` — минимальная цена товара после применения всех скидок.                           |\n| [/v4/fbs/posting/product/exemplar/set](#operation/PostingAPI_SetProductExemplar)       | В запросе метода дополнили описание параметра `product_id`.                                                                |\n\n## 20 мая 2022\n\n| Метод                                                                                             | Что изменилось                                                                                                |\n|---------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------|\n| [/v2/posting/fbs/act/check-status](#operation/PostingAPI_PostingFBSActCheckStatus)                | Добавили поле `act_type` в ответ метода.                                                                      |\n| [/v2/posting/fbs/digital/act/check-status](#operation/PostingAPI_PostingFBSDigitalActCheckStatus) | Добавили метод для получения статусов формирования электронных акта приёма-передачи и транспортной накладной. |\n| [/v2/posting/fbs/digital/act/get-pdf](#operation/PostingAPI_PostingFBSGetDigitalAct)              | Добавили метод для получения электронных акта приёма-передачи и транспортной накладной.                       |\n\n## 17 мая 2022\n\n| Метод | Что изменилось|\n|-------||\n| —     | В разделе [**Порядок работы с методами**](#section/Upravlyajte-zakazami-FBO-FBS-i-rFBS) разделили и описали все схемы работы:<br>- [FBO](#section/Upravlyajte-zakazami-FBO-FBS-i-rFBS/Shema-FBO);<br>- [FBS Стандарт](#section/Upravlyajte-zakazami-FBO-FBS-i-rFBS/Shema-FBS-Standart);<br>- [FBS PickUp с подключённой доверительной приёмкой](#section/Upravlyajte-zakazami-FBO-FBS-i-rFBS/Shema-FBS-PickUp-s-doveritelnoj-priyomkoj);<br>- [rFBS Стандарт](#section/Upravlyajte-zakazami-FBO-FBS-i-rFBS/Shema-rFBS-Standart);<br>- [rFBS с доставкой через интегрированную службу](#section/Upravlyajte-zakazami-FBO-FBS-i-rFBS/Shema-rFBS-s-integrirovannoj-sluzhboj-dostavki);<br>- [rFBS Crossborder](#section/Upravlyajte-zakazami-FBO-FBS-i-rFBS/Shema-rFBS-Crossborder);<br>- [rFBS Crossborder с интегрированной службой доставки](#section/Upravlyajte-zakazami-FBO-FBS-i-rFBS/Shema-rFBS-Crossborder-s-integrirovannoj-sluzhboj-dostavki);<br>- [rFBS Агрегатор](#section/Upravlyajte-zakazami-FBO-FBS-i-rFBS/Shema-rFBS-Agregator). |\n| [/v3/posting/fbs/get](#operation/PostingAPI_GetFbsPostingV3) | В ответ метода добавили блок `courier` с информацией о курьере. |\n| [/v4/fbs/posting/product/exemplar/status](#operation/PostingAPI_GetProductExemplarStatus)                                                         | В ответ метода добавили поле `status`.                          |\n\n## 16 мая 2022\n\n| Метод                                                                                             | Что изменилось                                                  |\n|---------------------------------------------------------------------------------------------------|-----------------------------------------------------------------|\n| [/v4/product/info/prices](#operation/ProductAPI_GetProductInfoPricesV4)                           | В описание метода добавили ограничение на количество товаров.   |\n| [/v4/posting/fbs/ship](#operation/PostingAPI_ShipFbsPostingV4)                                    | В параметры запроса добавили авторизацию.                       |\n| [/v2/returns/company/fbs](#operation/ReturnsAPI_GetReturnsCompanyFBS)                             | Обновили пример запроса.                                        |\n| [/v1/product/pictures/import](#operation/ProductAPI_ProductImportPictures)                        | Убрали параметр `primary_image` из запроса.                     |\n| [/v2/posting/fbs/act/get-container-labels](#operation/PostingAPI_PostingFBSActGetContainerLabels) | Обновили пример запроса.                                        |\n\n## 6 мая 2022\n\n| Метод                                                                        | Что изменилось                                                  |\n|------------------------------------------------------------------------------|-----------------------------------------------------------------|\n| [/v3/category/attribute](#operation/CategoryAPI_GetCategoryAttributesV3)     | В описание метода добавили ограничение на количество категорий. |\n| [/v2/product/info](#operation/ProductAPI_GetProductInfoV2)                   | Дополнили пример ответа описанием поля `sources`.               |\n| [/v3/products/info/attributes](#operation/ProductAPI_GetProductAttributesV3) | Обновили пример запроса.                                        |\n\n## 5 мая 2022\n\n| Метод                                                                   | Что изменилось                                                                                                                   |\n|-------------------------------------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------|\n| [/v4/product/info/prices](#operation/ProductAPI_GetProductInfoPricesV4) | Добавили новую версию метода для получения информации о цене товара.                                                             |\n| /v3/product/info/prices                                                 | Метод устарел, удалили его из документации. Используйте [/v4/product/info/prices](#operation/ProductAPI_GetProductInfoPricesV4). |\n\n## 28 апреля 2022\n\n| Метод                                                                     | Что изменилось                                                                                          |\n|---------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------|\n| [/v1/product/import/prices](#operation/ProductAPI_ImportProductsPrices)   | Добавили в запрос параметр `auto_action_enabled` для включения и выключения автоприменения акций. |\n\n## 21 апреля 2022\n\n| Метод                                                                         | Что изменилось                                                                                                                |\n|-------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------|\n| [/v2/posting/fbs/package-label](#operation/PostingAPI_PostingFBSPackageLabel) | Заменили слово «маркировка» на «этикетка» и добавили предупреждение, что при работе по схеме rFBS этикетки печатать не нужно. |\n| [/v1/warehouse/list](#operation/WarehouseAPI_WarehouseList)                   | Дополнили схему ответа метода.                                                                                                |\n\n## 18 апреля 2022\n\n| Метод                                                                                                | Что изменилось                                                                                      |\n|------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------|\n| [/v4/fbs/posting/product/exemplar/status](#operation/PostingAPI_GetProductExemplarStatus)                  | В ответе метода описали возможные статусы проверки маркировки в поле `mandatory_mark_check_status`. |\n| [/v4/fbs/posting/product/exemplar/set](#operation/PostingAPI_SetProductExemplar)                     | Дополнили описание метода.                                                                          |\n| [/v4/fbs/posting/product/exemplar/validate](#operation/PostingAPI_FbsPostingProductExemplarValidate) | Дополнили описание метода.                                                                          |\n| [/v1/report/products/create](#operation/ReportAPI_CreateCompanyProductsReport)                       | Обновили описание метода.                                                                           |\n| [/v2/posting/fbs/cancel-reason/list](#operation/PostingAPI_MoveFbsPostingToAwaitingDelivery)         | Обновили описание поля `id` в ответе метода.                                                        |\n\n## 14 апреля 2022\n\n| Метод                                                                                                                                                                                                                                                          | Что изменилось                         |\n|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|----------------------------------------|\n| [/v3/product/info/stocks](#operation/ProductAPI_GetProductInfoStocksV3)<br>[/v2/product/list](#operation/ProductAPI_GetProductList)<br>[/v3/product/info/prices](#operation/ProductAPI_GetProductInfoPricesV3)<br>[/v1/chat/list](#operation/ChatAPI_ChatList) | Дополнили примеры запросов и ответов.  |\n\n## 11 апреля 2022\n\n| Метод                                                                                                | Что изменилось                       |\n|------------------------------------------------------------------------------------------------------|--------------------------------------|\n| [/v4/fbs/posting/product/exemplar/validate](#operation/PostingAPI_FbsPostingProductExemplarValidate)<br>[/v4/fbs/posting/product/exemplar/set](#operation/PostingAPI_SetProductExemplar)<br>[/v4/fbs/posting/product/exemplar/status](#operation/PostingAPI_GetProductExemplarStatus)<br>[/v4/posting/fbs/ship](#operation/PostingAPI_ShipFbsPostingV4) | Добавили примеры запросов и ответов. |\n\n## 7 апреля 2022\n\n| Метод                                                                                     | Что изменилось                                                                                                                                                                                                                 |\n|-------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [/v4/fbs/posting/product/exemplar/validate](#operation/PostingAPI_FbsPostingProductExemplarValidate)  | Добавили метод для предварительной проверки кодов маркировки на соответствие требованиям системы «Честный ЗНАК» по количеству и составу символов.                                                                              |\n| [/v4/fbs/posting/product/exemplar/set](#operation/PostingAPI_SetProductExemplar)          | Добавили метод для проверки экземпляров на наличие в обороте в системе «Честный ЗНАК» и сохранения данных этих экземпляров.                                                                                                    |\n| [/v4/fbs/posting/product/exemplar/status](#operation/PostingAPI_GetProductExemplarStatus) | Добавили метод, который возвращает статусы проверки экземпляров, переданных в методе [/v4/fbs/posting/product/exemplar/set](#operation/PostingAPI_SetProductExemplar).                                                         |\n| [/v4/posting/fbs/ship](#operation/PostingAPI_ShipFbsPostingV4)                            | Новая версия метода для разделения заказа на отправления и перевода в статус `awaiting_deliver`. Отличается от [/v3/posting/fbs/ship](#operation/PostingAPI_ShipFbsPostingV3) отсутствием в запросе параметра `exemplar_info`. |\n| [/v3/posting/fbs/get](#operation/PostingAPI_GetFbsPostingV3)<br>[/v3/posting/fbs/list](#operation/PostingAPI_GetFbsPostingListV3)<br>[/v3/posting/fbs/unfulfilled/list](#operation/PostingAPI_GetFbsPostingUnfulfilledList) | В блок ответа `requirements` добавили поле `products_requiring_mandatory_mark`, которое возвращает список товаров, подлежащих обязательной маркировке.                                                                         |\n| /v2/posting/fbs/unfulfilled/list                                                          | Метод устарел, убрали его из документации. Используйте [/v3/posting/fbs/unfulfilled/list](#operation/PostingAPI_GetFbsPostingUnfulfilledList).                                                                                 |\n| /v2/posting/fbs/list                                                                                          | Метод устарел, убрали его из документации. Используйте [/v3/posting/fbs/list](#operation/PostingAPI_GetFbsPostingListV3).                                                                                                      |\n| /v2/posting/fbs/product/mandatory-mark/is-required<br>/v2/posting/fbs/product/mandatory-mark/validate| Убрали устаревшие методы из документации.                                                                                                                                                                                      |\n\n## 5 апреля 2022\n\n| Метод                                                           | Что изменилось                                                                                                                                             |\n|-----------------------------------------------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| —                                                               | В раздел [**Порядок работы с методами**](#tag/Process) добавили предупреждение о блокировке доступа к API при потенциально вредоносных запросах к системе. | \n| /v1/auto/bookings/get   | Добавили метод для получения информации о бронировании автомобиля по его идентификатору.                                                                   |\n| /v1/auto/bookings/list | Добавили метод для получения списка бронирований автомобилей.                                                                                              |\n\n## 1 апреля 2022\n\n| Метод                                                                   | Что изменилось                                                                    |\n|-------------------------------------------------------------------------|-----------------------------------------------------------------------------------|\n| [v2/products/stocks](#operation/ProductAPI_ProductsStocksV2)            | Добавили уточнение об обновлении остатков крупногабаритных товаров.               |\n| [/v1/product/import/prices](#operation/ProductAPI_ImportProductsPrices) | Добавили уточнение о разнице новой и старой цен.                                  |\n| [/v2/product/import](#operation/ProductAPI_ImportProductsV2)            | Добавили уточнение, что для некоторых характеристик можно использовать HTML-теги. |\n\n## 30 марта 2022\n\n| Метод                                                                | Что изменилось            |\n|----------------------------------------------------------------------|---------------------------|\n| [/v3/posting/fbs/list](#operation/PostingAPI_GetFbsPostingListV3)    | Обновили описание метода. |\n\n## 29 марта 2022\n\n| Метод                                                                           | Что изменилось                                                                  |\n|---------------------------------------------------------------------------------|---------------------------------------------------------------------------------|\n| [/v2/posting/fbs/product/change](#operation/PostingAPI_ChangeFbsPostingProduct) | Удалили параметры `quantity` и `weightAdjust` из массива  `items` в запросе.    |\n| [/v3/posting/fbs/list](#operation/PostingAPI_GetFbsPostingListV3)               | В параметр запроса `status` добавили описание значения `awaiting_registration`. |\n| [/v3/posting/fbs/list](#operation/PostingAPI_GetFbsPostingV3)                   | В поле ответа `tpl_integration_type` добавили описание значения `aggregator`.   |\n| [/v2/posting/fbs/act/create](#operation/PostingAPI_PostingFBSActCreate)                                                                            | Добавили параметр `departure_date` в запрос метода.                             |\n\n\n## 25 марта 2022\n\n| Метод                                                                                                                             | Что изменилось                                                |\n|-----------------------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------------|\n| [/v1/product/pictures/import](#operation/ProductAPI_ProductImportPictures)                                                               | Добавили метод для загрузки и обновления изображений товаров. |\n| [/v1/product/pictures/info](#operation/ProductAPI_ProductInfoPictures)                                                                 | Добавили метод для получения статуса загрузки изображений.    |\n\n## 23 марта 2022\n\n| Метод                                                                                                                             | Что изменилось                                                                                       |\n|-----------------------------------------------------------------------------------------------------------------------------------|------------------------------------------------------------------------------------------------------|\n| [/v1/product/info/stocks-by-warehouse/fbs](#operation/ProductAPI_ProductStocksByWarehouseFbs)                              | Добавили метод для получения остатков на складах продавца.                                           |\n| [/v2/product/info](#operation/ProductAPI_GetProductInfoV2)<br>[/v2/product/info/list](#operation/ProductAPI_GetProductInfoListV2) | Добавили параметры `fbo_sku` и `fbs_sku` в ответы методов.                                           |\n| [/v3/product/info/stocks](#operation/ProductAPI_GetProductInfoStocksV3)                                                           | Обновили схему ответа метода.                                                                        |\n| —                                                                                                                                 | Дополнили таблицу [«Частые ошибки»](#tag/Errors). Добавили уточнение, что Seller API работает по UTC. |\n| [/v1/product/import/stocks](#operation/ProductAPI_ImportProductsStocks)                                                           | Дополнили описание метода.                                                                           |\n| [/v1/warehouse/list](#operation/WarehouseAPI_WarehouseList)                                                                       | Дополнили описание параметра `warehouse_id` в запросе метода.                                        |\n| [/v1/chat/list](#operation/ChatAPI_ChatList)                                                                                      | Дополнили описание метода и исправили пример запроса.                                                |\n| [/v1/chat/start](#operation/ChatAPI_ChatStart)                                                                                    | Исправили пример запроса.                                                                            |\n| [/v3/posting/fbs/ship/package](#operation/PostingAPI_PackageShipFbsPostingV3)                                                     | Дополнили описание метода.                                                                           |\n| [/v2/posting/fbs/product/cancel](#operation/PostingAPI_CancelFbsPostingProduct)                                                   | Добавили описание метода.                                                                            |\n| [/v2/posting/fbs/act/create](#operation/PostingAPI_PostingFBSActCreate)                                                           | Дополнили описание метода.                                                                           |\n| [/v3/posting/fbs/ship](#operation/PostingAPI_ShipFbsPostingV3)                                                                    | Дополнили описание метода.                                                                           |\n| [/v2/posting/fbs/act/create](#operation/PostingAPI_PostingFBSActCreate)                                                           | Добавили описание параметра `containers_count`.                                                      |\n| [/v2/products/stocks](#operation/ProductAPI_ProductsStocksV2)                                                                                                                              | Добавили описание метода.                                                                            |\n\n## 14 марта 2022\n\n| Метод | Что изменилось                         |\n|------|----------------------------------------|\n| [/v2/posting/fbs/package-label](#operation/PostingAPI_PostingFBSPackageLabel) | Обновили схему и пример ответа метода. |\n\n## 11 марта 2022\n\n| Метод                                                                                                                                   | Что изменилось                                                                                   |\n|-----------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------|\n| [/v1/chat/list](#operation/ChatAPI_ChatList) | Обновили пример запроса метода. |\n| [/v2/category/attribute/values](#operation/CategoryAPI_DictionaryValueBatch)<br>[/v1/product/import-by-sku](#operation/ProductAPI_ImportProductsBySKU)<br>[/v1/products/geo-restrictions-catalog-by-filter](#operation/ProductAPI_GetGeoRestrictionsV1)<br>[/v1/product/upload_digital_codes/info](#operation/ProductAPI_UploadDigitalCodeInfo)<br>[/v1/product/certificate/accordance-types](#operation/ProductAPI_ProductCertificateAccordanceTypes)<br>[/v1/product/certification/list](#operation/ProductAPI_ProductCertificationList)<br>[/v3/posting/fbs/unfulfilled/list](#operation/PostingAPI_GetFbsPostingUnfulfilledList)<br>[/v2/posting/fbs/ship](#operation/PostingAPI_ShipFbsPosting)<br>[/v2/posting/fbs/act/get-container-labels](#operation/PostingAPI_PostingFBSActGetContainerLabels)<br>[/v2/fbs/posting/sent-by-seller](#operation/PostingAPI_FbsPostingSentbyseller)<br>[/v2/returns/company/fbo](#operation/ReturnsAPI_GetReturnsCompanyFboV2)<br>[/v1/supplier/orders/{orderId}/waybill_acceptance_results](#operation/SupplierAPI_SupplierContractorsWaybillAcceptance)<br>[/v1/report/products/movement/create](#operation/ReportAPI_CreateProductsMovementReport)<br>[/v2/product/list](#operation/ProductAPI_GetProductList)<br>[/v3/product/info/prices](#operation/ProductAPI_GetProductInfoPricesV3)<br>[/v3/product/info/stocks](#operation/ProductAPI_GetProductInfoStocksV3)<br>[/v3/products/info/attributes](#operation/ProductAPI_GetProductAttributesV3) | Добавили в методы примеры запросов и ответов. |\n\n## 5 марта 2022\n\n| Метод                                                                                                                                   | Что изменилось                                                                                   |\n|-----------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------|\n| [/v1/product/import/prices](#operation/ProductAPI_ImportProductsPrices) | Параметр `premium_price` больше не используется. Удалили его из описания метода. |\n| [/v1/chat/list](#operation/ChatAPI_ChatList) | В запрос добавили параметры `first_unread_message_id` и `unread_count` для отображения дополнительной информации в ответе.<br><br>В ответ добавили параметры `first_unread_message_id`, `unread_count` и `total_unread_count`. |\n| [/v2/category/attribute/values](#operation/CategoryAPI_DictionaryValueBatch) | Изменили называние метода со «Справочник характеристик» на «Справочник значений характеристики».<br><br>Изменили описание параметра `attribute_id` в запросе. |\n| [/v3/posting/fbs/list](#operation/PostingAPI_GetFbsPostingListV3) | В описание параметра `tpl_integration_type` добавили описание значения `aggregator`. |\n\n## 1 марта 2022\n\n| Метод                                                                                                                                   | Что изменилось                                                                                   |\n|-----------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------|\n| — | Появился [Telegram-канал для отслеживания обновлений документации Seller API](https://t.me/+vIpW5bTFZBllMTNi). Добавили информацию про него в [документацию](#tag/News). |\n| [/v2/posting/fbs/cancel](#operation/PostingAPI_CancelFbsPosting) | Дополнили описание метода значениями поля `cancel_reason_id`. |\n\n\n## 21 февраля 2022\n\n| Метод                                                                                                                                   | Что изменилось                                                                                   |\n|-----------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------|\n| /v1/product/list | Метод устарел, убрали его из документации. Используйте [/v2/product/list](#operation/ProductAPI_GetProductList). |\n| [/v2/product/list](#operation/ProductAPI_GetProductList) | Добавили новую версию метода для получения списка продуктов. | \n| /v2/products/info/prices | Метод устарел, убрали его из документации. Используйте [/v3/products/info/prices](#operation/ProductAPI_ImportProductsPrices). |\n| [/v3/products/info/prices](#operation/ProductAPI_ImportProductsPrices) | Добавили новую версию метода для получения информации о цене товара. |\n| /v2/product/info/stocks | Метод устарел, убрали его из документации. Используйте [/v3/product/info/stocks](#operation/ProductAPI_GetProductInfoStocksV3). |\n| [/v3/product/info/stocks](#operation/ProductAPI_GetProductInfoStocksV3) | Добавили новую версию метода для получения информации о количестве товаров на складах. |\n| /v2/products/info/attributes | Метод устарел, убрали его из документации. Используйте [/v3/products/info/attributes](#operation/ProductAPI_GetProductAttributesV3). |\n| [/v3/products/info/attributes](#operation/ProductAPI_GetProductAttributesV3) | Добавили новую версию метода для получения описания характеристик товара. |\n\n## 17 февраля 2022\n\n| Метод                                                                                                                                   | Что изменилось                                                                                   |\n|-----------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------|\n| [/v3/posting/fbs/ship](#operation/PostingAPI_ShipFbsPostingV3) | Добавили параметры `with` и `additional_info` в ответ для отображения дополнительной информации об отправлении.<br>Добавили в ответ поля `additional_data`, `posting_number`, `posting_number`, `mandatory_mark`, `name`, `offer_id`, `price`, `quantity` и `sku` для отображения дополнительной информации. |\n| [/v1/warehouse/list](#operation/WarehouseAPI_WarehouseList) | Добавили в ответ поле `has_entrusted_acceptance` для обозначения наличия доверительной приёмки на складе. |\n\n## 11 февраля 2022\n\n| Метод                                                                                                                                   | Что изменилось                                                                                   |\n|-----------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------|\n| — | Добавили [таблицу с описанием частых ошибок](#tag/Errors). |\n\n## 10 февраля 2022\n\n| Метод                                                                                                                                   | Что изменилось                                                                                   |\n|-----------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------|\n| [/v2/posting/fbo/list](#operation/PostingAPI_GetFboPostingList) | Обновили описание поля `status` в запросе. |\n\n## 8 февраля 2022\n\n| Метод                                                                                                                                   | Что изменилось                                                                                   |\n|-----------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------|\n| [/v2/product/import](#operation/ProductAPI_ImportProductsV2) | Обновили описание параметра `old_price`. |\n| [/v2/products/stocks](#operation/ProductAPI_ProductsStocksV2) | Добавили описание ошибки `NON_KGT_ON_KGT_WAREHOUSE`. |\n| [/v2/posting/fbo/list](#operation/PostingAPI_GetFboPostingList) | Обновили описание поля `status` в ответе. |\n| /v1/product/list | Добавили пример запроса. |\n\n## 2 февраля 2022\n\n| Метод                                                                                                                                   | Что изменилось                                                                                   |\n|-----------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------|\n| [/v2/product/import](#operation/ProductAPI_ImportProductsV2) | В запрос метода добавили поля `geo_names` и `service_type`. |\n| [/v1/products/geo-restrictions-catalog-by-filter](#operation/ProductAPI_GetGeoRestrictionsV1) | Добавили метод для получения геоограничений для услуг. |\n\n## 31 января 2022\n\n| Метод                                                                                                                                   | Что изменилось                                                                                   |\n|-----------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------|\n| [/v1/product/upload_digital_codes/info](#operation/ProductAPI_UploadDigitalCodeInfo) | Добавили метод для проверки статуса загрузки кода активации для услуг и цифровых товаров. |\n\n## 27 января 2022\n\n| Метод                                                                                                                                   | Что изменилось                                                                                   |\n|-----------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------|\n| [/v2/returns/company/fbs](#operation/ReturnsAPI_GetReturnsCompanyFBS) | Изменили описания значений поля `status`. |\n\n## 12 января 2022\n\n| Метод                                                                                                                                   | Что изменилось                                                                                   |\n|-----------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------|\n| /v1/product/list | Добавили описания к фильтрам `visibility` и новые значения для фильтра `visibility`: `OVERPRICED_WITH_STOCK` и `PARTIAL_APPROVED`. |\n\n## 11 января 2022\n\n| Метод                                                                                                                                   | Что изменилось                                                                                   |\n|-----------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------|\n| [/v2/product/info/limit](#operation/ProductAPI_GetProductInfoLimitV2) | Добавили метод для получения значения лимита на загрузку и обновление товаров. |\n| [/v2/product/import](#operation/ProductAPI_ImportProductsV2) | Добавили информацию про поддержку PNG формата. |\n| [/v2/posting/fbs/product/cancel](#operation/PostingAPI_CancelFbsPostingProduct) | Добавили примеры запроса и ответа. |\n| [/v3/posting/fbs/ship/package](#operation/PostingAPI_PackageShipFbsPostingV3) | Дополнили описание ответа. |\n| [/v3/category/attribute](#operation/CategoryAPI_GetCategoryAttributesV3) | В ответе метода изменили название параметра `categoryId` на `category_id`. |\n| [/v1/report/postings/create](#operation/ReportAPI_CreateCompanyPostingsReport) | Дополнили описание параметра `delivery_schema` в запросе. |\n| [/v3/posting/fbs/ship](#operation/PostingAPI_ShipFbsPostingV3) | Дополнили описание параметра `product_id` в запросе. |\n| [/v2/posting/fbs/package-label](#operation/PostingAPI_PostingFBSPackageLabel) | Дополнили описание метода рекомендацией по времени запроса. |\n| [/v2/products/delete](#operation/ProductAPI_DeleteProducts) | Изменили лимит по количеству идентификаторов в одном запросе с 1000 на 500. |\n| [/v2/product/info/prices](#operation/ProductAPI_GetProductInfoPricesV2) | В ответе метода изменили название параметра `discountValue` на `discount_value`. |\n| [/v3/finance/transaction/list](#operation/FinanceAPI_FinanceTransactionListV3) | Добавили новое значение `OperationMarketplaceServicePremiumCashback` для параметра `operation_type`. |\n| [/v1/supplier/orders/{orderId}/waybill_acceptance_results](#operation/SupplierAPI_SupplierContractorsWaybillAcceptance)<br>[/v1/supplier/waybill_acceptance_results/{waybillId}](#operation/SupplierAPI_SupplierContractorsWaybillAcceptanceWaybillId)| Добавили пример URL запроса. |\n| [/v1/product/import/prices](#operation/ProductAPI_ImportProductsPrices) | Дополнили описание полей `price` и `old_price`. |\n| [/v2/product/import](#operation/ProductAPI_ImportProductsV2) | Дополнили описание информацией по загрузке видео. |\n\n## 10 января 2022\n\n| Метод                                                                                                                                   | Что изменилось                                                                                   |\n|-----------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------|\n| [/v3/posting/fbs/unfulfilled/list](#operation/PostingAPI_GetFbsPostingUnfulfilledList)<br>[/v3/posting/fbs/list](#operation/PostingAPI_GetFbsPostingListV3)<br>[/v3/posting/fbs/get](#operation/PostingAPI_GetFbsPostingV3) | Удалили поле `product_exemplars` из параметра `with` в ответах методов. |\n| /v2/finance/transaction/list          | Метод устарел, убрали его из документации. Используйте [/v3/finance/transaction/list](#operation/FinanceAPI_FinanceTransactionList). |\n\n## 14 декабря 2021\n\n| Метод                                                                                                                                   | Что изменилось                                                                                   |\n|-----------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------|\n| [/v1/analytics/data](#operation/ReportAPI_CreateProductsMovementReport) | Дополнили описание поля `metrics`. |\n\n## 9 декабря 2021\n\n| Метод                                                                                                                                   | Что изменилось                                                                                   |\n|-----------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------|\n| [/v2/fbs/posting/sent-by-seller](#operation/PostingAPI_FbsPostingSentbyseller) | Добавили метод для перевода отправления в статус «Отправлено продавцом». |\n| [/v1/polygon/create](#operation/PolygonAPI_CreatePolygon) | Добавили метод для создания полигона доставки. |\n| [/v1/polygon/bind](#operation/PolygonAPI_BindPolygon) | Добавили метод для связывания полигона доставки с методом доставки. |\n| [/v1/polygon/delete](#operation/PolygonAPI_DeletePolygon) | Добавили метод для удаления полигона. |\n\n\n## 6 декабря 2021\n\n| Метод                                                                                                                                   | Что изменилось                                                                                   |\n|-----------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------|\n| /pass/create<br>/pass/get/last<br>/pass/update | Удалили устаревшие методы из документации. |\n| [/v1/product/import/prices](#operation/ProductAPI_ImportProductsPrices) | Добавили в запрос параметр `min_price` — минимальная цена товара после применения акций. |\n| [/v2/product/info/prices](ProductAPI_GetProductInfoPricesV2)<br>[/v2/product/info](#operation/ProductAPI_GetProductInfoV2)<br>[/v2/product/info/list](#operation/ProductAPI_GetProductInfoListV2) | Добавили в ответ параметр `min_price` — минимальная цена товара после применения акций. |\n\n## 3 декабря 2021\n\n| Метод                                                                                                                                   | Что изменилось                                                                                   |\n|-----------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------|\n| —                                                                                          | Добавили примеры запросов и ответов к методам.                                                                                          |\n\n## 18 ноября 2021\n\n| Метод                                                                                                                                   | Что изменилось                                                                                   |\n|-----------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------|\n| — | Исправили описание методов в разделе [Получите информацию о складах](#section/Poluchite-informaciyu-o-skladah). |\n| [/v3/posting/fbs/get](#operation/PostingAPI_GetFbsPostingV3) <br><br> [/v3/posting/fbs/list](#operation/PostingAPI_GetFbsPostingListV3) <br><br> [/v3/posting/fbs/unfulfilled/list](#operation/PostingAPI_GetFbsUnfulfilledPostingList) | Исправили описание поля `delivering_date` — это дата передачи отправления в доставку. |\n| [/v2/finance/transaction/list](#operation/FinanceAPI_FinanceTransactionList) | Добавили предупреждение, что метод устарел. |\n| [/v3/finance/transaction/list](#operation/FinanceAPI_FinanceTransactionListV3) | Дополнили описание: максимальный период, за который можно получить информацию в одном запросе — 3 месяца. |\n\n## 10 ноября 2021\n\n| Метод                                                                                                                                   | Что изменилось                                                                                                                                                                 |\n|-----------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [/pass/create](#operation/PassAPI_PassCreate)                                                                                           | Поправили описание: метод доступен при работе по схеме FBS.                                                                                                                    |\n| /v2/category/attribute/value/by-option                                                                                                  | Удалили устаревший метод.                                                                                                                                                      |\n| /v2/token/type                                                                                                                          | Удалили метод из документации.                                                                                                                                                 |\n| [/v1/analytics/stock_on_warehouses](#operation/AnalyticsAPI_AnalyticsGetStockOnWarehouses)                                              | Дополнили описание предупреждением, что отчёт находится в режиме тестирования.                                                                                                 |\n| [/v2/product/import](#operation/ProductAPI_ImportProductsV2)                                                                            | Исправили написание примера в параметре `vat`: корректное написание — через точку.<br> Убрали параметр `image_group_id`.<br> Добавили обозначения для обязательных параметров. |\n| [/v2/category/attribute/values](#operation/CategoryAPI_DictionaryValueBatch)                                                            | Исправили написание параметра `hasNext` на `has_next`.<br>Увеличили максимальное значение параметра `limit` до 5000.<br> Добавили описание к параметру `last_value_id`.        |\n| [/v2/posting/fbs/unfulfilled/list](#operation/PostingAPI_GetFbsUnfulfilledPostingList)                                                  | Убрали ограничение по максимальному количеству значений в ответе в параметре `limit`.                                                                                          |\n| [/v3/posting/fbs/unfulfilled/list](#operation/PostingAPI_GetFbsPostingUnfulfilledList)                                                  | Исправили список статусов в параметре `status`.                                                                                                                                |\n| [/v2/posting/fbs/ship](#operation/PostingAPI_ShipFbsPosting)                                                                            | Добавили описание к полю `result` в ответе.                                                                                                                                    |\n| [/v2/posting/fbs/product/cancel](#operation/PostingAPI_CancelFbsPostingProduct)                                                         | Добавили описание к полю `result` в ответе.<br> Пометили параметр `cancel_reason_message` как обязательный.                                                                    |\n| [/v2/product/info/list](#operation/ProductAPI_GetProductInfoListV2)                                                                     | Добавили ограничение по количеству товаров в поле `offer_id`.                                                                                                                  |\n| [/v2/product/info/prices](#operation/ProductAPI_GetProductInfoPricesV2)                                                                 | Добавили описание к полям параметра `commissions`.                                                                                                                             |\n| [v1/report/postings/create](#operation/ReportAPI_CreateCompanyPostingsReport)                                                           | Добавили описание к полям параметра `filter`.                                                                                                                                  |\n| [/v2/posting/fbs/cancel-reason/list](#operation/PostingAPI_GetPostingFbsCancelReasonList)                                               | Добавили описания причин отмены в ответе метода.                                                                                                                               |\n| /v1/category/tree                                                                                                                       | Удалили метод.                                                                                                                                                                 |\n| [/v2/category/tree](#operation/CategoryAPI_GetCategoryTree)                                                                             | Добавили обновлённую версию метода для построения дерева категории товаров.                                                                                                    |\n| [/v2/posting/fbs/package-label](#operation/PostingAPI_PostingFBSPackageLabel)                                                           | Добавили описание ошибки «The next postings aren't ready».                                                                                                                     |\n| —                                                                                 | Добавили информацию по работе с весовыми товарами в раздел [Порядок работы с методами](/#section/Upravlyajte-zakazami-FBO-FBS-i-rFBS).                                         |\n\n## 3 ноября 2021\n\n| Метод                                                                                                                                   | Что изменилось                                                                                   |\n|-----------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------|\n| [/v1/product/import/info](#operation/ProductAPI_GetImportProductsInfo)                                                                  | В ответе метода поправили описание параметра `status` и добавили массив параметров `errors`.     |\n| [/v2/product/info](#operation/ProductAPI_GetProductInfoV2) <br><br> [/v2/product/info/list](#operation/ProductAPI_GetProductInfoListV2) | В ответе методов убрали поля `errors` и `state`, добавили массив параметров `status` и `errors`. |\n\n## 28 октября 2021\n\n| Метод                                                                       | Что изменилось                                                    |\n|-----------------------------------------------------------------------------|-------------------------------------------------------------------|\n| [/v1/product/upload_digital_codes](#operation/ProductAPI_UploadDigitalCode) | Добавили метод для загрузки кодов активации для цифровых товаров. |\n\n## 25 октября 2021\n\n| Метод                                                                                                            | Что изменилось                                                                       |\n|------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------|\n| —                                                                                                                | В методах [Акции](#tag/Promos) добавили управление акциями с типом «Скидка на сток». |\n| [/v1/actions](#operation/Promos)                                                                                 | В ответ метода добавили параметр `freeze_date`.                                      |\n| [/v1/actions/candidates](#operation/PromosCandidates) <br><br> [/v1/actions/products](#operation/PromosProducts) | В ответы методов добавили параметры: `add_mode`, `min_stock` и `stock`.              |\n| [/v1/actions/products/activate](#operation/PromosProductsActivate)                                               | В запрос метода добавили параметр `stock`.                                           |\n\n## 19 октября 2021\n\n| Метод                                                                                        | Что изменилось                                                                                                                                                                                                          |\n|----------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [/v3/posting/fbs/unfulfilled/list](#operation/PostingAPI_GetFbsPostingUnfulfilledList) <br><br> [/v3/posting/fbs/list](#operation/PostingAPI_GetFbsPostingListV3) | Добавили в ответ параметры `products_requiring_country` и `products_requiring_gtd`.                                                                |\n| [/v3/posting/fbs/get](#operation/PostingAPI_GetFbsPostingV3)                                 | Добавили в запрос параметр `product_exemplars`. Добавили в ответ параметры: `products_requiring_country`, `products_requiring_gtd`, `mandatory_mark`, `gtd` и `is_gtd_abscent`.                                         |\n| [/v2/posting/fbs/product/country/list](#operation/PostingAPI_ListCountryProductFbsPostingV2) | Новый метод для получения списка доступных стран-изготовителей и их ISO кодов.                                                                                                                                          |\n| [/v2/posting/fbs/product/country/set](#operation/PostingAPI_SetCountryProductFbsPostingV2)   | Новый метод для добавления на продукт атрибута «Страна-изготовитель».                                                                                                                                                   |\n| [/v3/posting/fbs/ship](#operation/PostingAPI_ShipFbsPostingV3)                               | Новая версия метода для разделения заказа на отправления и перевода в статус awaiting_deliver. Отличается от [/v2/posting/fbs/ship](#operation/PostingAPI_ShipFbsPosting) наличием в запросе параметра `exemplar_info`. |\n| [/v3/posting/fbs/ship/package](#operation/PostingAPI_PackageShipFbsPostingV3)                | Новый метод для частичной сборки отправления.                                                                                                                                                                           |\n\n## 18 октября 2021\n\n| Метод                                                                   | Что изменилось                               |\n|------------------------------------------------------------------------|-----------------------------------------------|\n| [/v1/product/import-by-sku](#operation/ProductAPI_ImportProductsBySKU) | Вернули метод для создания товара по Ozon ID. |\n\n## 30 сентября 2021\n\n| Метод                                                                   | Что изменилось                                                                                                              |\n|-------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------|\n| [/v2/returns/company/fbs](#operation/ReturnsAPI_GetReturnsCompanyFBS)   | Поправили параметры фильтра: переименовали поле `return_date` в `accepted_from_customer_moment`; убрали поле `picking_tag`. |\n| [/v2/product/info/prices](#operation/ProductAPI_GetProductInfoPricesV2) | Дополнили, что значение поля `page_size` не должно превышать 1000 строк.                                                    |\n| [/v3/category/attribute](#operation/CategoryAPI_DictionaryValueBatch)<br>[/v2/posting/fbo/list](#operation/PostingAPI_GetFboPostingList)<br>[v2/posting/fbs/list](#operation/PostingAPI_GetFbsPostingList)<br>[/v3/posting/fbs/list](#operation/PostingAPI_GetFbsPostingListV3)<br>[/v1/analytics/data](#operation/AnalyticsAPI_AnalyticsGetData)<br>[/v2/returns/company/fbo](#operation/ReturnsAPI_GetReturnsCompanyFboV2)<br>[/v2/returns/company/fbs](#operation/ReturnsAPI_GetReturnsCompanyFBS)| Увеличили максимальное количество значений в ответе с 50 до 1000. |\n\n## 29 сентября 2021\n\n| Метод                                                                   | Что изменилось                                                                                                                   |\n|-------------------------------------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------|\n| [/v1/actions](#operation/Actions)                                       | Добавили метод для получения списка акций.                                                                                       |\n| [/v1/actions/candidates](#operation/ActionsCandidates)                  | Добавили метод для получения списка товаров, которые могут участвовать в акции.                                                  |\n| [/v1/actions/products](#operation/ActionsProducts)                      | Добавили метод для получения списка товаров, которые участвуют в акции.                                                          |\n| [/v1/actions/products/activate](#operation/ActionsProductsActivate)     | Добавили метод для добавления товаров в акцию.                                                                                   |\n| [/v1/actions/products/deactivate](#operation/ActionsProductsDeactivate) | Добавили метод для удаления товаров из акции.                                                                                    |\n| —                                                                       | Добавили в раздел [Список методов](#section/Akcii) методы [Акции](#tag/Actions).                                                 |\n| —                                                                       | В раздел [Порядок работы с методами](#tag/Process) добавили подраздел [Участвуйте в акциях](#section/Uchastvujte-v-akciyah). |\n\n## 21 сентября 2021\n\n| Метод                                                                           | Что изменилось                                                   |\n|---------------------------------------------------------------------------------|------------------------------------------------------------------|\n| [/v2/posting/fbs/product/change](#operation/PostingAPI_ChangeFbsPostingProduct) | Новый метод для добавления веса у весовых товаров в отправлении. |\n\n## 13 сентября 2021\n\n| Метод                                   | Что изменилось                                                                                                                            |\n|-----------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------|\n| —                                       | Добавили новый раздел [Порядок работы с методами](#tag/Process).                                                                          |\n| /v1/categories/tree/{category_id}       | Метод устарел, убрали его из документации.                                                                                                |\n| /v1/categories/{category_id}/attributes | Метод устарел, убрали его из документации.                                                                                                |\n| /v1/product/import-by-sku               | Метод устарел, убрали его из документации.                                                                                                |\n| /v1/product/info/prices                 | Метод устарел, убрали его из документации. Используйте [/v2/product/info/prices](#operation/ProductAPI_GetProductInfoPricesV2).           |\n| /v2/posting/fbs/get                     | Метод устарел, убрали его из документации. Используйте [/v3/posting/fbs/get](#operation/PostingAPI_GetFbsPostingV3).                      |\n| /v2/finance/transaction/totals          | Метод устарел, убрали его из документации. Используйте [/v3/finance/transaction/totals](#operation/FinanceAPI_FinanceTransactionTotalV3). |\n\n## 8 сентября 2021\n\n| Метод                                                                        | Что изменилось                                                                  |\n|------------------------------------------------------------------------------|---------------------------------------------------------------------------------|\n| [/v2/product/import](#operation/ProductAPI_ImportProductsV2)                 | Добавили описание параметра `index` внутри параметра `pdf_list` в теле запроса. |\n| [/v2/products/info/attributes](#operation/ProductAPI_GetProductAttributesV2) | Добавили описание параметров внутри параметра `pdf_list` в теле ответа.         |\n| [/v1/report/transactions/create](#operation/ReportAPI_CreateCompanyTransactionsReport)<br><br>[/v1/report/products/prices/create](#operation/ReportAPI_CreateCompanyProductsPricesReport)<br><br>[/v1/report/stock/create](#operation/ReportAPI_CreateCompanyStockReport)<br><br>[/v1/report/products/movement/create](#operation/ReportAPI_CreateProductsMovementReport)<br><br>[/v1/report/postings/create](#operation/ReportAPI_CreateCompanyPostingsReport)<br><br>[/v1/report/finance/create](#operation/ReportAPI_CreateCompanyFinanceReport) | Добавили описания методов для формирования отчётов. |\n\n## 7 сентября 2021\n\n| Метод | Что изменилось                                                                                                                                                                                                                                        |\n|-------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [/v2/product/info/stocks](#operation/ProductAPI_GetProductInfoStocksV2) | Уточнили описание метода и убрали некорректную информацию. Детально описали поле `total` из ответа: `total` — это количество уникальных товаров, по которым продавец видит остатки. |\n\n## 6 сентября 2021\n\n| Метод | Что изменилось                                                                                                                                                    |\n|-----------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [/v2/posting/fbo/list](#operation/PostingAPI_GetFboPostingList) | В ответе в `products` добавили поле `digital_code` и его описание. `digital_code` — это код активации для услуг и цифровых товаров, который приходит покупателю на почту. В выдачу метода добавили информацию о привязке цифрового кода или цифровых кодов к номеру постинга, чтобы через API можно было отслеживать, какой именно код был куплен. |\n| [/v2/products/stocks](#operation/ProductAPI_ProductsStocksV2) <br><br> [/v1/product/import/stocks](#operation/ProductAPI_ImportProductsPrices) | Добавили описание ошибки `PRODUCT_HAS_NOT_BEEN_TAGGED_YET`. Эта ошибка говорит о том, что товар еще не успели пометить тегами КГТ/неКГТ. |\n\n## 2 сентября 2021\n\n| Метод | Что изменилось                                                                                                                                                    |\n|-------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| —     | Убрали ссылку на Swagger. Для тестирования запросов используйте вкладку **Console** на консоли справа от описания методов или [Postman](https://www.postman.com). |\n\n## 23 августа 2021\n\n| Метод                                                                                                                                   | Что изменилось                                                                                                                                        |\n|-----------------------------------------------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [/v2/product/info](#operation/ProductAPI_GetProductInfoV2) <br><br> [/v2/product/info/list](#operation/ProductAPI_GetProductInfoListV2) | Добавили в ответ параметр `primary_image` — главное изображение товара. Поправили описание параметра `images`.                                        |\n| [/v2/product/import](#operation/ProductAPI_ImportProductsV2)                                                                            | Поправили описание метода и добавили в запрос параметр `primary_image` — ссылка на главное изображение товара. Поправили описание параметра `images`. |\n\n## 16 августа 2021\n\n| Метод                                                        | Что изменилось                                                                                                                                      |\n|--------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------|\n| [/v2/product/import](#operation/ProductAPI_ImportProductsV2) | Добавили в описании метода и параметрах запроса `images`, `images360`, `color_image` в каком формате загружаются изображения.                       |\n| /v1/product/prepayment/set                                   | Метод устарел, убрали его из документации.                                                                                                          |\n| /v1/products/stocks                                          | Метод устарел, убрали его из документации. Используйте [/v2/products/stocks](#operation/ProductAPI_ProductsStocksV2).                               |\n| /v1/products/prices                                          | Метод устарел, убрали его из документации. Используйте [/v1/product/import/prices](#operation/ProductAPI_ImportProductsPrices).                     |\n| /v2/posting/crossborder/approve                              | Метод устарел, убрали его из документации.                                                                                                          |\n| /v2/posting/crossborder/cancel                               | Метод устарел, убрали его из документации. Используйте метод [posting/fbs/cancel](#operation/PostingAPI_CancelFbsPosting).                          |\n| /v2/posting/crossborder/cancel-reason/list                   | Метод устарел, убрали его из документации. Используйте метод [posting/fbs/cancel-reason/list](#operation/PostingAPI_GetPostingFbsCancelReasonList). |\n| /v2/posting/crossborder/get                                  | Метод устарел, убрали его из документации. Используйте метод [posting/fbs/ge](#operation/PostingAPI_GetFbsPosting).                                 |\n| /v2/posting/crossborder/list                                 | Метод устарел, убрали его из документации. Используйте метод [posting/fbs/list](#operation/PostingAPI_GetFbsPostingList).                           |\n| /v2/posting/crossborder/product/cancel                       | Метод устарел, убрали его из документации. Используйте метод [posting/fbs/product/cancel](#operation/PostingAPI_CancelFbsPostingProduct).           |\n| /v2/posting/crossborder/ship                                 | Метод устарел, убрали его из документации. Используйте метод [posting/fbs/ship](#operation/PostingAPI_ShipFbsPosting).                              |\n| /v2/posting/crossborder/shipping-provider/list               | Метод устарел, убрали его из документации.                                                                                                          |\n| /v2/posting/crossborder                                      | Метод устарел, убрали его из документации. Используйте метод [posting/fbs/unfulfilled/list](#operation/PostingAPI_GetFbsUnfulfilledPostingList).    |\n\n## 9 августа 2021\n\n| Метод               | Что изменилось                                                                                                       |\n|---------------------|----------------------------------------------------------------------------------------------------------------------|\n| /v1/product/update  | Метод устарел, убрали его из документации. Используйте [/v2/product/import](#operation/ProductAPI_ImportProductsV2). |\n| /v1/products/update | Метод устарел, убрали его из документации. Используйте [/v2/product/import](#operation/ProductAPI_ImportProductsV2). |\n\n## 5 августа 2021\n\n| Метод                                                                    | Что изменилось                                                                                                                              |\n|--------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------|\n| [/v3/posting/fbs/list](#operation/PostingAPI_GetFbsPostingListV3)        | Добавили в ответ новый параметр `provider_pvz_code` — код ПВЗ 3PL провайдера.                                                               |\n| /v1/category/attribute                                                   | Метод устарел, убрали его из документации. Используйте [/v3/category/attribute](#operation/CategoryAPI_GetCategoryAttributesV3).            |\n| /v2/category/attribute                                                   | Метод устарел, убрали его из документации. Используйте [/v3/category/attribute](#operation/CategoryAPI_GetCategoryAttributesV3).            |\n| [/v3/category/attribute](#operation/CategoryAPI_GetCategoryAttributesV3) | Добавили описание фильтров для запроса `attribute_type` и `language`. Дополнили описание параметров ответа `is_collection` и `is_required`. |\n\n## 29 июля 2021\n\n<table>\n    <tr>\n        <th>Метод</th>\n        <th>Что изменилось</th>\n    </tr>\n    <tr>\n        <td>\n            <a href=\"#operation/PostingAPI_GetFboPosting\">/v2/posting/fbo/get</a><br><br>\n            <a href=\"#operation/PostingAPI_GetFboPostingList\">/v2/posting/fbo/list</a><br><br>\n            <a href=\"#operation/PostingAPI_GetFbsPosting\">/v2/posting/fbs/get</a><br><br>\n            <a href=\"#operation/PostingAPI_GetFbsPostingList\">/v2/posting/fbs/list</a><br><br>\n            <a href=\"#operation/PostingAPI_GetFbsUnfulfilledPostingList\">/v2/posting/fbs/unfulfilled/list</a><br><br>\n            <a href=\"#operation/PostingAPI_GetFbsPostingV3\">/v3/posting/fbs/get</a><br><br>\n            <a href=\"#operation/PostingAPI_GetFbsPostingListV3\">/v3/posting/fbs/list</a><br><br>\n            <a href=\"#operation/PostingAPI_GetFbsPostingUnfulfilledList\">/v3/posting/fbs/unfulfilled/list</a>\n        </td>\n        <td>Добавили новый параметр ответа: <code>is_legal</code> — признак, что получатель юридическое лицо.</td>\n    </tr>\n    <tr>\n        <td>—</td>\n        <td>Добавили ссылку на английскую версию документации.</td>\n    </tr>\n    <tr>\n        <td>\n            <a href=\"#operation/ReportAPI_CreateCompanyProductsReport\">/v1/report/products/create</a><br><br>\n            <a href=\"#operation/ReportAPI_CreateCompanyReturnsReport\">/v1/report/returns/create</a>\n        </td>\n        <td>Дополнили описание методов.</td>\n    </tr>\n    <tr>\n        <td><a href=\"#operation/PostingAPI_GetFbsPostingList\">/v2/posting/fbs/list</a></td>\n        <td>\n            В запросе поправили описание параметров фильтра:\n            <ul>\n                <li><code>in_process_at</code></li>\n                <li><code>order_created_at</code></li>\n                <li><code>since</code></li>\n                <li><code>to</code></li>\n                <li><code>updated_at</code></li>\n            </ul>\n        </td>\n    </tr>\n</table>\n\n## 20 июля 2021\n\n<table>\n    <tr>\n        <th>Метод</th>\n        <th>Что изменилось</th>\n    </tr>\n    <tr>\n        <td>\n            <a href=\"#operation/PostingAPI_GetFbsPostingUnfulfilledList\">/v3/posting/fbs/unfulfilled/list</a><br><br>\n            <a href=\"#operation/PostingAPI_GetFbsPostingListV3\">/v3/posting/fbs/list</a><br><br>\n            <a href=\"#operation/PostingAPI_GetFbsPostingV3\">/v3/posting/fbs/get</a>\n        </td>\n        <td>Добавили новый параметр ответа: `is_express` — флаг, что использовалась быстрая доставка.</td>\n    </tr>\n    <tr>\n        <td><a href=\"#operation/PostingAPI_GetFbsPostingList\">/v2/posting/fbs/list</a></td>\n        <td>Добавили в запрос новые статусы для фильтрации:\n        <ul>\n            <li><code>arbitration</code> — арбитраж,</li>\n            <li><code>client_arbitration</code> — клиентский арбитраж доставки,</li>\n            <li><code>not_accepted</code> — не принят на сортировочном центре.</li>\n        </ul>\n        </td>\n    </tr>\n    <tr>\n        <td>\n            <a href=\"#operation/PostingAPI_GetFbsUnfulfilledPostingList\">/v2/posting/fbs/unfulfilled/list</a><br><br>\n            <a href=\"#operation/PostingAPI_GetFbsPostingListV3\">/v3/posting/fbs/list</a><br><br>\n            <a href=\"#operation/PostingAPI_GetFbsPostingUnfulfilledList\">/v3/posting/fbs/unfulfilled/list</a><br><br>\n        </td>\n        <td>Добавили в запрос новые статусы для фильтрации:\n        <ul>\n            <li><code>acceptance_in_progress</code> — идёт приёмка,</li>\n            <li><code>arbitration</code> — арбитраж,</li>\n            <li><code>client_arbitration</code> — клиентский арбитраж доставки,</li>\n            <li><code>not_accepted</code> — не принят на сортировочном центре.</li>\n        </ul>\n        </td>\n    </tr>\n    <tr>\n        <td>—</td>\n        <td>Добавили новые разделы:\n        <ul>\n            <li><a href=\"#tag/Introduction\">Введение</a> — с описанием, что такое Ozon Seller API, в чём его польза и какие у него есть возможности.</li>\n            <li><a href=\"#tag/List\">Список методов</a> — со списком всех методов Seller API.</li>\n        </ul>\n        </td>\n    </tr>\n    <tr>\n        <td>—</td>\n        <td>Обновили информацию в разделах:\n        <ul>\n            <li><a href=\"#tag/Getting-started\">Начало работы</a> — добавили порядок действий перед использованием Seller API и описание блоков, на которые можно поделить работу с Seller API.</li>\n            <li><a href=\"#tag/Auth\">Авторизация</a> — добавили информацию, что делать, если API-ключ попал в посторонние руки.</li>\n            <li><a href=\"#tag/Environment\">Рабочая среда</a> — поправили определение, что такое рабочая среда.</li>\n        </ul>\n        </td>\n    </tr>\n</table>\n\n## 13 июля 2021\n\n| Метод                                                                          | Что изменилось                                              |\n|--------------------------------------------------------------------------------|-------------------------------------------------------------|\n| /v1/category/attribute                                                         | В описании метода убрали оповещение о новой версии метода.  |\n| [/v1/analytics/data](#operation/AnalyticsAPI_AnalyticsGetData)                 | Добавили описание метода.                                   |\n| [/v1/report/products/create](#operation/ReportAPI_CreateCompanyProductsReport) | Добавили описание метода.                                   |\n\n## 9 июля 2021\n\n| Метод                                                                        | Что изменилось                                                                                                             |\n|------------------------------------------------------------------------------|----------------------------------------------------------------------------------------------------------------------------|\n| /v1/product/info                                                             | Метод устарел, убрали его из документации. Используйте метод [/v2/product/info](#operation/ProductAPI_GetProductInfoV2).   |\n| /v1/product/import                                                           | Метод устарел, убрали его из документации. Используйте метод [/v2/product/import](#operation/ProductAPI_ImportProductsV2). |\n| [/v2/product/import](#operation/ProductAPI_ImportProductsV2)                 | Добавили новый параметр запроса: `color_image` — маркетинговый цвет.                                                         |\n| [/v2/product/info](#operation/ProductAPI_GetProductInfoV2)                   | Добавили новый параметр ответа: `color_image` — маркетинговый цвет.                                                          |\n| [/v2/product/info/list](#operation/ProductAPI_GetProductInfoListV2)          | Добавили новый параметр ответа: `color_image` — маркетинговый цвет.                                                          |\n| [/v2/products/info/attributes](#operation/ProductAPI_GetProductAttributesV2) | Добавили новый параметр ответа: `color_image` — маркетинговый цвет.                                                          |\n\n## 8 июля 2021\n\n<table>\n    <tr>\n        <th>Метод</th>\n        <th>Что изменилось</th>\n    </tr>\n    <tr>\n        <td><a href=\"#operation/PostingAPI_GetFboPostingList\">/v2/posting/fbo/list</a><br><br>\n            <a href=\"#operation/PostingAPI_GetFboPosting\">/v2/posting/fbo/get</a><br><br>\n            <a href=\"#operation/PostingAPI_GetFbsPosting\">/v2/posting/fbs/get</a><br><br>\n            <a href=\"#operation/PostingAPI_GetFbsPostingV3\">/v3/posting/fbs/get</a><br><br>\n            <a href=\"#operation/PostingAPI_GetFbsPostingList\">/v2/posting/fbs/list</a><br><br>\n            <a href=\"#operation/PostingAPI_GetFbsPostingListV3\">/v3/posting/fbs/list</a><br><br>\n        </td>\n        <td>Добавили новые параметры ответа в финансовые данные:<br>\n        <ul>\n            <li><code>marketplace_service_item_deliv_to_customer</code> — последняя миля.</li>\n            <li><code>marketplace_service_item_direct_flow_trans</code> — магистраль.</li>\n            <li><code>marketplace_service_item_dropoff_ff</code> — обработка отправления на ФФ.</li>\n            <li><code>marketplace_service_item_dropoff_pvz</code> — обработка отправления на ПВЗ.</li>\n            <li><code>marketplace_service_item_dropoff_sc</code> — обработка отправления на СЦ.</li>\n            <li><code>marketplace_service_item_fulfillment</code> — сборка заказа.</li>\n            <li><code>marketplace_service_item_pickup</code> — выезд транспортного средства по адресу продавца для забора отправлений (Pick-up).</li>\n            <li><code>marketplace_service_item_return_after_deliv_to_customer</code> — обработка возврата.</li>\n            <li><code>marketplace_service_item_return_flow_trans</code> — обратная магистраль.</li>\n            <li><code>marketplace_service_item_return_not_deliv_to_customer</code> — обработка отмен.</li>\n            <li><code>marketplace_service_item_return_part_goods_customer</code> — обработка невыкупа.</li>\n        </ul>\n        </td>\n    </tr>\n</table>\n\n## 7 июля 2021\n\n| Метод                                          | Что изменилось                                                                                                                     |\n|------------------------------------------------|------------------------------------------------------------------------------------------------------------------------------------|\n| /v2/posting/crossborder/approve                | Больше не поддерживается.                                                                                                          |\n| /v2/posting/crossborder/cancel                 | Больше не поддерживается. Используйте метод [posting/fbs/cancel](#operation/PostingAPI_CancelFbsPosting).                          |\n| /v2/posting/crossborder/cancel-reason/list     | Больше не поддерживается. Используйте метод [posting/fbs/cancel-reason/list](#operation/PostingAPI_GetPostingFbsCancelReasonList). |\n| /v2/posting/crossborder/get                    | Больше не поддерживается. Используйте метод [posting/fbs/ge](#operation/PostingAPI_GetFbsPosting).                                 |\n| /v2/posting/crossborder/list                   | Больше не поддерживается. Используйте метод [posting/fbs/list](#operation/PostingAPI_GetFbsPostingList).                           |\n| /v2/posting/crossborder/product/cancel         | Больше не поддерживается. Используйте метод [posting/fbs/product/cancel](#operation/PostingAPI_CancelFbsPostingProduct).           |\n| /v2/posting/crossborder/ship                   | Больше не поддерживается. Используйте метод [posting/fbs/ship](#operation/PostingAPI_ShipFbsPosting).                              |\n| /v2/posting/crossborder/shipping-provider/list | Больше не поддерживается.                                                                                                          |\n| /v2/posting/crossborder                        | Больше не поддерживается. Используйте метод [posting/fbs/unfulfilled/list](#operation/PostingAPI_GetFbsUnfulfilledPostingList).    |\n\n## 23 июня 2021\n\n| Метод                                                                              | Что изменилось                                                                             |\n|------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------|\n| [/v1/analytics/item_turnover](#operation/AnalyticsAPI_AnalyticsItemTurnoverDataV3) | Новый метод. Возвращает отчёт по оборачиваемости (FBO) по категориям за последние 15 дней. |\n\n## 15 апреля 2021\n\n| Метод                                                                                                     | Что изменилось                                                                                                                         |\n|-----------------------------------------------------------------------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------|\n| /v1/category/attribute                                                                                    | Новый метод. Возвращает характеристики для указанной категории товаров.                                                                |\n| [/v2/category/attribute/value/by-option](#operation/CategoryAPI_DictionaryValuesByAttributeIDAndRsIDList) | Новый метод. Возвращает идентификаторы справочников и характеристик.                                                                   |\n| [/v2/products/info/attributes](#operation/ProductAPI_GetProductAttributesV2)                              | Новый метод. Возвращает описание характеристик товара по его идентификатору. Товар можно искать по параметрам offer_id или product_id. |\n| [/v2/posting/crossborder/list](#operation/PostingAPI_GetCrossborderPostingList)                           | Новый метод. Возвращает список отправлений за указанный период времени.                                                                |\n| [/v2/finance/transaction/totals](#operation/FinanceAPI_FinanceTransactionTotal)                           | Новый метод. Возвращает итоговую сумму по транзакциям за период, по статусу или отправлению.                                           |\n| [/v1/report/list](#operation/ReportAPI_ReportList)                                                        | Новый метод. Возвращает список отчётов, которые были сформированы раньше.                                                              |\n| [/v1/report/info](#operation/ReportAPI_ReportInfo)                                                        | Новый метод. Возвращает информацию о запрошенном отчёте по его уникальному идентификатору.                                             |\n| [/v1/report/products/create](#operation/ReportAPI_CreateCompanyProductsReport)                            | Новый метод. Возвращает отчёт по товарам, который также доступен в личном кабинете продавца.                                           |\n| [/v1/report/transactions/create](#operation/ReportAPI_CreateCompanyTransactionsReport)                    | Новый метод. Возвращает отчёт по товарам, который также доступен в личном кабинете продавца.                                           |\n\n## 13 апреля 2021\n\n| Метод                                                                            | Что изменилось                                                      |\n|----------------------------------------------------------------------------------|---------------------------------------------------------------------|\n| [/v1/product/import/stocks](#operation/ProductAPI_ImportProductsStocks)          | Новый метод для изменения информации о количестве товара в наличии. |\n| [/v1/product/info](#operation/ProductAPI_GetProductInfo)                         | Новый метод для получения информации о товаре по идентификатору.    |\n| /v1/product/list                         | Новый метод для получения списка товаров.                           |\n| [/v1/product/prepayment/set](#operation/ProductAPI_SetProductIsPrepaymentStatus) | Новый метод для установки продажи товара только по предоплате.      |\n| [/v2/product/info/list](#operation/ProductAPI_GetProductInfoListV2)              | Новый метод для получения информации о списке товаров.              |\n| [/v1/product/certification/list](#operation/ProductAPI_ProductCertificationList) | Новый метод для получения списка сертифицируемых категорий.         |\n| [/v1/product/info/description](#operation/ProductAPI_GetProductInfoDescription)  | Новый метод для получения описания товара.                          |\n| [/v1/products/prices](#operation/ProductAPI_ImportProductsPrices2)               | Новый метод для обновления цены товаров.                            |\n| [/v2/product/info/stocks](#operation/ProductAPI_GetProductInfoStocksV2)          | Новый метод для получения информации о товарах.                     |\n| [/v1/product/import/info](#operation/ProductAPI_GetImportProductsInfo)           | Новый метод для получения статуса создания карточки товара.         |\n| [/v1/product/import/prices](#operation/ProductAPI_ImportProductsPrices)          | Новый метод для изменения цены одного или нескольких товаров.       |\n| [/v1/products/stocks](#operation/ProductAPI_ImportProductsStocks2)               | Новый метод для обновления количества товаров.                      |\n| /v1/products/update                                                              | Новый метод для обновления информации о товаре.                     |\n\n## 13 января 2021\n\n| Метод                                                       | Что изменилось                                                               |\n|-------------------------------------------------------------|------------------------------------------------------------------------------|\n| [/v1/chat/list](#operation/ChatAPI_ChatList)                | Новый метод для получения информации о чате с указанными идентификаторами.   |\n| [/v1/chat/send/file](#operation/ChatAPI_ChatSendFile)       | Новый метод для отправки файла в существующий чат по его идентификатору.     |\n| [/v1/chat/send/message](#operation/ChatAPI_ChatSendMessage) | Новый метод для отправки сообщения в существующий чат по его идентификатору. |\n| [/v1/chat/start](#operation/ChatAPI_ChatStart)              | Новый метод для создания нового чата с покупателем.                          | -->"
      },
      {
        "name": "CategoryAPI",
        "x-displayName": "Атрибуты и характеристики Ozon"
      },
      {
        "name": "ProductAPI",
        "x-displayName": "Загрузка и обновление товаров"
      },
      {
        "name": "Prices&StocksAPI",
        "x-displayName": "Цены и остатки товаров"
      },
      {
        "name": "Promos",
        "x-displayName": "Акции",
        "description": "Для продвижения товаров участвуйте в акциях, которые Ozon проводит для покупателей.\nПодробнее об акциях в [Базе знаний продавца](https://seller-edu.ozon.ru/docs/how-to-sell-effectively/promo/promo.html)."
      },
      {
        "name": "PricingStrategyAPI",
        "x-displayName": "Стратегии ценообразования"
      },
      {
        "name": "BrandAPI",
        "x-displayName": "Сертификаты брендов"
      },
      {
        "name": "CertificationAPI",
        "x-displayName": "Сертификаты качества"
      },
      {
        "name": "WarehouseAPI",
        "x-displayName": "Склады"
      },
      {
        "name": "FBO",
        "x-displayName": "Схема FBO"
      },
      {
        "name": "FBS&rFBSMarks",
        "x-displayName": "Управление кодами маркировки для FBS/rFBS"
      },
      {
        "name": "FBS",
        "x-displayName": "Схемы FBS и rFBS"
      },
      {
        "name": "ReturnsAPI",
        "x-displayName": "Возвраты товаров"
      },
      {
        "name": "CancellationAPI",
        "x-displayName": "Отмены заказов"
      },
      {
        "name": "PolygonAPI",
        "x-displayName": "Полигоны"
      },
      {
        "name": "ChatAPI",
        "x-displayName": "Чаты с покупателями"
      },
      {
        "name": "SupplierAPI",
        "x-displayName": "Накладные"
      },
      {
        "name": "ReportAPI",
        "x-displayName": "Отчёты"
      },
      {
        "name": "AnalyticsAPI",
        "x-displayName": "Аналитические отчёты"
      },
      {
        "name": "FinanceAPI",
        "x-displayName": "Финансовые отчёты"
      },
      {
        "name": "AccessTokenAPI",
        "x-displayName": "Токен для API"
      },
      {
        "name": "SellerRating",
        "x-displayName": "Рейтинг продавца",
        "description": "Работая с Ozon, продавцы должны соблюдать требования по качеству обслуживания, срокам доставки и общению с клиентами. Система рейтингов отражает качество сервиса продавца, а некоторые показатели видны покупателям — это рейтинг товаров и индекс цен.\n\n[Подробнее о системе рейтингов в Базе знаний продавца](https://seller-edu.ozon.ru/docs/seller-rating/)"
      },
      {
        "name": "Errors",
        "x-displayName": "Частые ошибки",
        "description": "<table>\n    <tr>\n        <td><b>Метод</b></td>\n        <td><b>Текст ошибки</b></td>\n        <td><b>Описание ошибки</b></td>\n    </tr>\n    <tr>\n        <td rowspan=\"2\">Все методы</td>\n        <td><code>Circle is open</code></td>\n        <td>Если выполняется большое количество запросов, система блокирует работу метода. В течение нескольких минут метод начнет работать как обычно.</td>\n    </tr>\n    <tr>\n        <td><code>Internal error</code></td>\n        <td>Сервер не успел обработать запрос.</td>\n    </tr>\n    <tr>\n        <td rowspan=\"5\"><a href=\"#operation/ProductAPI_ProductsStocksV2\">/v2/products/stocks</a></td>\n        <td><code>SKU STOCK NOT CHANGED</code></td>\n        <td>Количество товара на складе не изменилось, так как вы передаете тот же остаток.</td>\n    </tr>\n    <tr>\n        <td><code>PRODUCT_HAS_NOT_BEEN_TAGGED_YET</code></td>\n        <td>Товар ещё не пометили тегами «КГТ» или «неКГТ», так как не указаны габариты товара или система для расстановки тегов ещё не обработала его.</td>\n    </tr>\n    <tr>\n        <td><code>NON_KGT_ON_KGT_WAREHOUSE</code></td>\n        <td>Попытка установить или обновить остаток некрупногабаритного товара на КГТ складе.</td>\n    </tr>\n    <tr>\n        <td><code>PRICE_IS_NOT_SENT</code></td>\n        <td>Товар ещё не создан или находится на стадии обновления.</td>\n    </tr>\n    <tr>\n        <td><code>company ... has 2 non-rfbs warehouses, should be 1. use /rfbs/item/stock/batch-set</code></td>\n        <td>У вас несколько складов и вы обновляете остатки методом <a href=\"#operation/ProductAPI_ImportProductsStocks\">/v1/product/import/stocks</a>. Обновите остатки методом <a href=\"#operation/ProductAPI_ProductsStocksV2\">/v2/products/stocks</a>.</td>\n    </tr>\n    <tr>\n        <td rowspan=\"7\"><a href=\"#operation/PostingAPI_ShipFbsPosting\">/v2/posting/fbs/ship</a><br><br><a href=\"#operation/PostingAPI_ShipFbsPostingV3\">/v3/posting/fbs/ship</a></td>\n        <td><code>TRANSITION_IS_NOT_POSSIBLE</code></td>\n        <td>Вы передали некорректный порядок статусов заказов rFBS.</td>\n    </tr>\n    <tr>\n        <td><code>HAS_INCORRECT_TPL_INTEGRATION_TYPE</code></td>\n        <td>Попытка передать статус на заказ rFBS при доставке интегрированной службой доставки.</td>\n    </tr>\n    <tr>\n        <td><code>POSTING_NOT_FOUND</code></td>\n        <td>Заказа нет в личном кабинете партнёра.</td>\n    </tr>\n    <tr>\n        <td><code>POSTING_ALREADY_CANCELLED</code></td>\n        <td>Заказ уже отменён.</td>\n    </tr>\n    <tr>\n        <td><code>POSTING_ALREADY_SHIPPED</code></td>\n        <td>Заказ уже собран.</td>\n    </tr>\n    <tr>\n        <td><code>HAS_INCORRECT_STATUS</code></td>\n        <td>У заказа некорректный статус.</td>\n    </tr>\n    <tr>\n        <td><code>HAS_INCORRECT_PRODUCT_QUANTITY</code></td>\n        <td>Неправильное количество продуктов или неправильный SKU в запросе.</td>\n    </tr>\n    <tr>\n        <td><a href=\"#operation/PostingAPI_PostingFBSPackageLabel\">/v2/posting/fbs/package-label</a></td>\n        <td><code>The next postings aren't ready</code></td>\n        <td>Товар ещё не готов к печати маркировки.</td>\n    </tr>\n    <tr>\n        <td rowspan=\"9\"><a href=\"#operation/PostingAPI_PostingFBSActCreate\">/v2/posting/fbs/act/create</a></td>\n        <td><code>Trying set ContainersCount to not HasEntrustedAcceptance company</code></td>\n        <td>Попытка передать количество грузовых мест без подключения к доверительной приёмке. </td>\n    </tr>\n    <tr>\n        <td><code>DELIVERY_METHOD_NOT_FOUND</code></td>\n        <td>Вы передали некорректный идентификатор метода доставки — <code>delivery_method_id</code>.</td>\n    </tr>\n    <tr>\n        <td><code>first_mile_absent</code></td>\n        <td>У склада нет первой мили, так как склад не работает.</td>\n    </tr>\n    <tr>\n        <td><code>no_postings</code></td>\n        <td>Нет отправлений на текущую отгрузку.</td>\n    </tr>\n    <tr>\n        <td><code>can't create carriage</code></td>\n        <td>Перевозка ещё не готова к созданию. Добавьте акты на отгрузку.</td>\n    </tr>\n    <tr>\n        <td><code>Invalid Api-Key, please contact support</code></td>\n        <td>Некорректный API-ключ, свяжитесь с поддержкой.</td>\n    </tr>\n    <tr>\n        <td><code>first_mile_is_changing</code></td>\n        <td>Вы собрали не все отправления в отгрузке.</td>\n    </tr>\n    <tr>\n        <td><code>not_accepted_on_sc</code></td>\n        <td>Нужно обработать спорные отправления.</td>\n    </tr>\n    <tr>\n        <td><code>Company has no FBS-warehouses</code></td>\n        <td>У вас нет созданного склада FBS.</td>\n    </tr>\n    <tr>\n        <td rowspan=\"7\"><a href=\"#operation/ProductAPI_ImportProductsPrices\">/v1/product/import/prices</a></td>\n        <td><code>invalid_category_price</code></td>\n        <td>Попытка установить слишком высокую или слишком низкую цену на товар.</td>\n    </tr>\n    <tr>\n        <td><code>discount_for_average_price_is_too_small</code></td>\n        <td>Слишком маленькая скидка. Если цена после скидки от 400 до 10 000 рублей включительно, разница между ценами до и после скидки должна быть больше 5%.</td>\n    </tr>\n    <tr>\n        <td><code>discount_for_low_price_is_too_small</code></td>\n        <td>Слишком маленькая скидка. Если цена после скидки ниже 400 рублей включительно, разница между ценами до и после скидки должна быть больше 20 рублей.</td>\n    </tr>\n    <tr>\n        <td><code>discount_too_big</code></td>\n        <td>Слишком большая скидка. Разница между ценами до и после скидки должна быть менее 90%.</td>\n    </tr>\n    <tr>\n        <td><code>discount_for_top_price_is_too_small</code></td>\n        <td>Слишком маленькая скидка. Если цена после скидки выше 10 000 рублей, разница между ценами до и после скидки должна быть больше 500 рублей.</td>\n    </tr>\n    <tr>\n        <td><code>price_negative</code></td>\n        <td>Попытка установить отрицательную цену.</td>\n    </tr>\n    <tr>\n        <td><code>NOT_FOUND_ERROR</code></td>\n        <td>Товара с таким идентификатором нет в личном кабинете.</td>\n    </tr>\n    <tr>\n        <td><a href=\"#operation/ProductAPI_ImportProductsV2\">/v2/product/import</a></td>\n        <td><code>SPU_ALREADY_EXISTS</code></td>\n        <td>Товар с такими характеристиками уже существует.</td>\n    </tr>\n    <tr>\n        <td><a href=\"#operation/ProductAPI_GetImportProductsInfo\">/v1/product/import/info</a></td>\n        <td><code>result: items: 0</code></td>\n        <td>Убедитесь, что указана корректная категория товара и проставлен НДС.</td>\n    </tr>\n    <tr>\n        <td><a href=\"#operation/PostingAPI_PostingFBSActCreate\">/v2/posting/fbs/act/create</a></td>\n        <td><code>can't create carriage</code></td>\n        <td>Перевозка ещё не готова к созданию.</td>\n    </tr>\n</table>"
      },
      {
        "name": "push_intro",
        "x-displayName": "Введение",
        "description": "В разделе описано, как подключить пуш-уведомления, чтобы получать от Ozon на свой сервис информацию о событиях:\n- создании нового отправления,\n- отмене отправления,\n- изменении статуса отправления,\n- изменении даты доставки или отгрузки отправления.\n  \nТакже можно получать информацию о сообщениях и уведомлениях, которые не были доставлены из-за недоступности вашего сервиса."
      },
      {
        "name": "push_start",
        "x-displayName": "Как подключить",
        "description": "<br><aside class=\"notice\">Ваш сервис должен отправлять ответы по стандартам REST API и с кодами ошибок, указанными в документации.\n\nЕсли ответы вашего сервиса отличаются от требуемой структуры, отправка уведомлений может быть приостановлена.\n\n**IP-адреса, с которых приходят уведомления**\n\n- 195.34.21.0/24,\n- 185.73.192.0/22,\n- 91.223.93.0/24.</aside><br>\n\n## Первичное подключение пуш-уведомлений\n\n1. В личном кабинете продавца перейдите в раздел [**Настройки → Интеграции**](https://seller.ozon.ru/app/settings/integrations).\n2. На вкладке **Push уведомления** включите получение уведомлений.\n3. Нажмите **Подключить**.\n4. Введите URL-адрес сервиса, на который будут отправляться уведомления. Например, https://www.example.com/api/method.\n5. Нажмите **Проверить**. Ozon отправит [запрос](#section/Zapros-dlya-proverki-soedineniya) для проверки соединения, на который должен ответить ваш сервис. Если соединение установлено, появится сообщение «Данный url доступен для подключения».\n6. Нажмите **Сохранить**.\n7. В блоке **Настройки подключения** в выпадающем списке **Типы уведомлений** выберите нужные.<br>[Описания уведомлений](#tag/push_types)\n\nОтключить уведомления можно в разделе [**Настройки → Интеграции**](https://seller.ozon.ru/app/settings/integrations) на вкладке **Push уведомления**.\n\n## Изменить адрес сервиса\n\n1. В личном кабинете продавца перейдите в раздел [**Настройки → Интеграции**](https://seller.ozon.ru/app/settings/integrations).\n2. На вкладке **Push уведомления** нажмите **Редактировать**.\n3. Введите URL-адрес сервиса, на который будут отправляться уведомления.\n4. Нажмите **Проверить**. Ozon отправит [запрос](#section/Zapros-dlya-proverki-soedineniya) для проверки соединения, на который должен ответить ваш сервис. Если соединение установлено, появится сообщение «Данный url доступен для подключения».\n5. Нажмите **Сохранить**.\n\n## Запрос для проверки соединения\n\n### Что отправляет Ozon\n\n```json5\n{\n   \"message_type\": \"string\",\n   \"time\": \"2019-08-24T14:15:22Z\"\n}\n```\n\n| <div style=\"width:200px\">Параметр</div>       | Тип    | Формат    | Описание                                         |\n|----------------|--------------------|-----------|--------------------------------------------------|\n| `message_type` | string             | —         | Тип уведомления — `TYPE_PING`.                   |\n| `time`         | string | date-time | Дата и время отправки уведомления в формате UTC. |\n\n### Что должен отвечать ваш сервис\n\n#### Если уведомление получено успешно\n\nПри успешной обработке уведомления сервис должен вернуть ответ с кодом HTTP 200:\n\n```json5\n{\n   \"version\": \"string\",\n   \"name\": \"string\",\n   \"time\": \"2019-08-24T14:15:22Z\"\n}\n```\n\n| <div style=\"width:200px\">Параметр</div>   | Тип    | Формат | Описание                                                 |\n|------------|---------------|--------|----------------------------------------------------------|\n| `version`  | string        | —      | Версия приложения.                                       |\n| `name`     | string        | —      | Название приложения.                                     |\n| `time`     | string | date-time       | Дата и время начала обработки уведомления в формате UTC. |\n\n#### Если произошла ошибка\n\nПри ошибке во время обработки уведомления сервис должен вернуть ответ с кодом HTTP из групп 4xx или 5xx:\n\n```json5\n{\n   \"error\": {\n      \"code\": \"ERROR_UNKNOWN\",\n      \"message\": \"ошибка\",\n      \"details\": null\n   }\n}\n```\n\n| <div style=\"width:200px\">Параметр</div>  | Тип | Формат | Описание                                                                                                                                                                                                  |\n|-----------|--------------|--------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| `error`   | object       | —      | Информация об ошибке.                                                                                                                                                                                     |\n| `code`    | string       | —      | Код ошибки:<br>• `ERROR_UNKNOWN` — неизвестная ошибка.<br>• `ERROR_PARAMETER_VALUE_MISSED` — не указано значение одного или нескольких параметров.<br>• `ERROR_REQUEST_DUPLICATED` — дублирующийся запрос. |\n| `message` | string       | —      | Детальное описание ошибки.                                                                                                                                                                                |\n| `details`          | string       | —      | Дополнительная информация.                                                                                                                                                                                |"
      },
      {
        "name": "push_resending",
        "x-displayName": "Повторная отправка уведомлений",
        "description": "### Интервалы повторной отправки\n\nЕсли уведомление не доставлено, через несколько секунд система попытается отправить запрос ещё несколько раз. \nИнтервал между попытками будет постепенно увеличиваться. \nКогда он достигнет максимального значения в 10 минут, будет ещё 5 попыток каждые 10 минут.\n\n### Автоматическая приостановка отправки уведомлений\n\nЕсли сообщение по-прежнему не получится доставить, попытки отправки запроса прекратятся.\n\nЕсли ваш сервис недоступен или возвращает ошибки в течение 24 часов, отправка всех уведомлений будет приостановлена.\nЧтобы возобновить их получение, в личном кабинете продавца повторно [подтвердите URL-адрес сервиса](#tag/push_start)."
      },
      {
        "name": "push_types",
        "x-displayName": "Уведомления, которые отправляет Ozon",
        "description": "Для каждого из типов уведомлений Ozon отправляет REST-запросы на адрес вашего сервиса. Ваш сервис [должен отвечать](#tag/service_response) по стандартам REST API.\n\n| Тип                                                                         | Назначение                                                                                     |\n|-----------------------------------------------------------------------------|------------------------------------------------------------------------------------------------|\n| [TYPE_PING](#section/Zapros-dlya-proverki-soedineniya)                      | Проверка статуса готовности сервиса при первичном подключении и периодически после подключения |\n| [TYPE_NEW_POSTING](#section/Novoe-otpravlenie)                              | Новое отправление                                                                              |\n| [TYPE_POSTING_CANCELLED](#section/Otmena-otpravleniya)                      | Отмена отправления                                                                             |\n| [TYPE_STATE_CHANGED](#section/Izmenenie-statusa-otpravleniya)               | Изменение статуса отправления                                                                  |\n| [TYPE_CUTOFF_DATE_CHANGED](#section/Izmenenie-daty-otgruzki-otpravleniya)   | Изменение даты отгрузки отправления                                                            |\n| [TYPE_DELIVERY_DATE_CHANGED](#section/Izmenenie-daty-dostavki-otpravleniya) | Изменение даты доставки отправления                                                            |\n| [TYPE_CREATE_ITEM](#section/Sozdanie-tovara)                                | Создание товара или ошибка при его создании                                                    |\n| [TYPE_UPDATE_ITEM](#section/Obnovlenie-tovara)                              | Обновление товара или ошибка при обновлении                                                    |\n| [TYPE_PRICE_INDEX_CHANGED](#section/Izmenenie-cenovogo-indeksa-tovara)      | Изменение ценового индекса товара                                                              |\n| [TYPE_STOCKS_CHANGED](#section/Izmenenie-ostatkov-na-skladah-prodavca)      | Изменение остатков на складах продавца                                                         |\n| [TYPE_NEW_MESSAGE](#section/Novoe-soobshenie-v-chate)                       | Новое сообщение в чате                                                                         |\n| [TYPE_UPDATE_MESSAGE](#section/Soobshenie-v-chate-izmeneno)                 | Изменение сообщения в чате                                                                     |\n| [TYPE_MESSAGE_READ](#section/Vashe-soobshenie-prochitano)                   | Ваше сообщение прочитано покупателем или поддержкой                                            |\n| [TYPE_CHAT_CLOSED](#section/Chat-zakryt)                                    | Чат закрыт                                                                                     |\n\n## Новое отправление\n\nУведомление, которое отправляет Ozon:\n\n```\n{\n  \"message_type\": \"TYPE_NEW_POSTING\",\n  \"posting_number\": \"24219509-0020-1\",\n  \"products\": [\n    {\n      \"sku\": 147451959,\n      \"quantity\": 2\n    }\n  ],\n  \"in_process_at\": \"2021-01-26T06:56:36.294Z\",\n  \"warehouse_id\": 18850503335000,\n  \"seller_id\": 15\n}\n```\n\n| <div style=\"width:200px\">Параметр</div> | Тип     | Формат    | Описание                                                                |\n|-----------------------------------------|---------|-----------|-------------------------------------------------------------------------|\n| `message_type`                          | string  | —         | Тип уведомления — `TYPE_NEW_POSTING`.                                   |\n| `posting_number`                        | string  | —         | Номер отправления.                                                      |\n| `products`                              | array   | —         | Информация о товарах.                                                   |\n| `sku`                                   | integer | int64     | SKU товара.                                                             |\n| `quantity`                              | integer | int64     | Количество товара.                                                      |\n| `in_process_at`                         | string  | date-time | Дата и время начала обработки отправления в формате UTC.                |\n| `warehouse_id`                          | integer | int64     | Идентификатор склада, на котором хранятся товары для этого отправления. |\n| `seller_id`                             | integer | int64     | Идентификатор продавца.                                                 |\n\n## Отмена отправления\n\nУведомление, которое отправляет Ozon:\n\n```\n{\n  \"message_type\": \"TYPE_POSTING_CANCELLED\",\n  \"posting_number\": \"24219509-0020-1\",\n  \"products\": [\n    {\n      \"sku\": 147451959,\n      \"quantity\": 1\n    }\n  ],\n  \"old_state\": \"posting_transferred_to_courier_service\",\n  \"new_state\": \"posting_canceled\",\n  \"changed_state_date\": \"2021-01-26T06:56:36.294Z\",\n  \"reason\": {\n    \"id\": 0,\n    \"message\": \"string\"\n  },\n  \"warehouse_id\": 0,\n  \"seller_id\": 15\n}\n```\n\n| <div style=\"width:200px\">Параметр</div> | Тип     | Формат    | Описание                                                                 |\n|-----------------------------------------|---------|-----------|--------------------------------------------------------------------------|\n| `message_type`                          | string  | —         | Тип уведомления — `TYPE_POSTING_CANCELLED`.                              |\n| `posting_number`                        | string  | —         | Номер отправления.                                                       |\n| `products`                              | array   | —         | Информация о товарах.                                                    |\n| `sku`                                   | integer | int64     | SKU товара.                                                              |\n| `quantity`                              | integer | int64     | Количество товара.                                                       |\n| `old_state`                             | string  | —         | Предыдущий статус отправления.                                           |\n| `new_state`                             | string  | —         | Новый статус отправления: `posting_canceled` — отменено.                 |\n| `changed_state_date`                    | string  | date-time | Дата и время изменения статуса отправления в формате UTC.                |\n| `reason`                                | object  | —         | Информация о причине отмены.                                             | \n| `id`                                    | integer | int64     | Идентификатор причины отмены.                                            |\n| `message`                               | string  | —         | Причина отмены.                                                          |\n| `warehouse_id`                          | integer | int64     | Идентификатор склада, на котором хранятся товары для этого отправления.  |\n| `seller_id`                             | integer  | int64         | Идентификатор продавца.                                                  |\n\n### Статусы отправлений\n\n- `posting_acceptance_in_progress` — идёт приёмка,\n- `posting_created` — создано,\n- `posting_transferring_to_delivery` — передаётся в доставку,\n- `posting_in_carriage` — в перевозке,\n- `posting_not_in_carriage` — не добавлен в перевозку,\n- `posting_in_client_arbitration` — клиентский арбитраж доставки,\n- `posting_on_way_to_city` — на пути в город,\n- `posting_transferred_to_courier_service` — передаётся курьеру,\n- `posting_in_courier_service` — курьер в пути,\n- `posting_on_way_to_pickup_point` — на пути в пункт выдачи,\n- `posting_in_pickup_point` — в пункте выдачи,\n- `posting_conditionally_delivered` — условно доставлено,\n- `posting_driver_pick_up` — у водителя,\n- `posting_not_in_sort_center` — не принят на сортировочном центре.\n\n## Изменение статуса отправления\n\nСоответствие статусных моделей Seller API и статусов пуш-модели.\n\n| Seller API              |                                     | Push-модель                              |                                     |\n|-------------------------|-------------------------------------|------------------------------------------|-------------------------------------|\n| **Статус**              | **Описание**                        | **Статус**                               | **Описание**                        |\n| `acceptance_in_progress`| Идёт приёмка.                       | `posting_acceptance_in_progress`         | Идёт приёмка.                       |\n| `awaiting_approve`      | Ожидает подтверждения.              | `posting_created`                        | Создана.                            |\n| `awaiting_packaging`    | Ожидает упаковки.                   | `posting_created`                        | Создана.                            |\n| `awaiting_registration` | Ожидает регистрации.                | `posting_awaiting_registration`          | Ожидает регистрации.                |\n| `awaiting_deliver`      | Ожидает отгрузки.                   | `posting_transferring_to_delivery`       | Передаётся в доставку.              |\n|                         |                                     | `posting_in_carriage`                    | В перевозке.                        |\n|                         |                                     | `posting_not_in_carriage`                | Не добавлен в перевозку.            |\n| `arbitration`           | Арбитраж.                           | `posting_in_arbitration`                 | Арбитраж.                           |\n| `client_arbitration`    | Клиентский арбитраж доставки.       | `posting_in_client_arbitration`          | Клиентский арбитраж.                |\n| `delivering`            | Доставляется.                       | `posting_on_way_to_city`                 | На пути в ваш город.                |\n|                         |                                     | `posting_transferred_to_courier_service` | Передаётся курьеру.                 |\n|                         |                                     | `posting_in_courier_service`             | Курьер в пути.                      |\n|                         |                                     | `posting_on_way_to_pickup_point`         | На пути в пункт выдачи.             |\n|                         |                                     | `posting_in_pickup_point`                | В пункте выдачи.                    |\n|                         |                                     | `posting_conditionally_delivered`        | Условно доставлено.                 |\n| `driver_pickup`         | У водителя.                         | `posting_driver_pick_up`                 | У водителя.                         |\n| `delivered`             | Доставлено.                         | `posting_delivered`                      | Доставлено.                         |\n|                         |                                     | `posting_received`                       | Получено.                           |\n| `cancelled`             | Отменено.                           | `posting_canceled`                       | Отменено.                           |\n| `not_accepted`          | Не принято на сортировочном центре. | `posting_not_in_sort_center`             | Не принято на сортировочном центре. |\n\nУведомление, которое отправляет Ozon:\n\n```\n{\n  \"message_type\": \"TYPE_STATE_CHANGED\",\n  \"posting_number\": \"24219509-0020-2\",\n  \"new_state\": \"posting_delivered\",\n  \"changed_state_date\": \"2021-02-02T15:07:46.765Z\",\n  \"warehouse_id\": 0,\n  \"seller_id\": 15\n}\n```\n\n| <div style=\"width:200px\">Параметр</div> | Тип     | Формат    | Описание                                                                 |\n|-----------------------------------------|---------|-----------|--------------------------------------------------------------------------|\n| `message_type`                          | string  | —         | Тип уведомления — `TYPE_STATE_CHANGED`.                                  |\n| `posting_number`                        | string  | —         | Номер отправления.                                                       |\n| `new_state`                             | string  | —         | Новый статус отправления.                                                |\n| `changed_state_date`                    | string  | date-time | Дата и время изменения статуса отправления в формате UTC.                |\n| `warehouse_id`                          | integer | int64     | Идентификатор склада, на котором хранятся товары для этого отправления.  |\n| `seller_id`                             | integer  | int64         | Идентификатор продавца.                                                  |\n\n### Статусы отправлений\n\n- `posting_acceptance_in_progress` — идёт приёмка,\n- `posting_transferring_to_delivery` — передаётся в доставку,\n- `posting_in_carriage` — в перевозке,\n- `posting_not_in_carriage` — не добавлен в перевозку,\n- `posting_in_arbitration` — арбитраж,\n- `posting_in_client_arbitration` — клиентский арбитраж доставки,\n- `posting_on_way_to_city` — на пути в город,\n- `posting_transferred_to_courier_service` — передаётся курьеру,\n- `posting_in_courier_service` — курьер в пути,\n- `posting_on_way_to_pickup_point` — на пути в пункт выдачи,\n- `posting_in_pickup_point` — в пункте выдачи,\n- `posting_conditionally_delivered` — условно доставлено,\n- `posting_driver_pick_up` — у водителя,\n- `posting_delivered` — доставлено,\n- `posting_not_in_sort_center` — не принят на сортировочном центре.\n\n## Изменение даты отгрузки отправления\n\n<aside class=\"warning\">\n    Уведомление работает в тестовом режиме. Рекомендуем проверять дату отгрузки через метод <a href=\"#operation/PostingAPI_GetFbsPostingV3\">POST /v3/posting/fbs/get</a> в поле <code>result.shipment_date</code>.<br><br>Поле <code>new_cutoff_date</code> может приходить пустым из-за удаления интервала доставки. Дождитесь назначения новой даты — после этого придёт новое уведомление.\n</aside>\n<br>\n<aside class=\"notice\">\n    Иногда уведомления этого типа могут приходить после сборки заказа —&nbsp;игнорируйте их.\n</aside>\n\nУведомление, которое отправляет Ozon:\n\n```\n{\n  \"message_type\": \"TYPE_CUTOFF_DATE_CHANGED\",\n  \"posting_number\": \"24219509-0020-2\",\n  \"new_cutoff_date\": \"2021-11-24T07:00:00Z\",\n  \"old_cutoff_date\": \"2021-11-21T10:00:00Z\",\n  \"warehouse_id\": 0,\n  \"seller_id\": 15\n}\n```\n\n| <div style=\"width:200px\">Параметр</div> | Тип     | Формат    | Описание                                                                |\n|-----------------------------------------|---------|-----------|-------------------------------------------------------------------------|\n| `message_type`                          | string  | —         | Тип уведомления — `TYPE_CUTOFF_DATE_CHANGED`.                           |\n| `posting_number`                        | string  | —         | Номер отправления.                                                      |\n| `new_cutoff_date`                       | string  | date-time | Новые дата и время отгрузки в формате UTC.                              |\n| `old_cutoff_date`                       | string  | date-time | Предыдущие дата и время отгрузки в формате UTC.                         |\n| `warehouse_id`                          | integer | int64     | Идентификатор склада, на котором хранятся товары для этого отправления. |\n| `seller_id`                             | integer | int64     | Идентификатор продавца.                                                 |\n\n## Изменение даты доставки отправления\n\nУведомление, которое отправляет Ozon:\n\n<aside class=\"warning\">\nУведомление будет приходить, если товары в отправлении продаются по схеме rFBS.<br><br>Поля <code>new_delivery_date_begin</code> и <code>new_delivery_date_end</code> могут приходить пустыми из-за удаления интервала доставки. Дождитесь назначения новой даты — после этого придёт новое уведомление.\n</aside>\n\n```\n{\n  \"message_type\": \"TYPE_DELIVERY_DATE_CHANGED\",\n  \"posting_number\": \"24219509-0020-2\",\n  \"new_delivery_date_begin\": \"2021-11-24T07:00:00Z\",\n  \"new_delivery_date_end\": \"2021-11-24T16:00:00Z\",\n  \"old_delivery_date_begin\": \"2021-11-21T10:00:00Z\",\n  \"old_delivery_date_end\": \"2021-11-21T19:00:00Z\",\n  \"warehouse_id\": 0,\n  \"seller_id\": 15\n}\n```\n\n| <div style=\"width:200px\">Параметр</div> | Тип     | Формат    | Описание                                                                 |\n|-----------------------------------------|---------|-----------|--------------------------------------------------------------------------|\n| `message_type`                          | string  | —         | Тип уведомления — `TYPE_DELIVERY_DATE_CHANGED`.                          |\n| `posting_number`                        | string  | —         | Номер отправления.                                                       |\n| `new_delivery_date_begin`               | string  | date-time | Новые дата и время начала доставки в формате UTC.                        |\n| `new_delivery_date_end`                 | string  | date-time | Новые дата и время окончания доставки в формате UTC.                     |\n| `old_delivery_date_begin`               | string  | date-time | Предыдущие дата и время начала доставки в формате UTC.                   |\n| `old_delivery_date_end`                 | string  | date-time | Предыдущие дата и время окончания доставки в формате UTC.                |\n| `warehouse_id`                          | integer | int64     | Идентификатор склада, на котором хранятся товары для этого отправления.  |\n| `seller_id`                             | integer | int64     | Идентификатор продавца.                                                  |\n\n## Создание товара\n\nУведомление, которое отправляет Ozon:\n\n```\n{\n    \"message_type\": \"string\",\n    \"seller_id\": 0,\n    \"offer_id\": \"string\",\n    \"product_id\": 0,\n    \"is_error\": false,\n    \"changed_at\": \"2021-09-01T14:15:22Z\"\n}\n```\n\n| <div style=\"width:200px\">Параметр</div> | Тип         | Формат    | Описание                                                                                                                              |\n|-----------------------------------------|-------------|-----------|---------------------------------------------------------------------------------------------------------------------------------------|\n| `seller_id`                             | integer     | int64     | Идентификатор продавца.                                                                                                               |\n| `message_type`                          | string      | —         | Тип уведомления — `TYPE_CREATE_ITEM`.                                                                                                 |\n| `offer_id`                              | string      | —         | Артикул товара.                                                                                                                       |\n| `product_id`                            | integer     | int64     | Идентификатор товара.                                                                                                                 |\n| `is_error`                              | boolean     | —         | Признак, что при создании товара возникли ошибки:<br>• `true` — были ошибки, товар не создан;<br>• `false` — товар создан без ошибок. |\n| `changed_at`                            | string      | date-time | Дата и время изменения.                                                                                                               |\n\n## Обновление товара\n\nУведомление, которое отправляет Ozon:\n\n```\n{\n    \"message_type\": \"string\",\n    \"seller_id\": 0,\n    \"offer_id\": \"string\",\n    \"product_id\": 0,\n    \"is_error\": false, \n    \"changed_at\": \"2021-09-01T14:15:22Z\"\n}\n```\n\n| <div style=\"width:200px\">Параметр</div> | Тип         | Формат    | Описание                                                                                                                                |\n|-----------------------------------------|-------------|-----------|-----------------------------------------------------------------------------------------------------------------------------------------|\n| `seller_id`                             | integer     | int64     | Идентификатор продавца.                                                                                                                 |\n| `message_type`                          | string      | —         | Тип уведомления — `TYPE_UPDATE_ITEM`.                                                                                                   |\n| `offer_id`                              | string      | —         | Артикул товара.                                                                                                                         |\n| `product_id`                            | integer     | int64     | Идентификатор товара.                                                                                                                   |\n| `is_error`                              | boolean     | —         | Признак, что при обновлении товара возникли ошибки:<br>• `true` — были ошибки, товар не создан;<br>• `false` — товар создан без ошибок. |\n| `changed_at`                            | string      | date-time | Дата и время изменения.                                                                                                                 |\n\n## Изменение ценового индекса товара\n\nУведомление, которое отправляет Ozon:\n\n```\n{\n    \"seller_id\": 0,\n    \"message_type\": \"string\",\n    \"updated_at\":\"2022-06-21T05:52:46.648533678Z\",\n    \"sku\": 0,\n    \"product_id\": 0,\n    \"price_index\": 0\n}\n```\n\n| <div style=\"width:200px\">Параметр</div> | Тип     | Формат    | Описание                                      |\n|-----------------------------------------|---------|-----------|-----------------------------------------------|\n| `seller_id`                             | integer | int64     | Идентификатор продавца.                       |\n| `message_type`                          | string  | —         | Тип уведомления — `TYPE_PRICE_INDEX_CHANGED`. |\n| `updated_at`                            | string  | date-time | Дата и время изменения ценового индекса.      |\n| `sku`                                   | integer | int64     | SKU товара.                                   |\n| `product_id`                            | integer | int64     | Идентификатор товара.                         |\n| `price_index`                           | integer | int64     | Ценовой индекс.                               |\n\n\n## Изменение остатков на складах продавца\n\nУведомление, которое отправляет Ozon:\n\n```\n{\n  \"message_type\": \"string\",\n  \"seller_id\": 0,\n  \"items\": [\n    {\n      \"product_id\": 0,\n      \"sku\": 0,\n      \"updated_at\": \"2021-09-01T14:15:22Z\",\n      \"stocks\": [\n        {\n          \"warehouse_id\": 0,\n          \"present\": 0,\n          \"reserved\": 0\n        }\n      ]\n    }\n  ]\n}\n```\n\n| <div style=\"width:200px\">Параметр</div> | Тип     | Формат    | Описание                                        |\n|-----------------------------------------|---------|-----------|-------------------------------------------------|\n| `seller_id`                             | integer | int64     | Идентификатор продавца.                         |\n| `message_type`                          | string  | —         | Тип уведомления — `TYPE_STOCKS_CHANGED`.        |\n| `items`                                 | array   | —         | Массив с данными товаров.                       |\n| `updated_at`                            | string  | date-time | Дата и время изменения.                         |\n| `sku`                                   | integer | int64     | SKU товара при работе по схемам FBS или rFBS.   |\n| `product_id`                            | integer | int64     | Идентификатор товара.                           |\n| `stocks`                                | array   | —         | Массив с данными по остаткам товара.            |\n| `warehouse_id`                          | integer | int64     | Идентификатор склада.                           |\n| `present`                               | integer | int64     | Общее количество товара на складе.              |\n| `reserved`                              | integer | int64     | Количество зарезервированных товаров на складе. |\n\n## Новое сообщение в чате\n\n```\n{  \n    \"message_type\": \"TYPE_NEW_MESSAGE\",\n    \"chat_id\": \"b646d975-0c9c-4872-9f41-8b1e57181063\",\n    \"chat_type\": \"Buyer_Seller\",\n    \"message_id\": \"3000000000817031942\",\n    \"created_at\": \"2022-07-18T20:58:04.528Z\",\n    \"user\": {\n        \"id\": \"115568\",\n        \"type\": \"Сustomer\"\n    },\n    \"data\": [\n        \"Текст сообщения\"\n    ],  \n    \"seller_id\": \"7\"\n}\n```\n\n| <div style=\"width:200px\">Параметр</div>  | Тип             | Формат    | Описание                                                                                                                                    |\n|------------------------------------------|-----------------|-----------|---------------------------------------------------------------------------------------------------------------------------------------------|\n| `message_type`                           | string          | —         | Тип уведомления — `TYPE_NEW_MESSAGE`.                                                                                                       |\n| `chat_id`                                | string          | —         | Идентификатор чата.                                                                                                                         |\n| `chat_type`                              | string          | —         | Тип чата:<br>• `Seller_Support` — чат с поддержкой.<br>• `Buyer_Seller` — чат с покупателем.<br>• `Seller_Notification` — уведомления Ozon. |\n| `message_id`                             | string          | —         | Идентификатор сообщения.                                                                                                                    |\n| `created_at`                             | string          | date-time | Дата создания сообщения.                                                                                                                    |\n| `user`                                   | object          | —         | Информация об отправителе сообщения.                                                                                                        |\n| `id`                                     | string          | —         | Идентификатор отправителя.                                                                                                                  |\n| `type`                                   | string          | —         | Тип отправителя:<br>• `Customer` — покупатель.<br>• `Support` — поддержка.<br>• `NotificationUser` — Ozon.                                  |\n| `data`                                   | array of string | —         | Массив с содержимым сообщения в формате Markdown.                                                                                           |\n| `seller_id`                              | integer         | int64     | Идентификатор продавца.                                                                                                                     |\n\n## Сообщение в чате изменено\n\n```\n{  \n    \"message_type\": \"TYPE_UPDATE_MESSAGE\",\n    \"chat_id\": \"b646d975-0c9c-4872-9f41-8b1e57181063\",\n    \"chat_type\": \"Buyer_Seller\",\n    \"message_id\": \"3000000000817031942\",\n    \"created_at\": \"2022-07-18T20:58:04.528Z\",\n    \"updated_at\": \"2022-07-18T20:59:04.528Z\",\n    \"user\": {\n        \"id\": \"115568\",\n        \"type\": \"Сustomer\"\n    },\n    \"data\": [\n        \"Текст сообщения\"\n    ], \n    \"seller_id\": \"7\"\n}\n```\n\n| <div style=\"width:200px\">Параметр</div> | Тип             | Формат    | Описание                                                                                                                                    |\n|-----------------------------------------|-----------------|-----------|---------------------------------------------------------------------------------------------------------------------------------------------|\n| `message_type`                          | string          | —         | Тип уведомления — `TYPE_UPDATE_MESSAGE`.                                                                                                    |\n| `chat_id`                               | string          | —         | Идентификатор чата.                                                                                                                         |\n| `chat_type`                             | string          | —         | Тип чата:<br>• `Seller_Support` — чат с поддержкой.<br>• `Buyer_Seller` — чат с покупателем.<br>• `Seller_Notification` — уведомления Ozon. |\n| `message_id`                            | string          | —         | Идентификатор сообщения.                                                                                                                    |\n| `created_at`                            | string          | date-time | Дата создания сообщения.                                                                                                                    |\n| `updated_at`                            | string          | date-time | Дата изменения сообщения.                                                                                                                   |\n| `user`                                  | object          | —         | Информация об отправителе сообщения.                                                                                                        |\n| `id`                                    | string          | —         | Идентификатор отправителя.                                                                                                                  |\n| `type`                                  | string          | —         | Тип отправителя:<br>• `Customer` — покупатель.<br>• `Support` — поддержка.<br>• `NotificationUser` — Ozon.                                  |\n| `data`                                  | array of string | —         | Массив с содержимым сообщения в формате Markdown.                                                                                           |\n| `seller_id`                             | integer         | int64     | Идентификатор продавца.                                                                                                                     |\n\n## Ваше сообщение прочитано\n\n```\n{  \n    \"message_type\": \"TYPE_MESSAGE_READ\",\n    \"chat_id\": \"b646d975-0c9c-4872-9f41-8b1e57181063\",\n    \"chat_type\": \"Buyer_Seller\",\n    \"message_id\": \"3000000000817031942\",\n    \"created_at\": \"2022-07-18T20:58:04.528Z\",    \n    \"user\": {\n        \"id\": \"115568\",\n        \"type\": \"Сustomer\"\n    },\n    \"last_read_message_id\": \"3000000000817031942\",\n    \"seller_id\": \"7\"\n}\n```\n\n| <div style=\"width:200px\">Параметр</div> | Тип     | Формат    | Описание                                                                                                                                    |\n|-----------------------------------------|---------|-----------|---------------------------------------------------------------------------------------------------------------------------------------------|\n| `message_type`                          | string  | —         | Тип уведомления — `TYPE_MESSAGE_READ`.                                                                                                      |\n| `chat_id`                               | string  | —         | Идентификатор чата.                                                                                                                         |\n| `chat_type`                             | string  | —         | Тип чата:<br>• `Seller_Support` — чат с поддержкой.<br>• `Buyer_Seller` — чат с покупателем.<br>• `Seller_Notification` — уведомления Ozon. |\n| `message_id`                            | string  | —         | Идентификатор сообщения.                                                                                                                    |\n| `created_at`                            | string  | date-time | Дата создания сообщения.                                                                                                                    |\n| `user`                                  | object  | —         | Информация о пользователе, прочитавшем сообщение.                                                                                           |\n| `id`                                    | string  | —         | Идентификатор пользователя.                                                                                                                 |\n| `type`                                  | string  | —         | Тип пользователя:<br>• `Customer` — покупатель.<br>• `Support` — поддержка.<br>• `NotificationUser` — Ozon.                                 |\n| `last_read_message_id`                  | string  | —         | Идентификатор последнего прочитанного сообщения.                                                                                            |\n| `seller_id`                             | integer | int64     | Идентификатор продавца.                                                                                                                     |\n\n## Чат закрыт\n\n```\n{  \n    \"message_type\": \"TYPE_CHAT_CLOSED\",\n    \"chat_id\": \"b646d975-0c9c-4872-9f41-8b1e57181063\",\n    \"chat_type\": \"Buyer_Seller\",\n    \"user\": {\n        \"id\": \"115568\",\n        \"type\": \"Сustomer\"\n    },\n    \"seller_id\": \"7\"\n}\n```\n\n| <div style=\"width:200px\">Параметр</div> | Тип     | Формат    | Описание                                                                                                                                    |\n|-----------------------------------------|---------|-----------|---------------------------------------------------------------------------------------------------------------------------------------------|\n| `message_type`                          | string  | —         | Тип уведомления — `TYPE_MESSAGE_READ`.                                                                                                      |\n| `chat_id`                               | string  | —         | Идентификатор чата.                                                                                                                         |\n| `chat_type`                             | string  | —         | Тип чата:<br>• `Seller_Support` — чат с поддержкой.<br>• `Buyer_Seller` — чат с покупателем.<br>• `Seller_Notification` — уведомления Ozon. |\n| `user`                                  | object  | —         | Информация о пользователе, закрывшем чат.                                                                                                   |\n| `id`                                    | string  | —         | Идентификатор пользователя.                                                                                                                 |\n| `type`                                  | string  | —         | Тип пользователя:<br>• `Customer` — покупатель.<br>• `Support` — поддержка.<br>• `NotificationUser` — Ozon.                                 |\n| `seller_id`                             | integer | int64     | Идентификатор продавца.                                                                                                                     |"
      },
      {
        "name": "service_response",
        "x-displayName": "Ответ вашего сервиса",
        "description": "## Если уведомление получено успешно\n\nПри успешной обработке уведомления сервис должен вернуть ответ с кодом HTTP 200:\n\n```json5\n{\n  \"result\": true\n}\n```\n\n| <div style=\"width:100px\">Параметр</div> | Тип     | Формат | Описание              |\n|-----------------------------------------|---------|--------|-----------------------|\n| `result`                                | boolean | —      | Уведомление получено. |\n\n\n## Если произошла ошибка\n\nПри ошибке во время обработки уведомления сервис должен вернуть ответ с кодом HTTP из групп 4xx или 5xx:\n\n```json5\n{\n  \"error\": {\n    \"code\": \"ERROR_UNKNOWN\",\n    \"message\": \"ошибка\",\n    \"details\": null\n  }\n}\n```\n\n| <div style=\"width:100px\">Параметр</div> | Тип | Формат | Описание                                                                                                                                                                                                  |\n|-----------------------------------------|--------------|--------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| `error`                                 | object       | —      | Информация об ошибке.                                                                                                                                                                                     |\n| `code`                                  | string       | —      | Код ошибки:<br>• `ERROR_UNKNOWN` — неизвестная ошибка.<br>• `ERROR_PARAMETER_VALUE_MISSED` — не указано значение одного или нескольких параметров.<br>• `ERROR_REQUEST_DUPLICATED` — дублирующийся запрос. |\n| `message`                               | string       | —      | Детальное описание ошибки.                                                                                                                                                                                |\n| `details`                               | string       | —      | Дополнительная информация.                                                                                                                                                                                |"
      }
    ],
    "paths": {
      "/v2/category/tree": {
        "post": {
          "summary": "Дерево категории товаров",
          "description": "Возвращает категории для товаров в виде дерева. Создание товаров доступно только в категориях последнего уровня, сравните именно эти категории с категориями своей площадки. Категории не создаются по запросу пользователя.\n\n<aside class=\"warning\">\n  Выберите корректную категорию для товара, так как для разных категорий применяется разный размер комиссии на продаваемый товар.\n</aside>\n",
          "operationId": "CategoryAPI_GetCategoryTree",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/categoryGetCategoryTreeRequest"
                },
                "example": {
                  "category_id": 17034410,
                  "language": "DEFAULT"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Дерево категории товаров",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/categoryGetCategoryTreeResponse"
                  },
                  "example": {
                    "result": [
                      {
                        "category_id": 17034410,
                        "title": "Развивающие игрушки",
                        "children": []
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["CategoryAPI"]
        }
      },
      "/v3/category/attribute": {
        "post": {
          "summary": "Список характеристик категории",
          "description": "Получение характеристик для указанной категории товаров.\n\nПередавайте не более 20 идентификаторов категорий в списке `category_id`.\n\nУзнать, есть ли у атрибута вложенный справочник, можно по параметру `dictionary_id`. \nЕсли значение `0` — справочника нет. Если значение другое, то справочники есть. Их нужно запрашивать методом [/v2/category/attribute/values](#operation/CategoryAPI_DictionaryValueBatch).\n",
          "operationId": "CategoryAPI_GetCategoryAttributesV3",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/categoryv3CategoryAttributesRequest"
                },
                "example": {
                  "attribute_type": "ALL",
                  "category_id": [17034410],
                  "language": "DEFAULT"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Список характеристик категории",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/categoryv3CategoryAttributesResponse"
                  },
                  "example": {
                    "result": [
                      {
                        "category_id": 17034410,
                        "attributes": [
                          {
                            "id": 85,
                            "name": "Бренд",
                            "description": "Укажите наименование бренда, под которым произведен товар. Если товар не имеет бренда, используйте значение \"Нет бренда\"",
                            "type": "String",
                            "is_collection": false,
                            "is_required": true,
                            "group_id": 0,
                            "group_name": "",
                            "dictionary_id": 28732849
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["CategoryAPI"]
        }
      },
      "/v2/category/attribute/values": {
        "post": {
          "summary": "Справочник значений характеристики",
          "description": "Узнать, есть ли у атрибута вложенный справочник, можно через метод [/v3/category/attribute](#operation/CategoryAPI_GetCategoryAttributesV3). \nЕсли справочники есть, их нужно запрашивать этим методом.\n",
          "operationId": "CategoryAPI_DictionaryValueBatch",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/categoryv2DictionaryValueBatchRequest"
                },
                "example": {
                  "attribute_id": 10096,
                  "category_id": 17028968,
                  "language": "DEFAULT",
                  "last_value_id": 0,
                  "limit": 3
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Справочник характеристик",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/categoryv2DictionaryValueBatchResponse"
                  },
                  "example": {
                    "result": [
                      {
                        "id": 61571,
                        "value": "белый",
                        "info": "",
                        "picture": ""
                      },
                      {
                        "id": 61572,
                        "value": "прозрачный",
                        "info": "",
                        "picture": ""
                      },
                      {
                        "id": 61573,
                        "value": "бежевый",
                        "info": "",
                        "picture": ""
                      }
                    ],
                    "has_next": true
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["CategoryAPI"]
        }
      },
      "/v2/product/import": {
        "post": {
          "summary": "Создать или обновить товар",
          "description": "Метод для создания товаров и обновления информации о них.\n\nВ сутки можно создать или обновить определённое количество товаров. Чтобы узнать лимит, используйте\n[/v2/product/info/limit](#operation/ProductAPI_GetProductInfoLimitV2). Если количество загрузок и обновлений товаров\nпревысит лимит, появится ошибка `item_limit_exceeded`.\n\nВ одном запросе можно передать до 100 товаров. Каждый товар — это отдельный элемент в массиве `items`. Укажите\nвсю информацию о товаре: его характеристики, штрихкод, изображения, габариты, цену и валюту цены.\n\nУказанная валюта должна совпадать с той, которая установлена в настройках личного кабинета. По умолчанию передаётся `RUB` — российский рубль.\nНапример, если у вас установлена валюта юань, передавайте значение `CNY`, иначе вернётся ошибка.\n\nТовар не будет создан или обновлён, если вы заполните неправильно или не укажете:\n   - **Обязательные характеристики**: `images`, `name`, `offer_id`, `price`, `vat` и другие характеристики, которые зависят от категории товара. Вы можете узнать их в [Базе знаний продавца](https://seller-edu.ozon.ru/docs/work-with-goods/trebovaniya-k-kartochkam-tovarov/harakteristiki-tovara.html) или получить методом\n[/v3/category/attribute](#operation/CategoryAPI_GetCategoryAttributesV3).\n   - **Реальные объёмно-весовые характеристики**: `depth`, `width`, `height`, `dimension_unit`, `weight`, `weight_unit`. Не пропускайте эти параметры в запросе и не указывайте 0.\n\nДля некоторых характеристик можно использовать HTML-теги.\n\n[Подробнее о характеристиках в Базе знаний продавца](https://seller-edu.ozon.ru/docs/work-with-goods/trebovaniya-k-kartochkam-tovarov/harakteristiki-tovara.html)\n\nПосле модерации товар появится в вашем личном кабинете, но не будет виден пользователям, пока вы не выставите его\nна продажу.\n\nКаждый товар в запросе — отдельный элемент массива `items`.\n\nЧтобы объединить две карточки, для каждой передайте `9048` в массиве `attributes`. Все атрибуты в этих карточках, кроме размера или цвета, должны совпадать.\n\n## Загрузка изображений\n\nДля загрузки передайте в запросе ссылки на изображения в общедоступном облачном хранилище.\nФормат изображения по ссылке — JPG или PNG.\n\nИзображения в массиве `images` располагайте в соответствии с желаемым порядком на сайте. Для загрузки главного\nизображения товара используйте параметр `primary_image`. Если не передать значение `primary_image`, главным будет\nпервое изображение в массиве `images`.\n\nДля каждого товара вы можете загрузить до 15 изображений, включая главное.\nЕсли передать значение `primary_image`, максимальное количество изображений в `images` — 14.\nЕсли параметр `primary_image` пустой, то в `images` можно передать до 15 изображений.\n\nДля загрузки изображений 360 используйте поле `images360`, для загрузки маркетингового цвета — `color_image`.\n\nЕсли вы хотите изменить состав или порядок изображений, получите информацию с помощью методов\n[/v2/product/info](#operation/ProductAPI_GetProductInfoV2) или\n[/v2/product/info/list](#operation/ProductAPI_GetProductInfoListV2) — в них отображается текущий порядок и\nсостав изображений. Скопируйте данные полей `images`, `images360`, `color_image`, измените и дополните состав или\nпорядок в соответствии с необходимостью.\n\n## Загрузка видео\n\nДля загрузки передайте в запросе ссылки на видео.\n\nДля этого в параметре `complex_attributes` передайте объект. В нём в массиве `attributes` передайте 2 объекта с `complex_id = 100001`:\n\n- В первом передайте укажите `id = 21841` и в массиве `values` передайте объект с ссылкой на видео.\n\n  __Пример__:\n\n  ```\n  {\n    \"complex_id\": 100001,\n    \"id\": 21841,\n    \"values\": [\n      {\n        \"value\": \"https://www.youtube.com/watch?v=ZwM0iBn03dY\"\n      }\n    ]\n  }\n  ```\n\n- Во втором укажите значение `id = 21837` и в массиве `values` передайте объект с названием видео.\n\n  __Пример__:\n\n  ```\n  {\n    \"complex_id\": 100001,\n    \"id\": 21837,\n    \"values\": [\n      {\n        \"value\": \"videoName_1\"\n      }\n    ]\n  }\n  ```\n\nЕсли вы хотите загрузить несколько видео, передавайте значения для каждого видео в разных объектах массива `complex_attributes`.\n\n## Загрузка таблицы размеров\nЧтобы добавить в карточку товара таблицу размеров, созданную с помощью [конструктора](https://table-constructor.ozon.ru/visual-editor), передайте её в массиве `attributes` в формате JSON как Rich-контент `id = 13164`. <br><br>\n[Конструктор в формате JSON](https://table-constructor.ozon.ru/schema.json)<br>\n[Подробнее о конструкторе в Базе знаний продавца](https://docs.ozon.ru/global/products/requirements/size-table-constructor/)\n",
          "operationId": "ProductAPI_ImportProductsV2",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/productv2ImportProductsRequest"
                },
                "examples": {
                  "withoutVideo": {
                    "summary": "Пример запроса без загрузки видео",
                    "value": {
                      "items": [
                        {
                          "attributes": [
                            {
                              "complex_id": 0,
                              "id": 5076,
                              "values": [
                                {
                                  "dictionary_value_id": 971082156,
                                  "value": "Стойка для акустической системы"
                                }
                              ]
                            },
                            {
                              "complex_id": 0,
                              "id": 9048,
                              "values": [
                                {
                                  "value": "Комплект защитных плёнок для X3 NFC. Темный хлопок"
                                }
                              ]
                            },
                            {
                              "complex_id": 0,
                              "id": 8229,
                              "values": [
                                {
                                  "dictionary_value_id": 95911,
                                  "value": "Комплект защитных плёнок для X3 NFC. Темный хлопок"
                                }
                              ]
                            },
                            {
                              "complex_id": 0,
                              "id": 85,
                              "values": [
                                {
                                  "dictionary_value_id": 5060050,
                                  "value": "Samsung"
                                }
                              ]
                            },
                            {
                              "complex_id": 0,
                              "id": 10096,
                              "values": [
                                {
                                  "dictionary_value_id": 61576,
                                  "value": "серый"
                                }
                              ]
                            }
                          ],
                          "barcode": "112772873170",
                          "category_id": 17033876,
                          "color_image": "",
                          "complex_attributes": [],
                          "currency_code": "RUB",
                          "depth": 10,
                          "dimension_unit": "mm",
                          "height": 250,
                          "images": [],
                          "images360": [],
                          "name": "Комплект защитных плёнок для X3 NFC. Темный хлопок",
                          "offer_id": "143210608",
                          "old_price": "1100",
                          "pdf_list": [],
                          "premium_price": "900",
                          "price": "1000",
                          "primary_image": "",
                          "vat": "0.1",
                          "weight": 100,
                          "weight_unit": "g",
                          "width": 150
                        }
                      ]
                    }
                  },
                  "withVideo": {
                    "summary": "Пример запроса с загрузкой видео",
                    "value": {
                      "items": [
                        {
                          "category_id": 17036191,
                          "depth": 250,
                          "dimension_unit": "mm",
                          "height": 145,
                          "images": [
                            "http://ozon.promtehnika.ru/photo/iHome-5?2.jpg",
                            "http://ozon.promtehnika.ru/photo/iHome-5?3.jpg"
                          ],
                          "primary_image": "http://ozon.promtehnika.ru/photo/iHome-5/1z.jpg",
                          "name": "iHome-5 - видеоглазок в дверь с записью овидеоглазок дверной монитор, ip видеоглазок",
                          "attributes": [
                            {
                              "id": 8229,
                              "values": [
                                {
                                  "dictionary_value_id": 95539
                                }
                              ]
                            },
                            {
                              "id": 10096,
                              "values": [
                                {
                                  "dictionary_value_id": 61577
                                }
                              ]
                            },
                            {
                              "id": 9048,
                              "values": [
                                {
                                  "value": "iHome-5"
                                }
                              ]
                            },
                            {
                              "id": 85,
                              "values": [
                                {
                                  "dictionary_value_id": 126745801
                                }
                              ]
                            },
                            {
                              "id": 4191,
                              "values": [
                                {
                                  "value": "описание"
                                }
                              ]
                            }
                          ],
                          "complex_attributes": [
                            {
                              "attributes": [
                                {
                                  "complex_id": 100001,
                                  "id": 21841,
                                  "values": [
                                    {
                                      "value": "https://www.youtube.com/watch?v=ZwM0iBn03dY"
                                    }
                                  ]
                                },
                                {
                                  "complex_id": 100001,
                                  "id": 21837,
                                  "values": [
                                    {
                                      "value": "videoName_1"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "attributes": [
                                {
                                  "complex_id": 100001,
                                  "id": 21841,
                                  "values": [
                                    {
                                      "value": "https://www.youtube.com/watch?v=pz15NanA740"
                                    }
                                  ]
                                },
                                {
                                  "complex_id": 100001,
                                  "id": 21837,
                                  "values": [
                                    {
                                      "value": "videoName_2"
                                    }
                                  ]
                                }
                              ]
                            }
                          ],
                          "barcode": "A2IHOME-5",
                          "currency_code": "RUB",
                          "offer_id": "2iHome-5",
                          "price": "10028",
                          "old_price": "11533",
                          "premium_price": "9497",
                          "vat": "0",
                          "weight": 800,
                          "weight_unit": "g",
                          "width": 110
                        }
                      ]
                    }
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Создан новый товар / Информация о товаре обновлена",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/productv2ImportProductsResponse"
                  },
                  "example": {
                    "result": {
                      "task_id": 172549793
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["ProductAPI"]
        }
      },
      "/v1/product/import/info": {
        "post": {
          "summary": "Узнать статус добавления товара",
          "description": "Позволяет получить статус создания карточки товара.",
          "operationId": "ProductAPI_GetImportProductsInfo",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/productGetImportProductsInfoRequest"
                },
                "example": {
                  "task_id": "172549793"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Статус добавления товара",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/productGetImportProductsInfoResponse"
                  },
                  "example": {
                    "result": {
                      "items": [
                        {
                          "offer_id": "143210608",
                          "product_id": 137285792,
                          "status": "imported",
                          "errors": []
                        }
                      ],
                      "total": 1
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["ProductAPI"]
        }
      },
      "/v1/product/import-by-sku": {
        "post": {
          "summary": "Создать товар по Ozon ID",
          "description": "Создаёт товар по указанному Ozon ID. Количество товаров не ограничено. \n\nОбновить товар по Ozon ID нельзя.\n",
          "operationId": "ProductAPI_ImportProductsBySKU",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/productImportProductsBySKURequest"
                },
                "example": {
                  "items": [
                    {
                      "sku": 298789742,
                      "name": "string",
                      "offer_id": "91132",
                      "currency_code": "RUB",
                      "old_price": "2590",
                      "price": "2300",
                      "premium_price": "2200",
                      "vat": "0.1"
                    }
                  ]
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Товар создан",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/productImportProductsBySKUResponse"
                  },
                  "example": {
                    "result": {
                      "task_id": 176594213,
                      "unmatched_sku_list": []
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["ProductAPI"]
        }
      },
      "/v1/product/pictures/import": {
        "post": {
          "summary": "Загрузить или обновить изображения товара",
          "description": "Метод для загрузки или обновления изображений товара.\n\nПри каждом вызове метода передавайте все изображения, которые должны быть на карточке товара. Например, если вы вызвали метод и загрузили 10 изображений, а затем вызвали метод второй раз и загрузили ещё одно,\nто все 10 предыдущих сотрутся.\n\nДля загрузки передайте адрес ссылки на изображение в общедоступном облачном хранилище.\nФормат изображения по ссылке — JPG или PNG.\n\nИзображения в массиве `images` располагайте в соответствии с желаемым порядком на сайте. Главным будет\nпервое изображение в массиве.\n\nДля каждого товара вы можете загрузить до 15 изображений.\n\nДля загрузки изображений 360 используйте поле `images360`, для загрузки маркетингового цвета — `color_image`.\n\nЕсли вы хотите изменить состав или порядок изображений, получите информацию с помощью методов\n[/v2/product/info](#operation/ProductAPI_GetProductInfoV2) или\n[/v2/product/info/list](#operation/ProductAPI_GetProductInfoListV2) — в них отображается текущий порядок и\nсостав изображений. Скопируйте данные полей `images`, `images360`, `color_image`, измените и дополните состав или\nпорядок в соответствии с необходимостью.\n",
          "operationId": "ProductAPI_ProductImportPictures",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/productv1ProductImportPicturesRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Предварительный результат работы метода",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/productv1ProductInfoPicturesResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["ProductAPI"]
        }
      },
      "/v1/product/pictures/info": {
        "post": {
          "summary": "Проверить статус загрузки изображений товара",
          "operationId": "ProductAPI_ProductInfoPictures",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/productv1ProductInfoPicturesRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Статус загрузки изображений товара",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/productv1ProductInfoPicturesResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["ProductAPI"]
        }
      },
      "/v2/product/list": {
        "post": {
          "summary": "Список товаров",
          "operationId": "ProductAPI_GetProductList",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/productv2GetProductListRequest"
                },
                "example": {
                  "filter": {
                    "offer_id": ["136748"],
                    "product_id": ["223681945"],
                    "visibility": "ALL"
                  },
                  "last_id": "",
                  "limit": 100
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Список товаров",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/productv2GetProductListResponse"
                  },
                  "example": {
                    "result": {
                      "items": [
                        {
                          "product_id": 223681945,
                          "offer_id": "136748"
                        }
                      ],
                      "total": 1,
                      "last_id": "bnVсbA=="
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["ProductAPI"]
        }
      },
      "/v2/product/info": {
        "post": {
          "summary": "Информация о товарах",
          "operationId": "ProductAPI_GetProductInfoV2",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/productv2GetProductInfoRequest"
                },
                "example": {
                  "offer_id": "",
                  "product_id": 137208233,
                  "sku": 0
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Информация о товарах",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/productv2GetProductInfoResponse"
                  },
                  "example": {
                    "result": {
                      "id": 137208233,
                      "name": "Комплект защитных плёнок для X3 NFC. Темный хлопок",
                      "offer_id": "143210586",
                      "barcode": "",
                      "barcodes": ["2335900005", "7533900005"],
                      "buybox_price": "",
                      "category_id": 17038062,
                      "created_at": "2021-10-21T15:48:03.529178Z",
                      "images": [
                        "https://cdn1.ozone.ru/s3/multimedia-5/6088931525.jpg",
                        "https://cdn1.ozone.ru/s3/multimedia-p/6088915813.jpg"
                      ],
                      "has_discounted_item": true,
                      "is_discounted": true,
                      "discounted_stocks": {
                        "coming": 0,
                        "present": 0,
                        "reserved": 0
                      },
                      "currency_code": "RUB",
                      "marketing_price": "",
                      "min_price": "",
                      "old_price": "",
                      "premium_price": "",
                      "price": "590.0000",
                      "recommended_price": "",
                      "sources": [
                        {
                          "is_enabled": true,
                          "sku": 522759607,
                          "source": "fbo"
                        },
                        {
                          "is_enabled": true,
                          "sku": 522759608,
                          "source": "fbs"
                        }
                      ],
                      "stocks": {
                        "coming": 0,
                        "present": 0,
                        "reserved": 0
                      },
                      "errors": [],
                      "updated_at": "2023-02-09T06:46:44.152Z",
                      "vat": "0.0",
                      "visible": false,
                      "visibility_details": {
                        "has_price": true,
                        "has_stock": false,
                        "active_product": false
                      },
                      "price_indexes": {
                        "external_index_data": {
                          "minimal_price": "string",
                          "minimal_price_currency": "string",
                          "price_index_value": 0
                        },
                        "ozon_index_data": {
                          "minimal_price": "string",
                          "minimal_price_currency": "string",
                          "price_index_value": 0
                        },
                        "price_index": "WITHOUT_INDEX",
                        "self_marketplaces_index_data": {
                          "minimal_price": "string",
                          "minimal_price_currency": "string",
                          "price_index_value": 0
                        }
                      },
                      "commissions": [],
                      "volume_weight": 0.1,
                      "is_prepayment": false,
                      "is_prepayment_allowed": true,
                      "images360": [],
                      "is_kgt": false,
                      "color_image": "",
                      "primary_image": "https://cdn1.ozone.ru/s3/multimedia-p/6088931545.jpg",
                      "status": {
                        "state": "imported",
                        "state_failed": "imported",
                        "moderate_status": "",
                        "decline_reasons": [],
                        "validation_state": "pending",
                        "state_name": "Не продается",
                        "state_description": "Не создан",
                        "is_failed": true,
                        "is_created": false,
                        "state_tooltip": "",
                        "item_errors": [
                          {
                            "code": "error_attribute_values_empty",
                            "field": "attribute",
                            "attribute_id": 9048,
                            "state": "imported",
                            "level": "error",
                            "description": "Не заполнен обязательный атрибут. Иногда мы обновляем обязательные атрибуты или добавляем новые. Отредактируйте товар или загрузите новый XLS-шаблон с актуальными атрибутами. ",
                            "optional_description_elements": {},
                            "attribute_name": "Название модели"
                          },
                          {
                            "code": "error_attribute_values_empty",
                            "field": "attribute",
                            "attribute_id": 5076,
                            "state": "imported",
                            "level": "error",
                            "description": "Не заполнен обязательный атрибут. Иногда мы обновляем обязательные атрибуты или добавляем новые. Отредактируйте товар или загрузите новый XLS-шаблон с актуальными атрибутами. ",
                            "optional_description_elements": {},
                            "attribute_name": "Рекомендовано для"
                          },
                          {
                            "code": "error_attribute_values_empty",
                            "field": "attribute",
                            "attribute_id": 8229,
                            "state": "imported",
                            "level": "error",
                            "description": "Не заполнен обязательный атрибут. Иногда мы обновляем обязательные атрибуты или добавляем новые. Отредактируйте товар или загрузите новый XLS-шаблон с актуальными атрибутами. ",
                            "optional_description_elements": {},
                            "attribute_name": "Тип"
                          },
                          {
                            "code": "error_attribute_values_empty",
                            "field": "attribute",
                            "attribute_id": 85,
                            "state": "imported",
                            "level": "error",
                            "description": "Не заполнен обязательный атрибут. Иногда мы обновляем обязательные атрибуты или добавляем новые. Отредактируйте товар или загрузите новый XLS-шаблон с актуальными атрибутами. ",
                            "optional_description_elements": {},
                            "attribute_name": "Бренд"
                          }
                        ],
                        "state_updated_at": "2021-10-21T15:48:03.927309Z"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["ProductAPI"]
        }
      },
      "/v1/product/rating-by-sku": {
        "post": {
          "summary": "Получить контент-рейтинг товаров по SKU",
          "description": "Метод для получения контент-рейтинга товаров, а также рекомендаций по его увеличению.\n\n[Подробнее о контент-рейтинге](https://seller-edu.ozon.ru/docs/work-with-goods/content-rating.html)\n",
          "operationId": "ProductAPI_GetProductRatingBySku",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetProductRatingBySkuRequest"
                },
                "example": {
                  "skus": ["179737222"]
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Контент-рейтинг товаров",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1GetProductRatingBySkuResponse"
                  },
                  "example": {
                    "products": [
                      {
                        "sku": 179737222,
                        "rating": 42.5,
                        "groups": [
                          {
                            "key": "media",
                            "name": "Медиа",
                            "rating": 70,
                            "weight": 25,
                            "conditions": [
                              {
                                "key": "media_images_2",
                                "description": "Добавлено 2 изображения",
                                "fulfilled": true,
                                "cost": 50
                              },
                              {
                                "key": "media_images_3",
                                "description": "Добавлено 3 изображения и более",
                                "fulfilled": true,
                                "cost": 20
                              },
                              {
                                "key": "media_image_3d",
                                "description": "Добавлено 3D-изображение",
                                "fulfilled": false,
                                "cost": 15
                              },
                              {
                                "key": "media_video",
                                "description": "Добавлено видео",
                                "fulfilled": false,
                                "cost": 15
                              }
                            ],
                            "improve_attributes": [
                              {
                                "id": 4074,
                                "name": "Код ролика на YouTube"
                              },
                              {
                                "id": 4080,
                                "name": "3D-изображение"
                              }
                            ],
                            "improve_at_least": 2
                          },
                          {
                            "key": "important_attributes",
                            "name": "Важные атрибуты",
                            "rating": 50,
                            "weight": 30,
                            "conditions": [
                              {
                                "key": "important_2",
                                "description": "Заполнено 2 атрибута и более",
                                "fulfilled": true,
                                "cost": 50
                              },
                              {
                                "key": "important_50_percent",
                                "description": "Заполнено более 50% атрибутов",
                                "fulfilled": false,
                                "cost": 25
                              },
                              {
                                "key": "important_70_percent",
                                "description": "Заполнено более 70% атрибутов",
                                "fulfilled": false,
                                "cost": 25
                              }
                            ],
                            "improve_attributes": [
                              {
                                "id": 4385,
                                "name": "Гарантийный срок"
                              },
                              {
                                "id": 4389,
                                "name": "Страна-изготовитель"
                              },
                              {
                                "id": 8513,
                                "name": "Количество в упаковке, шт"
                              },
                              {
                                "id": 8590,
                                "name": "Макс. диагональ, дюймы"
                              },
                              {
                                "id": 8591,
                                "name": "Мин. диагональ, дюймы"
                              },
                              {
                                "id": 9336,
                                "name": "Модель браслета/умных часов"
                              },
                              {
                                "id": 11046,
                                "name": "Покрытие"
                              },
                              {
                                "id": 11047,
                                "name": "Прозрачность покрытия"
                              },
                              {
                                "id": 11048,
                                "name": "Дополнительные свойства покрытия"
                              },
                              {
                                "id": 11049,
                                "name": "Вид стекла"
                              },
                              {
                                "id": 11603,
                                "name": "Размер циферблата"
                              }
                            ],
                            "improve_at_least": 6
                          },
                          {
                            "key": "other_attributes",
                            "name": "Остальные атрибуты",
                            "rating": 0,
                            "weight": 25,
                            "conditions": [
                              {
                                "key": "other_2",
                                "description": "Заполнено 2 атрибута и более",
                                "fulfilled": false,
                                "cost": 50
                              },
                              {
                                "key": "other_50_percent",
                                "description": "Заполнено более 50% атрибутов",
                                "fulfilled": false,
                                "cost": 50
                              }
                            ],
                            "improve_attributes": [
                              {
                                "id": 4382,
                                "name": "Размеры, мм"
                              }
                            ],
                            "improve_at_least": 1
                          },
                          {
                            "key": "text",
                            "name": "Текстовое описание",
                            "rating": 50,
                            "weight": 20,
                            "conditions": [
                              {
                                "key": "text_annotation_100_chars",
                                "description": "Аннотация более 100 знаков",
                                "fulfilled": true,
                                "cost": 25
                              },
                              {
                                "key": "text_annotation_500_chars",
                                "description": "Аннотация более 500 знаков",
                                "fulfilled": true,
                                "cost": 25
                              },
                              {
                                "key": "text_rich",
                                "description": "Заполнен Rich-контент",
                                "fulfilled": false,
                                "cost": 100
                              }
                            ],
                            "improve_attributes": [
                              {
                                "id": 11254,
                                "name": "Rich-контент JSON"
                              }
                            ],
                            "improve_at_least": 1
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["ProductAPI"]
        }
      },
      "/v2/product/info/list": {
        "post": {
          "summary": "Получить список товаров по идентификаторам",
          "description": "Метод для получения массива товаров по их идентификаторам.\n\nВ теле запроса должен быть массив однотипных идентификаторов, в ответе будет массив `items`.\n\nДля каждого товара внутри массива `items` поля совпадают с полями из метода [/v2/product/info](#operation/ProductAPI_GetProductInfoV2).\n",
          "operationId": "ProductAPI_GetProductInfoListV2",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/productv2GetProductInfoListRequest"
                },
                "example": {
                  "offer_id": ["23", "010"],
                  "product_id": [],
                  "sku": []
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Список товаров",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/productv2GetProductInfoListResponse"
                  },
                  "example": {
                    "result": {
                      "items": [
                        {
                          "id": 78712196,
                          "name": "Как выбрать детские музыкальные инструменты. Ксилофон, бубен, маракасы и другие инструменты для детей до 6 лет. Мастер-класс о раннем музыкальном развитии от Монтессори-педагога",
                          "offer_id": "010",
                          "barcode": "",
                          "barcodes": ["2335900005", "7533900005"],
                          "buybox_price": "",
                          "category_id": 93726157,
                          "created_at": "2021-06-03T03:40:05.871465Z",
                          "images": [],
                          "currency_code": "RUB",
                          "marketing_price": "",
                          "min_price": "",
                          "old_price": "1000.0000",
                          "premium_price": "590.0000",
                          "price": "690.0000",
                          "recommended_price": "",
                          "sources": [
                            {
                              "is_enabled": true,
                              "sku": 269628393,
                              "source": "fbo"
                            },
                            {
                              "is_enabled": true,
                              "sku": 269628396,
                              "source": "fbs"
                            }
                          ],
                          "has_discounted_item": true,
                          "is_discounted": true,
                          "discounted_stocks": {
                            "coming": 0,
                            "present": 0,
                            "reserved": 0
                          },
                          "state": "",
                          "stocks": {
                            "coming": 0,
                            "present": 13,
                            "reserved": 0
                          },
                          "errors": [],
                          "updated_at": "2023-02-09T06:46:44.152Z",
                          "vat": "0.0",
                          "visible": true,
                          "visibility_details": {
                            "has_price": false,
                            "has_stock": true,
                            "active_product": false,
                            "reasons": {}
                          },
                          "price_indexes": {
                            "external_index_data": {
                              "minimal_price": "string",
                              "minimal_price_currency": "string",
                              "price_index_value": 0
                            },
                            "ozon_index_data": {
                              "minimal_price": "string",
                              "minimal_price_currency": "string",
                              "price_index_value": 0
                            },
                            "price_index": "WITHOUT_INDEX",
                            "self_marketplaces_index_data": {
                              "minimal_price": "string",
                              "minimal_price_currency": "string",
                              "price_index_value": 0
                            }
                          },
                          "images360": [],
                          "is_kgt": false,
                          "color_image": "",
                          "primary_image": "https://cdn1.ozone.ru/s3/multimedia-y/6077810038.jpg",
                          "status": {
                            "state": "price_sent",
                            "state_failed": "",
                            "moderate_status": "approved",
                            "decline_reasons": [],
                            "validation_state": "success",
                            "state_name": "Продается",
                            "state_description": "",
                            "is_failed": false,
                            "is_created": true,
                            "state_tooltip": "",
                            "item_errors": [],
                            "state_updated_at": "2021-07-26T04:50:08.486697Z"
                          }
                        },
                        {
                          "id": 76723583,
                          "name": "Онлайн-курс по дрессировке собак \"Собака: инструкция по применению. Одинокий волк\"",
                          "offer_id": "23",
                          "barcode": "",
                          "buybox_price": "",
                          "category_id": 90635895,
                          "created_at": "2021-05-26T20:26:07.565586Z",
                          "images": [],
                          "marketing_price": "",
                          "min_price": "",
                          "old_price": "12200.0000",
                          "premium_price": "5490.0000",
                          "price": "6100.0000",
                          "recommended_price": "",
                          "sources": [
                            {
                              "is_enabled": true,
                              "sku": 267684495,
                              "source": "fbo"
                            },
                            {
                              "is_enabled": true,
                              "sku": 267684498,
                              "source": "fbs"
                            }
                          ],
                          "state": "",
                          "stocks": {
                            "coming": 0,
                            "present": 19,
                            "reserved": 0
                          },
                          "errors": [],
                          "updated_at": "2023-02-09T06:46:44.152Z",
                          "vat": "0.0",
                          "visible": true,
                          "visibility_details": {
                            "has_price": false,
                            "has_stock": true,
                            "active_product": false,
                            "reasons": {}
                          },
                          "price_index": "0.00",
                          "images360": [],
                          "is_kgt": false,
                          "color_image": "",
                          "primary_image": "https://cdn1.ozone.ru/s3/multimedia-v/6062554531.jpg",
                          "status": {
                            "state": "price_sent",
                            "state_failed": "",
                            "moderate_status": "approved",
                            "decline_reasons": [],
                            "validation_state": "success",
                            "state_name": "Продается",
                            "state_description": "",
                            "is_failed": false,
                            "is_created": true,
                            "state_tooltip": "",
                            "item_errors": [],
                            "state_updated_at": "2021-05-31T12:35:09.714641Z"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["ProductAPI"]
        }
      },
      "/v3/products/info/attributes": {
        "post": {
          "summary": "Получить описание характеристик товара",
          "description": "Возвращает описание характеристик товара по его идентификатору. Товар можно искать по `offer_id` или `product_id`.",
          "operationId": "ProductAPI_GetProductAttributesV3",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/productv3GetProductAttributesV3Request"
                },
                "example": {
                  "filter": {
                    "product_id": ["213761435"],
                    "visibility": "ALL"
                  },
                  "limit": 100,
                  "last_id": "okVsfA==«",
                  "sort_dir": "ASC"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Описание характеристик товара",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/productv3GetProductAttributesV3Response"
                  },
                  "example": {
                    "result": [
                      {
                        "id": 213761435,
                        "barcode": "",
                        "category_id": 17038062,
                        "name": "Пленка защитная для Xiaomi Redmi Note 10 Pro 5G",
                        "offer_id": "21470",
                        "height": 10,
                        "depth": 210,
                        "width": 140,
                        "dimension_unit": "mm",
                        "weight": 50,
                        "weight_unit": "g",
                        "images": [
                          {
                            "file_name": "https://cdn1.ozone.ru/s3/multimedia-f/6190456071.jpg",
                            "default": true,
                            "index": 0
                          },
                          {
                            "file_name": "https://cdn1.ozone.ru/s3/multimedia-7/6190456099.jpg",
                            "default": false,
                            "index": 1
                          },
                          {
                            "file_name": "https://cdn1.ozone.ru/s3/multimedia-9/6190456065.jpg",
                            "default": false,
                            "index": 2
                          }
                        ],
                        "image_group_id": "",
                        "images360": [],
                        "pdf_list": [],
                        "attributes": [
                          {
                            "attribute_id": 5219,
                            "complex_id": 0,
                            "values": [
                              {
                                "dictionary_value_id": 970718176,
                                "value": "универсальный"
                              }
                            ]
                          },
                          {
                            "attribute_id": 11051,
                            "complex_id": 0,
                            "values": [
                              {
                                "dictionary_value_id": 970736931,
                                "value": "Прозрачный"
                              }
                            ]
                          },
                          {
                            "attribute_id": 10100,
                            "complex_id": 0,
                            "values": [
                              {
                                "dictionary_value_id": 0,
                                "value": "false"
                              }
                            ]
                          },
                          {
                            "attribute_id": 11794,
                            "complex_id": 0,
                            "values": [
                              {
                                "dictionary_value_id": 970860783,
                                "value": "safe"
                              }
                            ]
                          },
                          {
                            "attribute_id": 9048,
                            "complex_id": 0,
                            "values": [
                              {
                                "dictionary_value_id": 0,
                                "value": "Пленка защитная для Xiaomi Redmi Note 10 Pro 5G"
                              }
                            ]
                          },
                          {
                            "attribute_id": 5076,
                            "complex_id": 0,
                            "values": [
                              {
                                "dictionary_value_id": 39638,
                                "value": "Xiaomi"
                              }
                            ]
                          },
                          {
                            "attribute_id": 9024,
                            "complex_id": 0,
                            "values": [
                              {
                                "dictionary_value_id": 0,
                                "value": "21470"
                              }
                            ]
                          },
                          {
                            "attribute_id": 10015,
                            "complex_id": 0,
                            "values": [
                              {
                                "dictionary_value_id": 0,
                                "value": "false"
                              }
                            ]
                          },
                          {
                            "attribute_id": 85,
                            "complex_id": 0,
                            "values": [
                              {
                                "dictionary_value_id": 971034861,
                                "value": "Brand"
                              }
                            ]
                          },
                          {
                            "attribute_id": 9461,
                            "complex_id": 0,
                            "values": [
                              {
                                "dictionary_value_id": 349824787,
                                "value": "Защитная пленка для смартфона"
                              }
                            ]
                          },
                          {
                            "attribute_id": 4180,
                            "complex_id": 0,
                            "values": [
                              {
                                "dictionary_value_id": 0,
                                "value": "Пленка защитная для Xiaomi Redmi Note 10 Pro 5G"
                              }
                            ]
                          },
                          {
                            "attribute_id": 4191,
                            "complex_id": 0,
                            "values": [
                              {
                                "dictionary_value_id": 0,
                                "value": "Пленка предназначена для модели Xiaomi Redmi Note 10 Pro 5G. Защитная гидрогелевая пленка обеспечит защиту вашего смартфона от царапин, пыли, сколов и потертостей."
                              }
                            ]
                          },
                          {
                            "attribute_id": 8229,
                            "complex_id": 0,
                            "values": [
                              {
                                "dictionary_value_id": 91521,
                                "value": "Защитная пленка"
                              }
                            ]
                          }
                        ],
                        "complex_attributes": [],
                        "color_image": "",
                        "last_id": ""
                      }
                    ],
                    "total": 1,
                    "last_id": "onVsfA=="
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["ProductAPI"]
        }
      },
      "/v1/product/info/description": {
        "post": {
          "summary": "Получить описание товара",
          "operationId": "ProductAPI_GetProductInfoDescription",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/productGetProductInfoDescriptionRequest"
                },
                "example": {
                  "offer_id": "5",
                  "product_id": 73453843
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Описание товара",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/productGetProductInfoDescriptionResponse"
                  },
                  "example": {
                    "result": {
                      "id": 73453843,
                      "offer_id": "5",
                      "name": "Онлайн курс по дрессировке собак \"Воспитанная собака за 3 недели\"",
                      "description": "Экспресс-курс - это сокращённый вариант курса \"Собака: инструкция по применению\", дающий базовый минимум знаний, навыков, умений. Это оптимальный вариант для совершения первых шагов по воспитанию!<br/><br/>Что дает Экспресс-курс:<ul><li>Контакт с собакой </li></ul>К концу экспресс-курса дрессировки вы получаете воспитанного друга и соратника, который ориентируется на вас в любой ситуации.<ul><li>Уверенность в безопасности</li></ul>Благополучие собаки: больше не будет срывов с поводка, преследования кошек, попыток съесть что-либо на улице и т. д.<ul><li>Комфортная жизнь</li></ul>Принципиально другой уровень общения, без раздражения, криков и недовольства поведением животного."
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["ProductAPI"]
        }
      },
      "/v2/product/info/limit": {
        "post": {
          "summary": "Получить информацию о лимите на загрузку и обновление товаров",
          "description": "<aside class=\"warning\">Этот метод возвращает информацию только об общем лимите на загрузку и обновление товаров. \nЧтобы узнать общий лимит и сколько всего товаров в рамках общего лимита можно создать, используйте метод \n<a href=\"#operation/ProductAPI_GetProductInfoLimit\">/v3/product/info/limit</a>.</aside>\n",
          "operationId": "ProductAPI_GetProductInfoLimitV2",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/productv2GetProductInfoLimitV2Request"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Информация о лимите на загрузку и обновление товаров",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/productv2GetProductInfoLimitV2Response"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["ProductAPI"]
        }
      },
      "/v3/product/info/limit": {
        "post": {
          "summary": "Получить информацию о лимитах на загрузку и обновление товаров",
          "operationId": "ProductAPI_GetProductInfoLimit",
          "description": "<aside class=\"warning\">\n  1 апреля 2023 года мы отключим этот метод. Переключитесь на метод \n  <a href=\"#operation/ProductAPI_GetUploadQuota\">/v4/product/info/limit</a>.\n</aside>\n\nМетод для получения информации:\n- Об общем лимите — сколько всего товаров можно отредактировать и создать в сутки.\n- О лимите на создание товаров — сколько товаров можно создать в сутки в рамках общего лимита.\n\nОбщий лимит можно полностью потратить на редактирование товаров.\n\nСоздавать товары можно, если вы ещё не израсходовали лимит на создание товаров и общий лимит.\n\n[Подробнее о лимитах в Базе знаний продавца](https://seller-edu.ozon.ru/work-with-goods/zagruzka-tovarov/creating-goods/limit/)\n",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1Empty"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Информация о лимитах на загрузку и обновление товаров",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v3GetProductInfoLimitResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["ProductAPI"]
        }
      },
      "/v4/product/info/limit": {
        "post": {
          "summary": "Лимиты на ассортимент, создание и обновление товаров",
          "operationId": "ProductAPI_GetUploadQuota",
          "description": "Метод для получения информации о лимитах:\n- На ассортимент — сколько всего товаров можно создать в вашем личном кабинете.\n- На создание товаров — сколько товаров можно создать в сутки.\n- На обновление товаров — сколько товаров можно отредактировать в сутки.\n\nЕсли у вас есть лимит на ассортимент и вы израсходуете его, вы не сможете создавать новые товары.\n\n[Подробнее о лимитах в Базе знаний продавца](https://seller-edu.ozon.ru/work-with-goods/zagruzka-tovarov/creating-goods/limit/)\n",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1Empty"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Лимиты на ассортмент, создание и обновление товаров",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v4GetUploadQuotaResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["ProductAPI"]
        }
      },
      "/v1/product/update/offer-id": {
        "post": {
          "summary": "Изменить артикулы товаров из системы продавца",
          "description": "Метод для изменения `offer_id`, привязанных к товарам. Вы можете изменить несколько `offer_id`.\n\nРекомендуем передавать до 250 значений в массиве.\n",
          "operationId": "ProductAPI_ProductUpdateOfferID",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ProductUpdateOfferIdRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Информация об изменении артикулов",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1ProductUpdateOfferIdResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["ProductAPI"]
        }
      },
      "/v1/product/archive": {
        "post": {
          "summary": "Перенести товар в архив",
          "operationId": "ProductAPI_ProductArchive",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/productProductArchiveRequest"
                },
                "example": {
                  "product_id": ["125529926"]
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Товар перенесён в архив",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/productBooleanResponse"
                  },
                  "example": {
                    "result": true
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["ProductAPI"]
        }
      },
      "/v1/product/unarchive": {
        "post": {
          "summary": "Вернуть товар из архива",
          "operationId": "ProductAPI_ProductUnarchive",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/productProductUnarchiveRequest"
                },
                "example": {
                  "product_id": ["125529926"]
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Товар из архива возвращён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/productBooleanResponse"
                  },
                  "example": {
                    "result": true
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["ProductAPI"]
        }
      },
      "/v2/products/delete": {
        "post": {
          "summary": "Удалить товар без SKU из архива",
          "description": "В одном запросе можно передать до 500 идентификаторов.",
          "operationId": "ProductAPI_DeleteProducts",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/productv2DeleteProductsRequest"
                },
                "example": {
                  "products": [
                    {
                      "offer_id": "033"
                    }
                  ]
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Товар удалён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/productv2DeleteProductsResponse"
                  },
                  "example": {
                    "status": [
                      {
                        "offer_id": "033",
                        "is_deleted": true,
                        "error": ""
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["ProductAPI"]
        }
      },
      "/v1/products/geo-restrictions-catalog-by-filter": {
        "post": {
          "summary": "Получить список геоограничений для услуг",
          "operationId": "ProductAPI_GetGeoRestrictionsV1",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/productv2GetGeoRestrictionsByFilterRequest"
                },
                "example": {
                  "filter": {
                    "only_visible": true
                  },
                  "last_order_number": 0,
                  "limit": 3
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Список геоограничений",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/productv2GetGeoRestrictionsByFilterResponse"
                  },
                  "example": {
                    "restrictions": [
                      {
                        "id": "world",
                        "name": "Весь Мир",
                        "is_visible": true,
                        "order_number": 1
                      },
                      {
                        "id": "42fb1c32-0cfe-5c96-9fb5-7f8e8449f28c",
                        "name": "Все города РФ",
                        "is_visible": true,
                        "order_number": 2
                      },
                      {
                        "id": "moscow",
                        "name": "Москва",
                        "is_visible": true,
                        "order_number": 3
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["ProductAPI"]
        }
      },
      "/v1/product/upload_digital_codes": {
        "post": {
          "summary": "Загрузить коды активации для услуг и цифровых товаров",
          "description": "Загрузите коды активации, если вы загружаете цифровые товары или услуги. Код активации привязывается к карточке цифрового товара.\n",
          "operationId": "ProductAPI_UploadDigitalCode",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ProductUploadDigitalCodesRequest"
                },
                "example": {
                  "digital_codes": ["764282654334"],
                  "product_id": 73160317
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Идентификатор задачи на загрузку кодов",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1ProductUploadDigitalCodesResponse"
                  },
                  "example": {
                    "result": {
                      "task_id": 172549811
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["ProductAPI"]
        }
      },
      "/v1/product/upload_digital_codes/info": {
        "post": {
          "summary": "Статус загрузки кодов активации",
          "description": "Метод для получения статуса загрузки кодов активации для услуг и цифровых товаров.",
          "operationId": "ProductAPI_UploadDigitalCodeInfo",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ProductUploadDigitalCodesRequestInfo"
                },
                "example": {
                  "task_id": 178574231
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Статус задачи на загрузку кодов",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1ProductUploadDigitalCodesResponseInfo"
                  },
                  "example": {
                    "result": {
                      "status": "imported"
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["ProductAPI"]
        }
      },
      "/v1/product/info/subscription": {
        "post": {
          "summary": "Количество подписавшихся на товар пользователей",
          "description": "Метод для получения количества пользователей, которые нажали **Узнать о поступлении** на странице товара.\n\nВы можете передать несколько товаров в запросе.\n",
          "tags": ["ProductAPI"],
          "operationId": "ProductAPI_GetProductInfoSubscription",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetProductInfoSubscriptionRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Количество подписавшихся пользователей",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1GetProductInfoSubscriptionResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/product/import/stocks": {
        "post": {
          "summary": "Обновить остатки",
          "description": "Позволяет изменить информацию о количестве товара в наличии. Метод используется только для FBS и rFBS складов.\n\nЗа один запрос можно изменить наличие для 100 товаров. В минуту можно отправить до 80 запросов. \n\nЗадать наличие товара возможно только после того, как его статус сменится на `processed`.\n",
          "operationId": "ProductAPI_ImportProductsStocks",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/productImportProductsStocksRequest"
                },
                "example": {
                  "stocks": [
                    {
                      "offer_id": "PG-2404С1",
                      "product_id": 55946,
                      "stock": 4
                    }
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Информация об остатках обновлена",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/productImportProductsStocksResponse"
                  },
                  "example": {
                    "result": [
                      {
                        "product_id": 55946,
                        "offer_id": "PG-2404С1",
                        "updated": true,
                        "errors": []
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["Prices&StocksAPI"]
        }
      },
      "/v2/products/stocks": {
        "post": {
          "summary": "Обновить количество товаров на складах",
          "description": "Позволяет изменить информацию о количестве товара в наличии.\n\nЗа один запрос можно изменить наличие для 100 товаров. В минуту можно отправить до 80 запросов.\n\n<aside class=\"warning\">Обновлять остатки товара на одном складе можно только 1 раз в 2 минуты, иначе в ответе будет ошибка <code>TOO_MANY_REQUESTS</code>.</aside>\n\nЗадать наличие товара возможно только после того, как его статус сменится на `processed`.\n\nОстатки крупногабаритных товаров можно обновлять только на предназначенных для них складах.\n",
          "operationId": "ProductAPI_ProductsStocksV2",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/productv2ProductsStocksRequest"
                },
                "example": {
                  "stocks": [
                    {
                      "offer_id": "PH11042",
                      "product_id": 313455276,
                      "stock": 100,
                      "warehouse_id": 22142605386000
                    }
                  ]
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Количество товаров обновлено",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/productv2ProductsStocksResponse"
                  },
                  "example": {
                    "result": [
                      {
                        "warehouse_id": 22142605386000,
                        "product_id": 118597312,
                        "offer_id": "PH11042",
                        "updated": true,
                        "errors": []
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["Prices&StocksAPI"]
        }
      },
      "/v3/product/info/stocks": {
        "post": {
          "summary": "Информация о количестве товаров",
          "description": "Возвращает информацию о ĸоличестве товаров на сĸладах:\n  - сĸольĸо единиц есть в наличии,\n  - сĸольĸо зарезервировано поĸупателями.\n",
          "operationId": "ProductAPI_GetProductInfoStocksV3",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/productv3GetProductInfoStocksV3Request"
                },
                "example": {
                  "filter": {
                    "offer_id": ["136834"],
                    "product_id": ["214887921"],
                    "visibility": "ALL"
                  },
                  "last_id": "",
                  "limit": 100
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Количество товара",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/productv3GetProductInfoStocksV3Response"
                  },
                  "example": {
                    "result": {
                      "items": [
                        {
                          "product_id": 214887921,
                          "offer_id": "136834",
                          "stocks": [
                            {
                              "type": "fbs",
                              "present": 170,
                              "reserved": 0
                            },
                            {
                              "type": "fbo",
                              "present": 0,
                              "reserved": 0
                            }
                          ]
                        }
                      ],
                      "total": 1,
                      "last_id": "anVsbA=="
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["Prices&StocksAPI"]
        }
      },
      "/v1/product/info/stocks-by-warehouse/fbs": {
        "post": {
          "summary": "Информация об остатках на складах продавца (FBS и rFBS)",
          "operationId": "ProductAPI_ProductStocksByWarehouseFbs",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/productsv1GetProductInfoStocksByWarehouseFbsRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Количество товаров на складах FBS и rFBS",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/productsv1GetProductInfoStocksByWarehouseFbsResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["Prices&StocksAPI"]
        }
      },
      "/v1/product/import/prices": {
        "post": {
          "summary": "Обновить цену",
          "description": "Позволяет изменить цену одного или нескольких товаров. За один запрос можно изменить цены для 1000 товаров. Чтобы сбросить `old_price` или `premium_price` — поставьте `0` у этих параметров.\n\nНовая цена должна отличаться от старой минимум на 5%.\n",
          "operationId": "ProductAPI_ImportProductsPrices",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/productImportProductsPricesRequest"
                },
                "example": {
                  "prices": [
                    {
                      "auto_action_enabled": "UNKNOWN",
                      "currency_code": "RUB",
                      "min_price": "800",
                      "offer_id": "",
                      "old_price": "0",
                      "price": "1448",
                      "product_id": 1386
                    }
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Цена обновлена",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/productImportProductsPricesResponse"
                  },
                  "example": {
                    "result": [
                      {
                        "product_id": 1386,
                        "offer_id": "PH8865",
                        "updated": true,
                        "errors": []
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["Prices&StocksAPI"]
        }
      },
      "/v4/product/info/prices": {
        "post": {
          "summary": "Получить информацию о цене товара",
          "description": "В запросе вы можете передать максимум 1000 товаров.",
          "operationId": "ProductAPI_GetProductInfoPricesV4",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/productv4GetProductInfoPricesV4Request"
                },
                "example": {
                  "filter": {
                    "offer_id": ["356792"],
                    "product_id": ["243686911"],
                    "visibility": "ALL"
                  },
                  "last_id": "",
                  "limit": 100
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Информация о цене товара",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/productv4GetProductInfoPricesV4Response"
                  },
                  "example": {
                    "result": {
                      "items": [
                        {
                          "product_id": 243686911,
                          "offer_id": "356792",
                          "price": {
                            "currency_code": "RUB",
                            "price": "499.0000",
                            "old_price": "579.0000",
                            "premium_price": "",
                            "recommended_price": "",
                            "retail_price": "",
                            "vat": "0.200000",
                            "min_ozon_price": "",
                            "marketing_price": "",
                            "marketing_seller_price": "",
                            "auto_action_enabled": true
                          },
                          "price_indexes": {
                            "external_index_data": {
                              "minimal_price": "string",
                              "minimal_price_currency": "string",
                              "price_index_value": 0
                            },
                            "ozon_index_data": {
                              "minimal_price": "string",
                              "minimal_price_currency": "string",
                              "price_index_value": 0
                            },
                            "price_index": "WITHOUT_INDEX",
                            "self_marketplaces_index_data": {
                              "minimal_price": "string",
                              "minimal_price_currency": "string",
                              "price_index_value": 0
                            }
                          },
                          "commissions": {
                            "sales_percent": 15,
                            "fbo_fulfillment_amount": 0,
                            "fbo_direct_flow_trans_min_amount": 31,
                            "fbo_direct_flow_trans_max_amount": 46.5,
                            "fbo_deliv_to_customer_amount": 14.75,
                            "fbo_return_flow_amount": 50,
                            "fbo_return_flow_trans_min_amount": 21.7,
                            "fbo_return_flow_trans_max_amount": 21.7,
                            "fbs_first_mile_min_amount": 0,
                            "fbs_first_mile_max_amount": 0,
                            "fbs_direct_flow_trans_min_amount": 41,
                            "fbs_direct_flow_trans_max_amount": 61.5,
                            "fbs_deliv_to_customer_amount": 60,
                            "fbs_return_flow_amount": 40,
                            "fbs_return_flow_trans_min_amount": 41,
                            "fbs_return_flow_trans_max_amount": 61.5
                          },
                          "marketing_actions": null,
                          "volume_weight": 0
                        }
                      ],
                      "total": 1,
                      "last_id": "ceVуbA=="
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["Prices&StocksAPI"]
        }
      },
      "/v1/product/info/discounted": {
        "post": {
          "summary": "Узнать информацию об уценке и основном товаре по SKU уценённого товара",
          "description": "Метод для получения информации о состоянии и дефектах уценённого товара по его SKU. Также метод возвращает SKU основного товара.",
          "operationId": "ProductAPI_GetProductInfoDiscounted",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetProductInfoDiscountedRequest"
                },
                "example": {
                  "discounted_skus": ["635548518"]
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Информация об уценке и основном товаре",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1GetProductInfoDiscountedResponse"
                  },
                  "example": {
                    "items": [
                      {
                        "discounted_sku": 635548518,
                        "sku": 320067758,
                        "condition_estimation": "4",
                        "packaging_violation": "",
                        "warranty_type": "",
                        "reason_damaged": "Механическое повреждение",
                        "comment_reason_damaged": "повреждена заводская упаковка",
                        "defects": "",
                        "mechanical_damage": "",
                        "package_damage": "",
                        "shortage": "",
                        "repair": "",
                        "condition": ""
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["Prices&StocksAPI"]
        }
      },
      "/v1/product/update/discount": {
        "post": {
          "summary": "Установить скидку на уценённый товар",
          "description": "Метод для установки размера скидки на уценённые товары, продающиеся по схеме FBS.",
          "operationId": "ProductAPI_ProductUpdateDiscount",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ProductUpdateDiscountRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Успешно",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1ProductUpdateDiscountResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["Prices&StocksAPI"]
        }
      },
      "/v1/actions": {
        "get": {
          "tags": ["Promos"],
          "operationId": "Promos",
          "summary": "Список акций",
          "description": "Метод для получения списка акций, в которых можно участвовать.",
          "responses": {
            "200": {
              "description": "Список акций",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/seller_apiGetSellerActionsV1Response"
                  },
                  "example": {
                    "result": [
                      {
                        "id": 71342,
                        "title": "test voucher #2",
                        "date_start": "2021-11-22T09:46:38Z",
                        "date_end": "2021-11-30T20:59:59Z",
                        "potential_products_count": 0,
                        "is_participating": true,
                        "participating_products_count": 5,
                        "description": "",
                        "action_type": "DISCOUNT",
                        "banned_products_count": 0,
                        "with_targeting": false,
                        "discount_type": "UNKNOWN",
                        "discount_value": 0,
                        "order_amount": 0,
                        "freeze_date": "",
                        "is_voucher_action": true
                      }
                    ]
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/actions/candidates": {
        "post": {
          "tags": ["Promos"],
          "summary": "Список доступных для акции товаров",
          "description": "Метод для получения списка товаров, которые могут участвовать в акции, по её идентификатору.",
          "operationId": "PromosCandidates",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/seller_apiGetSellerProductV1Request"
                },
                "example": {
                  "action_id": 63337,
                  "limit": 10,
                  "offset": 0
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Список товаров",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/seller_apiGetSellerProductV1Response"
                  },
                  "example": {
                    "result": {
                      "products": [
                        {
                          "id": 226,
                          "price": 250,
                          "action_price": 0,
                          "max_action_price": 175,
                          "add_mode": "NOT_SET",
                          "stock": 0,
                          "min_stock": 0
                        },
                        {
                          "id": 1366,
                          "price": 2300,
                          "action_price": 630,
                          "max_action_price": 770,
                          "add_mode": "MANUAL",
                          "stock": 0,
                          "min_stock": 0
                        }
                      ],
                      "total": 2
                    }
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/actions/products": {
        "post": {
          "tags": ["Promos"],
          "summary": "Список участвующих в акции товаров",
          "description": "Метод для получения списка товаров, участвующих в акции, по её идентификатору.",
          "operationId": "PromosProducts",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/seller_apiGetSellerProductV1Request"
                },
                "example": {
                  "action_id": 66011,
                  "limit": 10,
                  "offset": 0
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Список товаров",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/seller_apiGetSellerProductV1Response"
                  },
                  "example": {
                    "result": {
                      "products": [
                        {
                          "id": 1383,
                          "price": 5503,
                          "action_price": 621,
                          "max_action_price": 3712.1,
                          "add_mode": "MANUAL",
                          "stock": 0,
                          "min_stock": 0
                        }
                      ],
                      "total": 1
                    }
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/actions/products/activate": {
        "post": {
          "tags": ["Promos"],
          "summary": "Добавить товар в акцию",
          "description": "Метод для добавления товаров в доступную акцию.",
          "operationId": "PromosProductsActivate",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/seller_apiActivateProductV1Request"
                },
                "example": {
                  "action_id": 60564,
                  "products": [
                    {
                      "action_price": 356,
                      "product_id": 1389,
                      "stock": 10
                    }
                  ]
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Товар добавлен в акцию",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/seller_apiProductV1Response"
                  },
                  "example": {
                    "result": {
                      "product_ids": [1389],
                      "rejected": []
                    }
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/actions/products/deactivate": {
        "post": {
          "tags": ["Promos"],
          "summary": "Удалить товары из акции",
          "description": "Метод для удаления товаров из акции.",
          "operationId": "PromosProductsDeactivate",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/seller_apiProductIDsV1Request"
                },
                "example": {
                  "action_id": 66011,
                  "product_ids": [14975]
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Товары удалены из акции",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/seller_apiProductV1ResponseDeactivate"
                  },
                  "example": {
                    "result": {
                      "product_ids": [14975],
                      "rejected": []
                    }
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/actions/hotsales/list": {
        "post": {
          "tags": ["Promos"],
          "summary": "Список доступных акций Hot Sale",
          "operationId": "ActionsAPI_GetHotSalesList",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetHotSalesListRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Список доступных акций Hot Sale",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1GetHotSalesListResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/actions/hotsales/products": {
        "post": {
          "tags": ["Promos"],
          "summary": "Список товаров, которые участвуют в акции Hot Sale",
          "description": "Метод для получения списка товаров, которые могут участвовать или уже участвуют в акции Hot Sale.",
          "operationId": "ActionsAPI_GetHotSalesProducts",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetHotSalesProductsRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Товары, которые участвуют в Hot Sale",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1GetHotSalesProductsResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/actions/hotsales/activate": {
        "post": {
          "tags": ["Promos"],
          "summary": "Добавить товары в акцию Hot Sale",
          "operationId": "ActionsAPI_ActivateHotSalesProducts",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ActivateHotSalesProductsRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Товары в акции Hot Sale",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1SetActivateHotSaleProductsResult"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/actions/hotsales/deactivate": {
        "post": {
          "tags": ["Promos"],
          "summary": "Удалить товары из акции Hot Sale",
          "operationId": "ActionsAPI_DeactivateHotSalesProducts",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1DeactivateHotSalesProductsRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Товары из акции Hot Sale удалены",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1SetDeactivateHotSaleProductsResult"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/actions/discounts-task/list": {
        "post": {
          "tags": ["Promos"],
          "summary": "Список заявок на скидку",
          "description": "Метод для получения списка товаров, которые покупатели хотят купить со скидкой.",
          "operationId": "promos_task_list",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetDiscountTaskListRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Список заявок",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1GetDiscountTaskListResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/actions/discounts-task/approve": {
        "post": {
          "tags": ["Promos"],
          "summary": "Согласовать заявку на скидку",
          "description": "Вы можете согласовывать заявки в статусах: `NEW` — новые, `SEEN` — просмотренные.\n",
          "operationId": "promos_task_approve",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ApproveDiscountTasksRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Заявки согласованы",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1ApproveDeclineDiscountTasksResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/actions/discounts-task/decline": {
        "post": {
          "tags": ["Promos"],
          "summary": "Отклонить заявку на скидку",
          "description": "Вы можете отклонить заявки в статусах: `NEW` — новые, `SEEN` — просмотренные.\n",
          "operationId": "promos_task_decline",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1DeclineDiscountTasksRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Заявки отклонены",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1ApproveDeclineDiscountTasksResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/pricing-strategy/competitors/list": {
        "post": {
          "summary": "Список конкурентов",
          "description": "Метод для получения списка конкурентов — продавцов с похожими товарами в других интернет-магазинах и маркетплейсах.",
          "tags": ["PricingStrategyAPI"],
          "operationId": "pricing_competitors",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetCompetitorsRequest"
                },
                "example": {
                  "page": 1,
                  "limit": 20
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Список конкурентов",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1GetCompetitorsResponse"
                  },
                  "example": {
                    "competitor": [
                      {
                        "competitor_name": "string",
                        "competitor_id": 0
                      }
                    ],
                    "total": 0
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/pricing-strategy/list": {
        "post": {
          "summary": "Список стратегий",
          "description": null,
          "tags": ["PricingStrategyAPI"],
          "operationId": "pricing_list",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetStrategyListRequest"
                },
                "example": {
                  "page": 1,
                  "limit": 20
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Список стратегий",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1GetStrategyListResponse"
                  },
                  "example": {
                    "strategies": [
                      {
                        "strategy_id": "string",
                        "strategy_name": "string",
                        "type": "string",
                        "update_type": "string",
                        "updated_at": "string",
                        "products_count": 0,
                        "competitors_count": 0,
                        "enabled": true
                      }
                    ],
                    "total": 0
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/pricing-strategy/create": {
        "post": {
          "summary": "Создать стратегию",
          "description": null,
          "tags": ["PricingStrategyAPI"],
          "operationId": "pricing_create",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1CreatePricingStrategyRequest"
                },
                "example": {
                  "strategy_name": "Новая стратегия",
                  "competitors": [
                    {
                      "competitor_id": 1008426,
                      "coefficient": 1
                    },
                    {
                      "competitor_id": 204,
                      "coefficient": 1
                    },
                    {
                      "competitor_id": 91,
                      "coefficient": 1
                    },
                    {
                      "competitor_id": 48,
                      "coefficient": 1
                    }
                  ],
                  "company_id": 7
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Стратегия создана",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1CreatePricingStrategyResponse"
                  },
                  "example": {
                    "result": {
                      "id": "4f3a1d4c-5833-4f04-b69b-495cbc1f6f1c"
                    }
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/pricing-strategy/info": {
        "post": {
          "summary": "Информация о стратегии",
          "description": null,
          "tags": ["PricingStrategyAPI"],
          "operationId": "pricing_info",
          "requestBody": {
            "$ref": "#/components/requestBodies/v1StrategyRequest",
            "example": {
              "strategy_id": "4f3a1d4c-5833-4f04-b69b-495cbc1f6f1c"
            }
          },
          "responses": {
            "200": {
              "description": "Информация о стратегии",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1GetStrategyResponse"
                  },
                  "example": {
                    "result": {
                      "strategy_name": "тест1",
                      "enabled": true,
                      "update_type": "strategyItemsListChanged",
                      "type": "COMP_PRICE",
                      "competitors": [
                        {
                          "competitor_id": 204,
                          "coefficient": 1
                        },
                        {
                          "competitor_id": 1008426,
                          "coefficient": 1
                        }
                      ]
                    }
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/pricing-strategy/update": {
        "post": {
          "summary": "Обновить стратегию",
          "description": "Можно обновить все стратегии кроме системной.",
          "tags": ["PricingStrategyAPI"],
          "operationId": "pricing_update",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1UpdatePricingStrategyRequest"
                },
                "example": {
                  "strategy_id": "a3de1826-9c54-40f1-bb6d-1a9e2638b058",
                  "strategy_name": "Новая стратегия",
                  "competitors": [
                    {
                      "competitor_id": 1008426,
                      "coefficient": 1
                    },
                    {
                      "competitor_id": 204,
                      "coefficient": 1
                    },
                    {
                      "competitor_id": 91,
                      "coefficient": 1
                    },
                    {
                      "competitor_id": 48,
                      "coefficient": 1
                    },
                    {
                      "id": 45,
                      "coefficient": 1
                    }
                  ]
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Стратегия обновлена",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1Empty"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/pricing-strategy/products/add": {
        "post": {
          "summary": "Добавить товары в стратегию",
          "description": null,
          "tags": ["PricingStrategyAPI"],
          "operationId": "pricing_items-add",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1AddStrategyItemsRequest"
                },
                "example": {
                  "product_id": ["29209"],
                  "strategy_id": "e29114f0-177d-4160-8d06-2bc528470dda"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Ошибки при добавлении товаров",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1AddStrategyItemsResponse"
                  },
                  "example": {
                    "result": {
                      "failed_product_count": 0
                    }
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/pricing-strategy/strategy-ids-by-product-ids": {
        "post": {
          "summary": "Список идентификаторов стратегий",
          "description": null,
          "tags": ["PricingStrategyAPI"],
          "operationId": "pricing_ids",
          "requestBody": {
            "$ref": "#/components/requestBodies/v1ItemIDsRequest"
          },
          "responses": {
            "200": {
              "description": "Список идентификаторов",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1GetStrategyIDsByItemIDsResponse"
                  },
                  "example": {
                    "result": {
                      "products_info": [
                        {
                          "product_id": 29209,
                          "strategy_id": "b7cd30e6-5667-424d-b105-fbec30a52477"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/pricing-strategy/products/list": {
        "post": {
          "summary": "Список товаров в стратегии",
          "description": null,
          "tags": ["PricingStrategyAPI"],
          "operationId": "pricing_items-list",
          "requestBody": {
            "$ref": "#/components/requestBodies/v1StrategyRequest"
          },
          "responses": {
            "200": {
              "description": "Список товаров",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1GetStrategyItemsResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/pricing-strategy/product/info": {
        "post": {
          "summary": "Цена товара у конкурента",
          "description": null,
          "tags": ["PricingStrategyAPI"],
          "operationId": "pricing_items-info",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetStrategyItemInfoRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Цена товара у конкурента",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1GetStrategyItemInfoResponse"
                  },
                  "example": {
                    "result": {
                      "strategy_id": "string",
                      "is_enabled": true,
                      "strategy_product_price": 0,
                      "price_downloaded_at": "2022-11-17T15:33:53.936Z",
                      "strategy_competitor_id": 0,
                      "strategy_competitor_product_url": "string"
                    }
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/pricing-strategy/products/delete": {
        "post": {
          "summary": "Удалить товары из стратегии",
          "description": null,
          "tags": ["PricingStrategyAPI"],
          "operationId": "pricing_items-delete",
          "requestBody": {
            "$ref": "#/components/requestBodies/v1ItemIDsRequest",
            "example": {
              "product_id": ["29209"]
            }
          },
          "responses": {
            "200": {
              "description": "Ошибки при удалении товаров",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1DeleteStrategyItemsResponse"
                  },
                  "example": {
                    "result": {
                      "failed_product_count": 0
                    }
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/pricing-strategy/status": {
        "post": {
          "summary": "Изменить статус стратегии",
          "description": "Можно изменить статус любой стратегии кроме системной.",
          "tags": ["PricingStrategyAPI"],
          "operationId": "pricing_status",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1UpdateStatusStrategyRequest"
                },
                "example": {
                  "strategy_id": "c7516438-7124-4e2c-85d3-ccd92b6b9b65",
                  "enabled": true
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Статус стратегии изменён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1Empty"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/pricing-strategy/delete": {
        "post": {
          "summary": "Удалить стратегию",
          "description": "Можно удалить любую стратегию кроме системной.",
          "tags": ["PricingStrategyAPI"],
          "operationId": "pricing_delete",
          "requestBody": {
            "$ref": "#/components/requestBodies/v1StrategyRequest",
            "example": {
              "strategy_id": "c7516438-7124-4e2c-85d3-ccd92b6b9b65"
            }
          },
          "responses": {
            "200": {
              "description": "Стратегия удалена",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1Empty"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/brand/company-certification/list": {
        "post": {
          "summary": "Список сертифицируемых брендов",
          "description": "Метод для получения списка брендов, для которых требуется предоставить сертификат. Ответ содержит список брендов,\nтовары которых есть в вашем личном кабинете.\n\nСписок брендов может изменяться, если Ozon получит требование от бренда предоставлять сертификат.\n",
          "operationId": "BrandAPI_BrandCompanyCertificationList",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/brandBrandCompanyCertificationListRequest"
                },
                "example": {
                  "page": 0,
                  "page_size": 0
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Список брендов",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/brandBrandCompanyCertificationListResponse"
                  },
                  "example": {
                    "result": {
                      "brand_certification": [
                        {
                          "brand_id": 135476863,
                          "brand_name": "Sea of Spa",
                          "has_certificate": false
                        }
                      ],
                      "total": 1
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["BrandAPI"]
        }
      },
      "/v1/product/certificate/accordance-types": {
        "get": {
          "summary": "Список типов соответствия требованиям (версия 1)",
          "operationId": "ProductAPI_ProductCertificateAccordanceTypes",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "responses": {
            "200": {
              "description": "Cправочник типов соответствия требованиям",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/productProductCertificateAccordanceTypesResponse"
                  },
                  "example": {
                    "result": [
                      {
                        "name": "ГОСТ",
                        "value": "gost"
                      },
                      {
                        "name": "Технический регламент РФ",
                        "value": "technical_regulations_rf"
                      },
                      {
                        "name": "Технический регламент ТС",
                        "value": "technical_regulations_cu"
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["CertificationAPI"]
        }
      },
      "/v2/product/certificate/accordance-types/list": {
        "get": {
          "tags": ["CertificationAPI"],
          "operationId": "CertificateAccordanceTypes",
          "summary": "Список типов соответствия требованиям (версия 2)",
          "description": null,
          "responses": {
            "200": {
              "description": "Список типов соответствия требованиям",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v2ProductCertificateAccordanceTypesResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/googlerpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/product/certificate/types": {
        "get": {
          "summary": "Справочник типов документов",
          "operationId": "ProductAPI_ProductCertificateTypes",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "responses": {
            "200": {
              "description": "Справочник типов документов",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/productProductCertificateTypesResponse"
                  },
                  "example": {
                    "result": [
                      {
                        "name": "Сертификат соответствия",
                        "value": "certificate_of_conformity"
                      },
                      {
                        "name": "Декларация",
                        "value": "declaration"
                      },
                      {
                        "name": "Свидетельство о гос регистрации",
                        "value": "certificate_of_registration"
                      },
                      {
                        "name": "Регистрационное удостоверение",
                        "value": "registration_certificate"
                      },
                      {
                        "name": "Отказное письмо",
                        "value": "refused_letter"
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["CertificationAPI"]
        }
      },
      "/v1/product/certification/list": {
        "post": {
          "summary": "Список сертифицируемых категорий",
          "operationId": "ProductAPI_ProductCertificationList",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/productProductCertificationListRequest"
                },
                "example": {
                  "page": 1,
                  "page_size": 100
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Список сертифицируемых категорий",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/productProductCertificationListResponse"
                  },
                  "example": {
                    "result": {
                      "certification": [
                        {
                          "is_required": true,
                          "category_name": "Витаминно-минеральные комплексы для взрослых"
                        }
                      ],
                      "total": 1
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["CertificationAPI"]
        }
      },
      "/v1/product/certificate/create": {
        "post": {
          "summary": "Добавить сертификаты для товаров",
          "operationId": "ProductAPI_ProductCertificateCreate",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "files": {
                      "description": "Массив сертификатов для товара. Допустимые расширения jpg, jpeg, png, pdf.",
                      "type": "array",
                      "items": {
                        "type": "file"
                      }
                    },
                    "name": {
                      "type": "string",
                      "description": "Название сертификата. Максимум 100 символов."
                    },
                    "number": {
                      "type": "string",
                      "description": "Номер сертификата. Максимум 100 символов."
                    },
                    "type_code": {
                      "type": "string",
                      "description": "Тип сертификата. Чтобы получить доступные типы, используйте метод [GET /v1/product/certificate/types](#operation/ProductAPI_ProductCertificateTypes).",
                      "enum": [
                        "certificate_of_conformity",
                        "declaration",
                        "certificate_of_registration",
                        "registration_certificate",
                        "refused_letter"
                      ]
                    },
                    "accordance_type_code": {
                      "type": "string",
                      "description": "Тип соответствия требованиям. Чтобы получить доступные типы, используйте метод [GET /v1/product/certificate/accordance-types](#operation/ProductAPI_ProductCertificateAccordanceTypes).",
                      "enum": [
                        "technical_regulations_rf",
                        "technical_regulations_cu",
                        "gost"
                      ]
                    },
                    "issue_date": {
                      "type": "string",
                      "format": "date-time",
                      "default": "2021-04-30T11:31:26Z",
                      "description": "Дата начала действия сертификата."
                    },
                    "expire_date": {
                      "description": "Дата окончания действия сертификата. Может быть пустым для бессрочных сертификатов.\n\nФормат: `2021-04-30T11:31:26Z`.\n",
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "required": [
                    "files",
                    "name",
                    "number",
                    "type_code",
                    "issue_date"
                  ]
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Идентификатор загруженного сертификата",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "integer",
                    "example": {
                      "id": 50058
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["CertificationAPI"]
        }
      },
      "/v1/product/certificate/bind": {
        "post": {
          "summary": "Привязать сертификат к товару",
          "operationId": "ProductAPI_ProductCertificateBind",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/productProductCertificateBindRequest"
                },
                "example": {
                  "certificate_id": 50058,
                  "product_id": [290]
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Сертификат привязан к товару",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/productBooleanResponse"
                  },
                  "example": {
                    "result": true
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["CertificationAPI"]
        }
      },
      "/v1/product/certificate/delete": {
        "post": {
          "tags": ["CertificationAPI"],
          "operationId": "CertificateDelete",
          "summary": "Удалить сертификат",
          "description": null,
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ProductCertificateDeleteRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Результат удаления сертификата",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1ProductCertificateDeleteResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/product/certificate/info": {
        "post": {
          "tags": ["CertificationAPI"],
          "operationId": "CertificateInfo",
          "summary": "Информация о сертификате",
          "description": null,
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ProductCertificateInfoRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Информация о сертификате",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1ProductCertificateInfoResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/product/certificate/list": {
        "post": {
          "tags": ["CertificationAPI"],
          "operationId": "CertificateList",
          "summary": "Список сертификатов",
          "description": null,
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ProductCertificateListRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Список сертификатов",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1ProductCertificateListResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/product/certificate/product_status/list": {
        "post": {
          "tags": ["CertificationAPI"],
          "operationId": "ProductStatusList",
          "summary": "Список возможных статусов товаров",
          "description": "Метод для получения списка возможных статусов товаров при их привязке к сертификату.",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ProductCertificateProductStatusListRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Список статусов товаров",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1ProductCertificateProductStatusListResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/product/certificate/products/list": {
        "post": {
          "tags": ["CertificationAPI"],
          "operationId": "CertificateProductsList",
          "summary": "Список товаров, привязанных к сертификату",
          "description": null,
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ProductCertificateProductsListRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Список товаров",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1ProductCertificateProductsListResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/product/certificate/unbind": {
        "post": {
          "tags": ["CertificationAPI"],
          "operationId": "CertificateUnbind",
          "summary": "Отвязать товар от сертификата",
          "description": null,
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ProductCertificateUnbindRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Товар отвязан от сертификата",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1ProductCertificateUnbindResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/product/certificate/rejection_reasons/list": {
        "post": {
          "tags": ["CertificationAPI"],
          "operationId": "RejectionReasonsList",
          "summary": "Возможные причины отклонения сертификата",
          "description": null,
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ProductCertificateRejectionReasonsListRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Причины отклонения сертификата",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1ProductCertificateRejectionReasonsListResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/product/certificate/status/list": {
        "post": {
          "tags": ["CertificationAPI"],
          "operationId": "CertificateStatusList",
          "summary": "Возможные статусы сертификатов",
          "description": null,
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ProductCertificateStatusListRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Возможные статусы сертификатов",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1ProductCertificateStatusListResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/warehouse/list": {
        "post": {
          "summary": "Список складов",
          "description": "В запросе не нужно указывать параметры. Ваша компания будет определена по `Client-ID`.",
          "operationId": "WarehouseAPI_WarehouseList",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "responses": {
            "200": {
              "description": "Список складов",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/warehouseWarehouseListResponse"
                  },
                  "example": {
                    "result": [
                      {
                        "warehouse_id": 15588127982000,
                        "name": "Proffi (Панорама Групп)",
                        "is_rfbs": false
                      },
                      {
                        "warehouse_id": 22142605386000,
                        "name": "Склад на производственной",
                        "is_rfbs": true
                      },
                      {
                        "warehouse_id": 22208673494000,
                        "name": "Тест 37349",
                        "is_rfbs": true
                      },
                      {
                        "warehouse_id": 22240462819000,
                        "name": "Тест12",
                        "is_rfbs": true
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["WarehouseAPI"]
        }
      },
      "/v1/delivery-method/list": {
        "post": {
          "summary": "Список методов доставки склада",
          "description": null,
          "operationId": "WarehouseAPI_DeliveryMethodList",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/warehouseDeliveryMethodListRequest"
                },
                "example": {
                  "filter": {
                    "provider_id": 0,
                    "status": "",
                    "warehouse_id": 15588127982000
                  },
                  "limit": 100,
                  "offset": 0
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Список методов склада",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/warehouseDeliveryMethodListResponse"
                  },
                  "example": {
                    "result": [
                      {
                        "id": 15588127982000,
                        "company_id": 1,
                        "name": "Ozon Логистика курьеру, Есипово",
                        "status": "ACTIVE",
                        "cutoff": "13:00",
                        "provider_id": 24,
                        "template_id": 0,
                        "warehouse_id": 15588127982000,
                        "created_at": "2019-04-04T15:22:31.048202Z",
                        "updated_at": "2021-08-15T10:21:44.854209Z"
                      }
                    ],
                    "has_next": false
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["WarehouseAPI"]
        }
      },
      "/v1/polygon/create": {
        "post": {
          "summary": "Создайте полигон доставки",
          "description": "Вы можете добавить полигон к методу доставки.\n\nСоздайте полигон, получив его координаты на https://geojson.io: отметьте на карте минимум 3 точки и соедините их линиями.\n",
          "operationId": "PolygonAPI_CreatePolygon",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/polygonv1PolygonCreateRequest"
                },
                "example": {
                  "coordinates": "[[[30.149574279785153,59.86550435303646],[30.21205902099609,59.846884387977326],[30.255661010742184,59.86240174913176],[30.149574279785153,59.86550435303646]]]"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Полигон создан",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/polygonv1PolygonCreateResponse"
                  },
                  "example": {
                    "polygonId": "1323"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus_v1PolygonCreate"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["PolygonAPI"]
        }
      },
      "/v1/polygon/bind": {
        "post": {
          "summary": "Свяжите метод доставки с полигоном доставки",
          "operationId": "PolygonAPI_BindPolygon",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/polygonv1PolygonBindRequest"
                },
                "example": {
                  "delivery_method_id": 0,
                  "polygons": [
                    {
                      "polygon_id": "1323",
                      "time": "30"
                    }
                  ],
                  "warehouse_location": {
                    "lat": "58.52391272075821",
                    "lon": "31.236791610717773"
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Успешно",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/polygonv1Empty"
                  },
                  "example": {}
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus_v1PolygonBind"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["PolygonAPI"]
        }
      },
      "/v1/polygon/delete": {
        "post": {
          "summary": "Удалите полигон",
          "operationId": "PolygonAPI_DeletePolygon",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/polygonv1PolygonDeleteRequest"
                },
                "example": {
                  "polygon_ids": ["1323"]
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Успешно",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/polygonv1Empty"
                  },
                  "example": {}
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["PolygonAPI"]
        }
      },
      "/v2/posting/fbo/list": {
        "post": {
          "summary": "Список отправлений",
          "description": "Возвращает список отправлений за указанный период времени. Дополнительно можно отфильтровать отправления по их статусу.",
          "operationId": "PostingAPI_GetFboPostingList",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/postingGetFboPostingListRequest"
                },
                "example": {
                  "dir": "ASC",
                  "filter": {
                    "since": "2021-09-01T00:00:00.000Z",
                    "status": "",
                    "to": "2021-11-17T10:44:12.828Z"
                  },
                  "limit": 5,
                  "offset": 0,
                  "translit": true,
                  "with": {
                    "analytics_data": true,
                    "financial_data": true
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Список отправлений",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v2FboPostingListResponse"
                  },
                  "example": {
                    "result": [
                      {
                        "order_id": 354680487,
                        "order_number": "16965409-0014",
                        "posting_number": "16965409-0014-1",
                        "status": "delivered",
                        "cancel_reason_id": 0,
                        "created_at": "2021-09-01T00:23:45.607Z",
                        "in_process_at": "2021-09-01T00:25:30.120Z",
                        "products": [
                          {
                            "sku": 160249683,
                            "name": "Так говорил Омар Хайям. Жизнеописание. Афоризмы и рубайят. Классика в словах и картинках",
                            "quantity": 1,
                            "offer_id": "978-5-906864-56-7",
                            "price": "81.00",
                            "digital_codes": [],
                            "currency_code": "RUB"
                          }
                        ],
                        "analytics_data": {
                          "region": "РОСТОВСКАЯ ОБЛАСТЬ",
                          "city": "Ростов-на-Дону",
                          "delivery_type": "PVZ",
                          "is_premium": false,
                          "payment_type_group_name": "Карты оплаты",
                          "warehouse_id": 17717042026000,
                          "warehouse_name": "РОСТОВ-НА-ДОНУ_РФЦ",
                          "is_legal": false
                        },
                        "financial_data": {
                          "products": [
                            {
                              "commission_amount": 12.15,
                              "commission_percent": 15,
                              "payout": 68.85,
                              "product_id": 160249683,
                              "currency_code": "RUB",
                              "old_price": 115,
                              "price": 81,
                              "total_discount_value": 34,
                              "total_discount_percent": 29.57,
                              "actions": ["Системная виртуальная скидка селлера"],
                              "picking": null,
                              "quantity": 0,
                              "client_price": "",
                              "item_services": {
                                "marketplace_service_item_fulfillment": -31.5,
                                "marketplace_service_item_pickup": 0,
                                "marketplace_service_item_dropoff_pvz": 0,
                                "marketplace_service_item_dropoff_sc": 0,
                                "marketplace_service_item_dropoff_ff": 0,
                                "marketplace_service_item_direct_flow_trans": -5,
                                "marketplace_service_item_return_flow_trans": 0,
                                "marketplace_service_item_deliv_to_customer": -20,
                                "marketplace_service_item_return_not_deliv_to_customer": 0,
                                "marketplace_service_item_return_part_goods_customer": 0,
                                "marketplace_service_item_return_after_deliv_to_customer": 0
                              }
                            }
                          ],
                          "posting_services": {
                            "marketplace_service_item_fulfillment": 0,
                            "marketplace_service_item_pickup": 0,
                            "marketplace_service_item_dropoff_pvz": 0,
                            "marketplace_service_item_dropoff_sc": 0,
                            "marketplace_service_item_dropoff_ff": 0,
                            "marketplace_service_item_direct_flow_trans": 0,
                            "marketplace_service_item_return_flow_trans": 0,
                            "marketplace_service_item_deliv_to_customer": 0,
                            "marketplace_service_item_return_not_deliv_to_customer": 0,
                            "marketplace_service_item_return_part_goods_customer": 0,
                            "marketplace_service_item_return_after_deliv_to_customer": 0
                          }
                        },
                        "additional_data": []
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["FBO"]
        }
      },
      "/v2/posting/fbo/get": {
        "post": {
          "summary": "Информация об отправлении",
          "description": "Возвращает информацию об отправлении по его идентификатору.",
          "operationId": "PostingAPI_GetFboPosting",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/postingGetFboPostingRequest"
                },
                "example": {
                  "posting_number": "50520644-0012-7",
                  "translit": true,
                  "with": {
                    "analytics_data": true,
                    "financial_data": true
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Информация об отправлении",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v2FboPostingResponse"
                  },
                  "example": {
                    "result": {
                      "order_id": 354679434,
                      "order_number": "50520644-0012",
                      "posting_number": "50520644-0012-7",
                      "status": "delivered",
                      "cancel_reason_id": 0,
                      "created_at": "2021-09-01T00:34:56.563Z",
                      "in_process_at": "2021-09-01T00:34:56.103Z",
                      "products": [
                        {
                          "sku": 254665483,
                          "name": "Мочалка натуральная из люфы с деревянной ручкой",
                          "quantity": 1,
                          "offer_id": "PS1033",
                          "price": "137.00",
                          "digital_codes": [],
                          "currency_code": "RUB"
                        }
                      ],
                      "analytics_data": {
                        "region": "МОСКВА",
                        "city": "Москва",
                        "delivery_type": "Courier",
                        "is_premium": false,
                        "payment_type_group_name": "Карты оплаты",
                        "warehouse_id": 15431806189000,
                        "warehouse_name": "ХОРУГВИНО_РФЦ",
                        "is_legal": false
                      },
                      "financial_data": {
                        "products": [
                          {
                            "commission_amount": 13.7,
                            "commission_percent": 10,
                            "payout": 123.3,
                            "product_id": 254665483,
                            "currency_code": "RUB",
                            "old_price": 198,
                            "price": 137,
                            "total_discount_value": 61,
                            "total_discount_percent": 30.81,
                            "actions": ["Системная виртуальная скидка селлера"],
                            "picking": null,
                            "quantity": 0,
                            "client_price": "",
                            "item_services": {
                              "marketplace_service_item_fulfillment": -31.5,
                              "marketplace_service_item_pickup": 0,
                              "marketplace_service_item_dropoff_pvz": 0,
                              "marketplace_service_item_dropoff_sc": 0,
                              "marketplace_service_item_dropoff_ff": 0,
                              "marketplace_service_item_direct_flow_trans": -5,
                              "marketplace_service_item_return_flow_trans": 0,
                              "marketplace_service_item_deliv_to_customer": -20,
                              "marketplace_service_item_return_not_deliv_to_customer": 0,
                              "marketplace_service_item_return_part_goods_customer": 0,
                              "marketplace_service_item_return_after_deliv_to_customer": 0
                            }
                          }
                        ],
                        "posting_services": {
                          "marketplace_service_item_fulfillment": 0,
                          "marketplace_service_item_pickup": 0,
                          "marketplace_service_item_dropoff_pvz": 0,
                          "marketplace_service_item_dropoff_sc": 0,
                          "marketplace_service_item_dropoff_ff": 0,
                          "marketplace_service_item_direct_flow_trans": 0,
                          "marketplace_service_item_return_flow_trans": 0,
                          "marketplace_service_item_deliv_to_customer": 0,
                          "marketplace_service_item_return_not_deliv_to_customer": 0,
                          "marketplace_service_item_return_part_goods_customer": 0,
                          "marketplace_service_item_return_after_deliv_to_customer": 0
                        }
                      },
                      "additional_data": []
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["FBO"]
        }
      },
      "/v1/supply-order/list": {
        "post": {
          "summary": "Список заявок на поставку на склад Ozon",
          "description": "Метод для получения списка заявок на поставку. \nУчитываются заявки с поставкой на конкретный склад и [через виртуальный распределительный центр (вРЦ)](https://seller-edu.ozon.ru/fbo/scheme-of-work/about#чем-отличаются-процессы-при-заявках-через-врц-и-напрямую-на-склад).\n",
          "tags": ["FBO"],
          "operationId": "SupplyOrderAPI_GetSupplyOrdersList",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetSupplyOrdersListRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Список заявок на поставку",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1GetSupplyOrdersListResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/supply-order/get": {
        "post": {
          "summary": "Информация о заявке на поставку",
          "description": "Метод для получения детальной информации по заявке на поставку. \nУчитываются заявки с поставкой на конкретный склад и [через виртуальный распределительный центр (вРЦ)](https://seller-edu.ozon.ru/fbo/scheme-of-work/about#чем-отличаются-процессы-при-заявках-через-врц-и-напрямую-на-склад).\n",
          "tags": ["FBO"],
          "operationId": "SupplyOrderAPI_GetSupplyOrder",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetSupplyOrderRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Информация о заявке",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1GetSupplyOrderResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/supply-order/items": {
        "post": {
          "summary": "Список товаров в заявке на поставку",
          "tags": ["FBO"],
          "operationId": "SupplyOrderAPI_GetSupplyOrderItems",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetSupplyOrderItemsRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Список товаров",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1GetSupplyOrderItemsResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v4/fbs/posting/product/exemplar/validate": {
        "post": {
          "summary": "Валидация кодов маркировки",
          "description": "Метод для проверки кодов на соответствие требованиям системы «Честный ЗНАК» по количеству и составу символов.\n\nЕсли у вас нет номера грузовой таможенной декларации (ГТД), вы можете его не указывать.\n",
          "operationId": "PostingAPI_FbsPostingProductExemplarValidate",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/postingv4FbsPostingProductExemplarValidateRequest"
                },
                "example": {
                  "posting_number": "23281294-0063-2",
                  "products": [
                    {
                      "exemplars": [
                        {
                          "gtd": "",
                          "mandatory_mark": "010290000151642731tVMohkbfFgunB"
                        }
                      ],
                      "product_id": 476925391
                    }
                  ]
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Результат валидации",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/postingv4FbsPostingProductExemplarValidateResponse"
                  },
                  "example": {
                    "result": {
                      "products": [
                        {
                          "product_id": 476925391,
                          "exemplars": [
                            {
                              "mandatory_mark": "010290000151642731tVMohkbfFgunB",
                              "gtd": "",
                              "valid": true,
                              "errors": []
                            }
                          ],
                          "valid": true,
                          "error": ""
                        }
                      ]
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["FBS&rFBSMarks"]
        }
      },
      "/v4/fbs/posting/product/exemplar/set": {
        "post": {
          "summary": "Проверить и сохранить данные экземпляров",
          "description": "Асинхронный метод:\n- для проверки наличия экземпляров в обороте в системе «Честный ЗНАК»;\n- для сохранения данных экземпляров. \n\nЧтобы получить результаты проверок, используйте метод [/v4/fbs/posting/product/exemplar/status](#operation/PostingAPI_GetProductExemplarStatus).\n\nПри необходимости укажите номер грузовой таможенной декларации в параметре `gtd`. Если его нет, передайте значение `is_gtd_absent = true`.\n\nЕсли у вас несколько одинаковых товаров в отправлении, укажите один `product_id` и массив `exemplars` для каждого товара из отправления.\n\nВсегда передавайте полный набор данных по экземплярам и продуктам. \n\nНапример, в вашей системе 10 экземпляров. Вы передали их для проверки и сохранения. Потом добавили в своей системе ещё 60 экземпляров.\nПри повторной передаче экземпляров для проверки и сохранения укажите все экземпляры: и старые, и только что добавленные.\n",
          "operationId": "PostingAPI_SetProductExemplar",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/fbsv4SetProductExemplarRequest"
                },
                "example": {
                  "posting_number": "23281294-0063-2",
                  "products": [
                    {
                      "exemplars": [
                        {
                          "gtd": "",
                          "is_gtd_absent": true,
                          "mandatory_mark": "010290000151642731tVMohkbfFgunB"
                        }
                      ],
                      "product_id": 476925391
                    }
                  ]
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Запрос обработан",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/fbsv4SetProductExemplarResponse"
                  },
                  "example": {
                    "result": true
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["FBS&rFBSMarks"]
        }
      },
      "/v4/fbs/posting/product/exemplar/status": {
        "post": {
          "summary": "Получить статус проверки экземпляров",
          "description": "Метод для получения статусов проверки экземпляров, переданных в методе [/v4/fbs/posting/product/exemplar/set](#operation/PostingAPI_SetProductExemplar). \nТакже возвращает данные по этим экземплярам.\n",
          "operationId": "PostingAPI_GetProductExemplarStatus",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/fbsv4GetProductExemplarStatusRequest"
                },
                "example": {
                  "posting_number": "23281294-0063-2"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Статусы проверки экземпляров",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/fbsv4GetProductExemplarStatusResponse"
                  },
                  "example": {
                    "posting_number": "23281294-0063-2",
                    "products": [
                      {
                        "product_id": 476925391,
                        "exemplars": [
                          {
                            "mandatory_mark": "010290000151642731tVMohkbfFgunB",
                            "gtd": "",
                            "is_gtd_absent": true,
                            "mandatory_mark_check_status": "passed",
                            "mandatory_mark_error_codes": [],
                            "gtd_check_status": "passed",
                            "gtd_error_codes": []
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["FBS&rFBSMarks"]
        }
      },
      "/v4/posting/fbs/ship": {
        "post": {
          "tags": ["FBS&rFBSMarks"],
          "summary": "Собрать заказ (версия 4)",
          "description": "Делит заказ на отправления и переводит его в статус `awaiting_deliver`.\n\nКаждый элемент в `packages` может содержать несколько элементов `products` или отправлений. \nКаждый элемент в `products` — это товар, включённый в данное отправление.\n\nРазделить заказ нужно, если:\n  - товары не помещаются в одну упаковку,\n  - товары нельзя сложить в одну упаковку.\n\nОтличается от [/v3/posting/fbs/ship](#operation/PostingAPI_ShipFbsPostingV3) отсутствием передачи информации по экземплярам в запросе.\n",
          "operationId": "PostingAPI_ShipFbsPostingV4",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/fbsv4FbsPostingShipV4Request"
                },
                "example": {
                  "packages": [
                    {
                      "products": [
                        {
                          "product_id": 185479045,
                          "quantity": 1
                        }
                      ]
                    }
                  ],
                  "posting_number": "89491381-0072-1",
                  "with": {
                    "additional_data": true
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Заказ собран",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/fbsv4FbsPostingShipV4Response"
                  },
                  "example": {
                    "additional_data": [
                      {
                        "posting_number": "47873153-0052-1",
                        "products": [
                          {
                            "currency_code": "RUB",
                            "mandatory_mark": ["123"],
                            "name": "string",
                            "offer_id": "17125",
                            "price": "2000",
                            "quantity": 1,
                            "sku": 149618972
                          }
                        ]
                      }
                    ],
                    "result": ["89491381-0072-1"]
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v3/posting/fbs/unfulfilled/list": {
        "post": {
          "summary": "Список необработанных отправлений (версия 3)",
          "description": "Возвращает список необработанных отправлений за указанный период времени — он должен быть не больше одного года.\n\nВозможные статусы отправлений:\n- `awaiting_registration` — ожидает регистрации,\n- `acceptance_in_progress` — идёт приёмка,\n- `awaiting_approve` — ожидает подтверждения,\n- `awaiting_packaging` — ожидает упаковки,\n- `awaiting_deliver` — ожидает отгрузки,\n- `arbitration` — арбитраж,\n- `client_arbitration` — клиентский арбитраж доставки,\n- `delivering` — доставляется,\n- `driver_pickup` — у водителя,\n- `delivered` — доставлено,\n- `cancelled` — отменено,\n- `not_accepted` — не принят на сортировочном центре,\n- `sent_by_seller` — отправлено продавцом.\n",
          "operationId": "PostingAPI_GetFbsPostingUnfulfilledList",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/postingv3GetFbsPostingUnfulfilledListRequest"
                },
                "example": {
                  "dir": "ASC",
                  "filter": {
                    "cutoff_from": "2021-08-24T14:15:22Z",
                    "cutoff_to": "2021-08-31T14:15:22Z",
                    "delivery_method_id": [],
                    "provider_id": [],
                    "status": "awaiting_packaging",
                    "warehouse_id": []
                  },
                  "limit": 100,
                  "offset": 0,
                  "with": {
                    "analytics_data": true,
                    "barcodes": true,
                    "financial_data": true,
                    "translit": true
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Список необработанных отправлений",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/postingv3GetFbsPostingUnfulfilledListResponse"
                  },
                  "example": {
                    "result": {
                      "postings": [
                        {
                          "posting_number": "23713478-0018-3",
                          "order_id": 559293114,
                          "order_number": "33713378-0051",
                          "status": "awaiting_packaging",
                          "delivery_method": {
                            "id": 15110442724000,
                            "name": "Ozon Логистика курьеру, Москва",
                            "warehouse_id": 15110442724000,
                            "warehouse": "Склад на Ленина",
                            "tpl_provider_id": 24,
                            "tpl_provider": "Ozon Логистика"
                          },
                          "tracking_number": "",
                          "tpl_integration_type": "ozon",
                          "in_process_at": "2021-08-25T10:48:38Z",
                          "shipment_date": "2021-08-26T10:00:00Z",
                          "delivering_date": null,
                          "cancellation": {
                            "cancel_reason_id": 0,
                            "cancel_reason": "",
                            "cancellation_type": "",
                            "cancelled_after_ship": false,
                            "affect_cancellation_rating": false,
                            "cancellation_initiator": ""
                          },
                          "customer": null,
                          "products": [
                            {
                              "price": "1259",
                              "currency_code": "RUB",
                              "offer_id": "УТ-0001365",
                              "name": "Мяч, цвет: черный, 5 кг",
                              "sku": 140048123,
                              "quantity": 1,
                              "mandatory_mark": []
                            }
                          ],
                          "addressee": null,
                          "barcodes": {
                            "upper_barcode": "%101%806044518",
                            "lower_barcode": "23024930500000"
                          },
                          "analytics_data": {
                            "region": "Санкт-Петербург",
                            "city": "Санкт-Петербург",
                            "delivery_type": "PVZ",
                            "is_premium": false,
                            "payment_type_group_name": "Карты оплаты",
                            "warehouse_id": 15110442724000,
                            "warehouse": "Склад на Ленина",
                            "tpl_provider_id": 24,
                            "tpl_provider": "Ozon Логистика",
                            "delivery_date_begin": "2022-08-28T14:00:00Z",
                            "delivery_date_end": "2022-08-28T18:00:00Z",
                            "is_legal": false
                          },
                          "financial_data": {
                            "products": [
                              {
                                "commission_amount": 0,
                                "commission_percent": 0,
                                "payout": 0,
                                "product_id": 140048123,
                                "old_price": 1888,
                                "price": 1259,
                                "total_discount_value": 629,
                                "total_discount_percent": 33.32,
                                "actions": [
                                  "Системная виртуальная скидка селлера"
                                ],
                                "picking": null,
                                "quantity": 1,
                                "client_price": "",
                                "item_services": {
                                  "marketplace_service_item_fulfillment": 0,
                                  "marketplace_service_item_pickup": 0,
                                  "marketplace_service_item_dropoff_pvz": 0,
                                  "marketplace_service_item_dropoff_sc": 0,
                                  "marketplace_service_item_dropoff_ff": 0,
                                  "marketplace_service_item_direct_flow_trans": 0,
                                  "marketplace_service_item_return_flow_trans": 0,
                                  "marketplace_service_item_deliv_to_customer": 0,
                                  "marketplace_service_item_return_not_deliv_to_customer": 0,
                                  "marketplace_service_item_return_part_goods_customer": 0,
                                  "marketplace_service_item_return_after_deliv_to_customer": 0
                                }
                              }
                            ],
                            "posting_services": {
                              "marketplace_service_item_fulfillment": 0,
                              "marketplace_service_item_pickup": 0,
                              "marketplace_service_item_dropoff_pvz": 0,
                              "marketplace_service_item_dropoff_sc": 0,
                              "marketplace_service_item_dropoff_ff": 0,
                              "marketplace_service_item_direct_flow_trans": 0,
                              "marketplace_service_item_return_flow_trans": 0,
                              "marketplace_service_item_deliv_to_customer": 0,
                              "marketplace_service_item_return_not_deliv_to_customer": 0,
                              "marketplace_service_item_return_part_goods_customer": 0,
                              "marketplace_service_item_return_after_deliv_to_customer": 0
                            }
                          },
                          "is_express": false,
                          "requirements": {
                            "products_requiring_gtd": [],
                            "products_requiring_country": []
                          }
                        }
                      ],
                      "count": 55
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["FBS"]
        }
      },
      "/v3/posting/fbs/list": {
        "post": {
          "summary": "Список отправлений (версия 3)",
          "description": "Возвращает список отправлений за указанный период времени — он должен быть не больше одного года.\n\nДополнительно можно отфильтровать отправления по их статусу — список доступных для выдачи статусов указан в описании параметра `filter.status`.\n\n`has_next = true` в ответе может значить, что вернули не весь массив отправлений. Чтобы получить информацию об остальных отправлениях, сделайте новый запрос с другим значением `offset`.\n",
          "operationId": "PostingAPI_GetFbsPostingListV3",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/postingv3GetFbsPostingListRequest"
                },
                "example": {
                  "dir": "ASC",
                  "filter": {
                    "since": "2021-11-01T00:00:00.000Z",
                    "status": "awaiting_packaging",
                    "to": "2021-12-01T23:59:59.000Z"
                  },
                  "limit": 100,
                  "offset": 0,
                  "translit": true,
                  "with": {
                    "analytics_data": true,
                    "financial_data": true
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Список отправлений",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v3GetFbsPostingListResponseV3"
                  },
                  "example": {
                    "result": {
                      "postings": [
                        {
                          "posting_number": "05708065-0029-1",
                          "order_id": 680420041,
                          "order_number": "05708065-0029",
                          "status": "awaiting_deliver",
                          "substatus": "posting_awaiting_passport_data",
                          "delivery_method": {
                            "id": 21321684811000,
                            "name": "Ozon Логистика самостоятельно, Красногорск",
                            "warehouse_id": 21321684811000,
                            "warehouse": "Стим Тойс Нахабино",
                            "tpl_provider_id": 24,
                            "tpl_provider": "Ozon Логистика"
                          },
                          "tracking_number": "",
                          "tpl_integration_type": "ozon",
                          "in_process_at": "2022-05-13T07:07:32Z",
                          "shipment_date": "2022-05-13T10:00:00Z",
                          "delivering_date": null,
                          "cancellation": {
                            "cancel_reason_id": 0,
                            "cancel_reason": "",
                            "cancellation_type": "",
                            "cancelled_after_ship": false,
                            "affect_cancellation_rating": false,
                            "cancellation_initiator": ""
                          },
                          "customer": null,
                          "products": [
                            {
                              "price": "1390.000000",
                              "currency_code": "RUB",
                              "offer_id": "205953",
                              "name": " Электронный конструктор PinLab Позитроник",
                              "sku": 358924380,
                              "quantity": 1,
                              "mandatory_mark": []
                            }
                          ],
                          "addressee": null,
                          "barcodes": null,
                          "analytics_data": null,
                          "financial_data": null,
                          "is_express": false,
                          "requirements": {
                            "products_requiring_gtd": [],
                            "products_requiring_country": [],
                            "products_requiring_mandatory_mark": []
                          }
                        }
                      ],
                      "has_next": true
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["FBS"]
        }
      },
      "/v3/posting/fbs/get": {
        "post": {
          "summary": "Получить информацию об отправлении по идентификатору",
          "description": null,
          "operationId": "PostingAPI_GetFbsPostingV3",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/postingv3GetFbsPostingRequest"
                },
                "example": {
                  "posting_number": "57195475-0050-3",
                  "with": {
                    "analytics_data": false,
                    "barcodes": false,
                    "financial_data": false,
                    "product_exemplars": false,
                    "translit": false
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Информация об отправлении",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v3GetFbsPostingResponseV3"
                  },
                  "example": {
                    "result": {
                      "posting_number": "57195475-0050-3",
                      "order_id": 438764970,
                      "order_number": "57195475-0050",
                      "status": "awaiting_packaging",
                      "substatus": "posting_awaiting_passport_data",
                      "delivery_method": {
                        "id": 18114520187000,
                        "name": "Ozon Логистика самостоятельно, Москва",
                        "warehouse_id": 18114520187000,
                        "warehouse": "Москва основной",
                        "tpl_provider_id": 24,
                        "tpl_provider": "Ozon Логистика"
                      },
                      "tracking_number": "",
                      "tpl_integration_type": "ozon",
                      "in_process_at": "2021-11-20T09:14:16Z",
                      "shipment_date": "2021-11-23T10:00:00Z",
                      "delivering_date": null,
                      "provider_status": "",
                      "delivery_price": "",
                      "cancellation": {
                        "cancel_reason_id": 0,
                        "cancel_reason": "",
                        "cancellation_type": "",
                        "cancelled_after_ship": false,
                        "affect_cancellation_rating": false,
                        "cancellation_initiator": ""
                      },
                      "customer": null,
                      "addressee": null,
                      "products": [
                        {
                          "currency_code": "RUB",
                          "price": "279.0000",
                          "offer_id": "250-7898-1",
                          "name": "Кофе ароматизированный \"Шоколадный апельсин\" 250 гр",
                          "sku": 180550365,
                          "quantity": 1,
                          "mandatory_mark": [],
                          "dimensions": {
                            "height": "40.00",
                            "length": "240.00",
                            "weight": "260",
                            "width": "140.00"
                          }
                        }
                      ],
                      "barcodes": null,
                      "analytics_data": null,
                      "financial_data": null,
                      "additional_data": [],
                      "is_express": false,
                      "requirements": {
                        "products_requiring_gtd": [],
                        "products_requiring_country": []
                      },
                      "product_exemplars": null
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["FBS"]
        }
      },
      "/v2/posting/fbs/get-by-barcode": {
        "post": {
          "summary": "Получить информацию об отправлении по штрихкоду",
          "operationId": "PostingAPI_GetFbsPostingByBarcode",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/postingGetFbsPostingByBarcodeRequest"
                },
                "example": {
                  "barcode": "20325804886000"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Информация об отправлении",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v2FbsPostingResponse"
                  },
                  "example": {
                    "result": {
                      "posting_number": "57195475-0050-3",
                      "order_id": 438764970,
                      "order_number": "57195475-0050",
                      "status": "awaiting_packaging",
                      "delivery_method": {
                        "id": 18114520187000,
                        "name": "Ozon Логистика самостоятельно, Москва",
                        "warehouse_id": 18114520187000,
                        "warehouse": "Москва основной",
                        "tpl_provider_id": 24,
                        "tpl_provider": "Ozon Логистика"
                      },
                      "tracking_number": "",
                      "tpl_integration_type": "ozon",
                      "in_process_at": "2021-11-20T09:14:16Z",
                      "shipment_date": "2021-11-23T10:00:00Z",
                      "delivering_date": null,
                      "provider_status": "",
                      "delivery_price": "",
                      "cancellation": {
                        "cancel_reason_id": 0,
                        "cancel_reason": "",
                        "cancellation_type": "",
                        "cancelled_after_ship": false,
                        "affect_cancellation_rating": false,
                        "cancellation_initiator": ""
                      },
                      "customer": null,
                      "addressee": null,
                      "products": [
                        {
                          "price": "279.0000",
                          "offer_id": "250-7898-1",
                          "name": "Кофе ароматизированный \"Шоколадный апельсин\" 250 гр",
                          "sku": 180550365,
                          "quantity": 1,
                          "mandatory_mark": [],
                          "dimensions": {
                            "height": "40.00",
                            "length": "240.00",
                            "weight": "260",
                            "width": "140.00"
                          }
                        }
                      ],
                      "barcodes": null,
                      "analytics_data": null,
                      "financial_data": null,
                      "additional_data": [],
                      "is_express": false,
                      "requirements": {
                        "products_requiring_gtd": [],
                        "products_requiring_country": []
                      },
                      "product_exemplars": null
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["FBS"]
        }
      },
      "/v2/posting/fbs/product/country/list": {
        "post": {
          "tags": ["FBS"],
          "summary": "Список доступных стран-изготовителей",
          "description": "Метод для получения списка доступных стран-изготовителей и их ISO кодов.",
          "operationId": "PostingAPI_ListCountryProductFbsPostingV2",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v2FbsPostingProductCountryListRequest"
                },
                "example": {
                  "name_search": ""
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Список доступных стран-изготовителей",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v2FbsPostingProductCountryListResponse"
                  },
                  "example": {
                    "result": [
                      {
                        "name": "Алжир",
                        "country_iso_code": "DZ"
                      },
                      {
                        "name": "Ангилья",
                        "country_iso_code": "AI"
                      },
                      {
                        "name": "Виргинские Острова (Великобритания)",
                        "country_iso_code": "VG"
                      }
                    ]
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/googlerpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v2/posting/fbs/product/country/set": {
        "post": {
          "tags": ["FBS"],
          "summary": "Добавить информацию о стране-изготовителе товара",
          "description": "Метод для добавления на продукт атрибута «Страна-изготовитель», если он не был указан.",
          "operationId": "PostingAPI_SetCountryProductFbsPostingV2",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v2FbsPostingProductCountrySetRequest"
                },
                "example": {
                  "country_iso_code": "NO",
                  "posting_number": "57195475-0050-3",
                  "product_id": 180550365
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Страна-изготовитель добавлена",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v2FbsPostingProductCountrySetResponse"
                  },
                  "example": {
                    "product_id": 180550365,
                    "is_gtd_needed": true
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/googlerpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v3/posting/multiboxqty/set": {
        "post": {
          "summary": "Указать количество коробок для многокоробочных отправлений",
          "description": "Метод для передачи количества коробок для отправлений, в которых есть многокоробочные товары.\n\nИспользуйте метод при работе по схеме rFBS Агрегатор — c доставкой партнёрами Ozon.\n",
          "operationId": "PostingAPI_PostingMultiBoxQtySetV3",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/postingv3PostingMultiBoxQtySetV3Request"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Количество коробок указано",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/postingv3PostingMultiBoxQtySetV3Response"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["FBS"]
        }
      },
      "/v1/posting/fbs/restrictions": {
        "post": {
          "tags": ["FBS"],
          "summary": "Получить ограничения пункта приёма",
          "description": "Метод для получения габаритных, весовых и прочих ограничений пункта приёма по номеру отправления. Метод применим только для работы по схеме FBS.",
          "operationId": "PostingAPI_GetRestrictions",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetRestrictionsRequest"
                },
                "example": {
                  "posting_number": "76673629-0020-1"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Ограничения пункта приёма",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1GetRestrictionsResponse"
                  },
                  "example": {
                    "result": {
                      "posting_number": "76673629-0020-1",
                      "max_posting_weight": 40000,
                      "min_posting_weight": 0,
                      "width": 500,
                      "height": 500,
                      "length": 500,
                      "max_posting_price": 500000,
                      "min_posting_price": 0
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v3/posting/fbs/ship": {
        "post": {
          "tags": ["FBS"],
          "summary": "Собрать заказ (версия 3)",
          "description": "Делит заказ на отправления и переводит его в статус `awaiting_deliver`.\n\nКаждый элемент в `packages` может содержать несколько элементов `products` или отправлений. \nКаждый элемент в `products` — это товар, включённый в данное отправление.\n\nРазделить заказ нужно, если:\n  - товары не помещаются в одну упаковку,\n  - товары нельзя сложить в одну упаковку.\n\nОтличается от [/v2/posting/fbs/ship](#operation/PostingAPI_ShipFbsPosting) наличием в запросе параметра\n`exemplar_info`.\n\nПри необходимости укажите номер грузовой таможенной декларации в параметре `gtd`. Если его нет, передайте значение `is_gtd_absent = true`.\n",
          "operationId": "PostingAPI_ShipFbsPostingV3",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v3FbsPostingShipRequest"
                },
                "example": {
                  "packages": [
                    {
                      "products": [
                        {
                          "exemplar_info": [
                            {
                              "gtd": "string",
                              "is_gtd_absent": true,
                              "mandatory_mark": "string"
                            }
                          ],
                          "product_id": 247511971,
                          "quantity": 1
                        }
                      ]
                    }
                  ],
                  "posting_number": "57195475-0050-3",
                  "with": {
                    "additional_data": true
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Заказ собран",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v3FbsPostingShipResponse"
                  },
                  "example": {
                    "result": ["57195475-0050-3"]
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v3/posting/fbs/ship/package": {
        "post": {
          "tags": ["FBS"],
          "summary": "Частичная сборка отправления",
          "description": "Если в запросе передать часть продуктов из отправления, то в результате обработки запроса первичное отправление\nразделится на две части. В первичном несобранном отправлении останется часть продуктов, которую не передали\nв запросе.\n\nСтатус изначального отправления изменится только после изменения статуса отправлений, на которые он разделился.\n",
          "operationId": "PostingAPI_PackageShipFbsPostingV3",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v3FbsPostingShipByPackageRequest"
                },
                "example": {
                  "posting_number": "48173252-0034-4",
                  "products": [
                    {
                      "exemplar_info": [
                        {
                          "gtd": "string",
                          "is_gtd_absent": true,
                          "mandatory_mark": "string"
                        }
                      ],
                      "product_id": 247508873,
                      "quantity": 1
                    }
                  ]
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Отправление собрано",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v3FbsPostingShipResponse"
                  },
                  "example": {
                    "result": ["48173252-0034-9"]
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v2/posting/fbs/act/create": {
        "post": {
          "summary": "Создать акт и накладную",
          "description": "Запускает формирование передаточных документов: акта приёма-передачи и транспортной накладной.\n\nЧтобы сформировать и получить передаточные документы, переведите отправление в статус `awaiting_deliver`.\n",
          "operationId": "PostingAPI_PostingFBSActCreate",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/postingPostingFBSActCreateRequest"
                },
                "example": {
                  "containers_count": 1,
                  "delivery_method_id": 230039077005,
                  "departure_date": "2022-06-10T11:42:06.444Z"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Создан акт и накладная",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/postingPostingFBSActCreateResponse"
                  },
                  "example": {
                    "result": {
                      "id": 5819327210249
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["FBS"]
        }
      },
      "/v2/posting/fbs/act/check-status": {
        "post": {
          "summary": "Статус акта и накладной",
          "description": "Если вы не подключены к электронному документообороту (ЭДО), в ответе вернётся статус формирования акта приёма-передачи и транспортной накладной.\n\nЕсли вы подключены к ЭДО, в ответе вернётся только статус формирования транспортной накладной.\n",
          "operationId": "PostingAPI_PostingFBSActCheckStatus",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/postingPostingFBSActCheckStatusRequest"
                },
                "example": {
                  "id": 900000250859000
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Статус акта и накладной",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/postingPostingFBSActCheckStatusResponse"
                  },
                  "example": {
                    "result": {
                      "added_to_act": ["true"],
                      "removed_from_act": ["false"],
                      "status": "ready"
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["FBS"]
        }
      },
      "/v1/posting/carriage-available/list": {
        "post": {
          "summary": "Список доступных перевозок",
          "description": "Метод для получения перевозок, для которых нужно распечатать акт приёма-передачи и транспортную накладную.",
          "operationId": "PostingAPI_GetCarriageAvailableList",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/postingv1GetCarriageAvailableListRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Список перевозок",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/postingv1GetCarriageAvailableListResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["FBS"]
        }
      },
      "/v2/posting/fbs/act/get-pdf": {
        "post": {
          "summary": "Получить акт и накладную",
          "description": "Получить сформированные передаточные документы в формате PDF: акт приёма-передачи и транспортную накладную.\n\nЕсли вы не подключены к электронному документообороту (ЭДО), в ответе вернутся акт приёма-передачи и транспортная накладная.\n\nЕсли вы подключены к ЭДО, в ответе вернётся только транспортная накладная.\n",
          "operationId": "PostingAPI_PostingFBSGetAct",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/postingPostingFBSGetActRequest"
                },
                "example": {
                  "id": 22435521842000
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Акт приёма-передачи и накладная",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/postingPostingFBSGetActResponse"
                  },
                  "example": {
                    "content": "https://cdn1.ozone.ru/s3/multimedia-p/6088931545.pdf",
                    "name": "act-test",
                    "type": ""
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["FBS"]
        }
      },
      "/v2/posting/fbs/digital/act/check-status": {
        "post": {
          "summary": "Статус электронных акта и накладной",
          "description": "<aside class=\"warning\">\nМетод доступен только для продавцов, которые подключены к электронному документообороту.\n</aside>\n \nПолучение статуса формирования электронных акта приёма-передачи и транспортной накладной.\n",
          "operationId": "PostingAPI_PostingFBSDigitalActCheckStatus",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v2PostingFBSDigitalActCheckStatusRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Статус формирования акта и накладной",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v2PostingFBSDigitalActCheckStatusResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["FBS"]
        }
      },
      "/v2/posting/fbs/digital/act/get-pdf": {
        "post": {
          "summary": "Получить электронный акт по перевозке",
          "description": "<aside class=\"warning\">\nМетод доступен только для продавцов, которые подключены к электронному документообороту.\n</aside>\n    \nВы можете получить электронные документы, если в ответе метода [/v2/posting/fbs/digital/act/check-status](#operation/PostingAPI_PostingFBSDigitalActCheckStatus) был один из статусов:\n- `FORMED` — акт сформирован успешно,\n- `CONFIRMED` — акт подписан Ozon,\n- `CONFIRMED_WITH_MISMATCH` — акт подписан Ozon с расхождениями.\n",
          "operationId": "PostingAPI_PostingFBSGetDigitalAct",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v2PostingFBSGetDigitalActRequest"
                },
                "example": {
                  "id": 900000250859000,
                  "doc_type": "act_of_acceptance"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Электронный акт",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v2PostingFBSGetDigitalActResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["FBS"]
        }
      },
      "/v2/posting/fbs/package-label": {
        "post": {
          "summary": "Напечатать этикетку",
          "description": "\n<aside class=\"warning\">Если вы работаете по схеме rFBS, этикетки для отправлений печатать не нужно.</aside>\n\nГенерирует PDF-файл с этикетками для указанных отправлений. В одном запросе можно передать не больше 20 идентификаторов. Если хотя бы для одного отправления возникнет ошибка, этикетки не будут подготовлены для всех отправлений в запросе.\n\nРекомендуем запрашивать этикетки через 45–60 секунд после сборки заказа.\n\nОшибка `The next postings aren't ready` означает, что этикетки ещё не готовы, повторите запрос позднее.\n",
          "operationId": "PostingAPI_PostingFBSPackageLabel",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/postingPostingFBSPackageLabelRequest"
                },
                "example": {
                  "posting_number": ["48173252-0034-4"]
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Маркировка напечатана",
              "content": {
                "application/pdf": {
                  "schema": {
                    "$ref": "#/components/schemas/postingPostingFBSPackageLabelResponse"
                  },
                  "example": {
                    "content": "https://cdn.ozone.ru/s3/ozon-disk-api/techdoc/seller-api/response_1667385650.pdf"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["FBS"]
        }
      },
      "/v1/posting/fbs/package-label/create": {
        "post": {
          "summary": "Создать задание на выгрузку этикеток",
          "description": "Метод для создания задания на асинхронное формирование этикеток.\n\nДля получения этикеток, созданных в результате вызова метода, используйте [/v1/posting/fbs/package-label/get](#operation/PostingAPI_GetLabelBatch).\n",
          "operationId": "PostingAPI_CreateLabelBatch",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1CreateLabelBatchRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Идентификатор задания на формирование этикеток",
              "content": {
                "application/pdf": {
                  "schema": {
                    "$ref": "#/components/schemas/v1CreateLabelBatchResponse"
                  },
                  "example": {
                    "result": {
                      "id": 5819327210249
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["FBS"]
        }
      },
      "/v1/posting/fbs/package-label/get": {
        "post": {
          "summary": "Получить файл с этикетками",
          "description": "Метод для получения этикеток после вызова [/v1/posting/fbs/package-label/create](#operation/PostingAPI_CreateLabelBatch).",
          "operationId": "PostingAPI_GetLabelBatch",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetLabelBatchRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Статус формирования этикеток или файл с ними",
              "content": {
                "application/pdf": {
                  "schema": {
                    "$ref": "#/components/schemas/v1GetLabelBatchResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["FBS"]
        }
      },
      "/v2/posting/fbs/act/get-container-labels": {
        "post": {
          "summary": "Этикетки для грузового места",
          "description": "Метод создает этикетки для грузового места.",
          "operationId": "PostingAPI_PostingFBSActGetContainerLabels",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/postingPostingFBSActGetContainerLabelsRequest"
                },
                "example": {
                  "id": 295662811
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Этикетки для грузового места",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/postingPostingFBSActGetContainerLabelsResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["FBS"]
        }
      },
      "/v2/posting/fbs/arbitration": {
        "post": {
          "summary": "Открыть спор по отправлению",
          "description": "Если отправление передано в доставку, но не просканировано в сортировочном центре, можно открыть спор. Открытый спор переведёт отправление в статус `arbitration`.",
          "operationId": "PostingAPI_MoveFbsPostingToArbitration",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/postingMovePostingRequest"
                },
                "example": {
                  "posting_number": ["33920143-1195-1"]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Открыт спор по отправлению",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/postingBooleanResponse"
                  },
                  "example": {
                    "result": true
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["FBS"]
        }
      },
      "/v2/posting/fbs/awaiting-delivery": {
        "post": {
          "summary": "Передать отправление к отгрузке",
          "description": "Передает спорные заказы к отгрузке. Статус отправления изменится на `awaiting_deliver`.",
          "operationId": "PostingAPI_MoveFbsPostingToAwaitingDelivery",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/postingMovePostingRequest"
                },
                "example": {
                  "posting_number": ["33920143-1195-1"]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Отправление передано к отгрузке",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/postingBooleanResponse"
                  },
                  "example": {
                    "result": true
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["FBS"]
        }
      },
      "/v1/posting/fbs/cancel-reason": {
        "post": {
          "summary": "Причины отмены отправления",
          "description": "Возвращает список причин отмены для конкретных отправлений.",
          "operationId": "PostingAPI_GetPostingFbsCancelReasonV1",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/postingCancelReasonRequest"
                },
                "example": {
                  "related_posting_numbers": ["73837363-0010-3"]
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Причины отмены отправлений",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/postingCancelReasonResponse"
                  },
                  "example": {
                    "result": [
                      {
                        "posting_number": "73837363-0010-3",
                        "reasons": [
                          {
                            "id": 352,
                            "title": "Товар закончился на складе продавца",
                            "type_id": "seller"
                          },
                          {
                            "id": 400,
                            "title": "Остался только бракованный товар",
                            "type_id": "seller"
                          },
                          {
                            "id": 402,
                            "title": "Другое (вина продавца)",
                            "type_id": "seller"
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["FBS"]
        }
      },
      "/v2/posting/fbs/cancel-reason/list": {
        "post": {
          "summary": "Причины отмены отправлений",
          "description": "Возвращает список причин отмены для всех отправлений.",
          "operationId": "PostingAPI_GetPostingFbsCancelReasonList",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "responses": {
            "200": {
              "description": "Причины отмены отправлений",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/postingCancelReasonListResponse"
                  },
                  "example": {
                    "result": [
                      {
                        "id": 352,
                        "title": "Товар закончился на складе продавца",
                        "type_id": "seller",
                        "is_available_for_cancellation": true
                      },
                      {
                        "id": 400,
                        "title": "Остался только бракованный товар",
                        "type_id": "seller",
                        "is_available_for_cancellation": true
                      },
                      {
                        "id": 401,
                        "title": "Продавец отклонил арбитраж",
                        "type_id": "seller",
                        "is_available_for_cancellation": false
                      },
                      {
                        "id": 402,
                        "title": "Другое (вина продавца)",
                        "type_id": "seller",
                        "is_available_for_cancellation": true
                      },
                      {
                        "id": 665,
                        "title": "Покупатель не забрал заказ",
                        "type_id": "seller",
                        "is_available_for_cancellation": false
                      },
                      {
                        "id": 666,
                        "title": "Возврат из службы доставки: нет доставки в указанный регион",
                        "type_id": "seller",
                        "is_available_for_cancellation": false
                      },
                      {
                        "id": 667,
                        "title": "Заказ утерян службой доставки",
                        "type_id": "seller",
                        "is_available_for_cancellation": false
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["FBS"]
        }
      },
      "/v2/posting/fbs/cancel": {
        "post": {
          "summary": "Отменить отправление",
          "description": "Меняет статус отправления на `cancelled`.\n\nЕсли вы используете схему rFBS, у вас доступны следующие идентификаторы причин отмены — `cancel_reason_id`:\n\n- `352` — товара нет в наличии;\n- `400` — остался только бракованный товар;\n- `401` — отмена из арбитража;\n- `402` — другая причина;\n- `665` — покупатель не забрал заказ;\n- `666` — отсутствует доставка в данный регион;\n- `667` — заказ утерян службой доставки.\n\nДля условно-доставленных заказов доступны только 3 последние причины.\n\nЕсли значение параметра `cancel_reason_id` — 402, заполните поле `cancel_reason_message`.\n",
          "operationId": "PostingAPI_CancelFbsPosting",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/postingCancelFbsPostingRequest"
                },
                "example": {
                  "cancel_reason_id": 352,
                  "cancel_reason_message": "Product is out of stock",
                  "posting_number": "33920113-1231-1"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Отправление отменено",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/postingBooleanResponse"
                  },
                  "example": {
                    "result": true
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["FBS"]
        }
      },
      "/v2/posting/fbs/product/change": {
        "post": {
          "summary": "Добавить вес для весовых товаров в отправлении",
          "operationId": "PostingAPI_ChangeFbsPostingProduct",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/postingPostingProductChangeRequest"
                },
                "example": {
                  "items": [
                    {
                      "sku": 1231428352,
                      "weightReal": [0.3]
                    }
                  ],
                  "posting_number": "33920158-0006-1"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Данные добавлены",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/postingPostingProductChangeResponse"
                  },
                  "example": {
                    "result": "33920158-0006-1"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["FBS"]
        }
      },
      "/v2/posting/fbs/product/cancel": {
        "post": {
          "summary": "Отменить отправку некоторых товаров в отправлении",
          "description": "Используйте метод, если вы не можете отправить часть продуктов из отправления.\n\nИдентификаторы причин отмены `cancel_reason_id` при работе по схеме rFBS:\n\n- `352` — товара нет в наличии;\n- `400` — остался только бракованный товар;\n- `401` — отмена из арбитража;\n- `402` — другая причина;\n- `665` — покупатель не забрал заказ;\n- `666` — нет доставки в этот регион;\n- `667` — заказ утерян службой доставки.\n\nДля условно-доставленных заказов доступны только 3 последние причины.\n\nЕсли значение параметра `cancel_reason_id` — 402, заполните поле `cancel_reason_message`.\n",
          "operationId": "PostingAPI_CancelFbsPostingProduct",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/postingPostingProductCancelRequest"
                },
                "example": {
                  "cancel_reason_id": 352,
                  "cancel_reason_message": "Product is out of stock",
                  "items": [
                    {
                      "quantity": 5,
                      "sku": 150587396
                    }
                  ],
                  "posting_number": "33920113-1231-1"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Отправка отменена",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/postingPostingProductCancelResponse"
                  },
                  "example": {
                    "result": ""
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["FBS"]
        }
      },
      "/v2/posting/fbs/act/list": {
        "post": {
          "summary": "Список актов по отгрузкам",
          "description": "Возвращает список актов по отгрузкам с возможностью отфильтровать отгрузки по периоду, статусу и типу интеграции.",
          "operationId": "PostingAPI_FbsActList",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v2PostingFBSActListRequest"
                },
                "example": {
                  "filter": {
                    "date_from": "2021-08-04",
                    "date_to": "2022-08-04",
                    "integration_type": "ozon",
                    "status": ["delivered"]
                  },
                  "limit": 100
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Список актов",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v2PostingFBSActListResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["FBS"]
        }
      },
      "/v2/posting/fbs/digital/act/document-sign": {
        "post": {
          "summary": "Подписать документы по отгрузке",
          "description": "Подписывает документы по отгрузке в системе электронных документов Ozon логистики.",
          "operationId": "PostingAPI_DigitalActDocumentSign",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v2PostingFBSDigitalActDocumentSignRequest"
                },
                "example": {
                  "id": 900000250859000,
                  "doc_type": "act_of_mismatch"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Результат подписания",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v2PostingFBSDigitalActDocumentSignResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["FBS"]
        }
      },
      "/v2/posting/fbs/act/get-postings": {
        "post": {
          "summary": "Список отправлений в акте",
          "description": "Возвращает список отправлений в акте по его идентификатору.",
          "operationId": "PostingAPI_ActPostingList",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v2PostingFBSActGetPostingsRequest"
                },
                "example": {
                  "id": 900000250859000
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Список отправлений",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v2PostingFBSActGetPostingsResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["FBS"]
        }
      },
      "/v2/fbs/posting/delivering": {
        "post": {
          "summary": "Изменить статус на «Доставляется»",
          "description": "Перевести отправление в статус «Доставляется», если используется сторонняя служба доставки.",
          "operationId": "PostingAPI_FbsPostingDelivering",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/postingFbsPostingDeliveringRequest"
                },
                "example": {
                  "posting_number": ["33920157-0018-1"]
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Статус изменён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/postingFbsPostingMoveStatusResponse"
                  },
                  "example": {
                    "result": [
                      {
                        "error": [],
                        "posting_number": "33920157-0018-1",
                        "result": true
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["FBS"]
        }
      },
      "/v2/fbs/posting/tracking-number/set": {
        "post": {
          "summary": "Добавить трек-номера",
          "description": "Добавить трек-номера к отправлениям.",
          "operationId": "PostingAPI_FbsPostingTrackingNumberSet",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/postingFbsPostingTrackingNumberSetRequest"
                },
                "example": {
                  "tracking_numbers": [
                    {
                      "posting_number": "48173252-0033-2",
                      "tracking_number": "123123123"
                    }
                  ]
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Трек-номер добавлен",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/postingFbsPostingMoveStatusResponse"
                  },
                  "example": {
                    "result": [
                      {
                        "error": "",
                        "posting_number": "48173252-0033-2",
                        "result": true
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["FBS"]
        }
      },
      "/v2/fbs/posting/last-mile": {
        "post": {
          "summary": "Изменить статус на «Последняя миля»",
          "description": "Перевести отправление в статус «Последняя миля», если используется сторонняя служба доставки.",
          "operationId": "PostingAPI_FbsPostingLastMile",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/postingFbsPostingLastMileRequest"
                },
                "example": {
                  "posting_number": ["48173252-0033-2"]
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Статус изменён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/postingFbsPostingMoveStatusResponse"
                  },
                  "example": {
                    "result": [
                      {
                        "error": [],
                        "posting_number": "48173252-0033-2",
                        "result": true
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Invalid parameter",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Access denied",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Response not found",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Request conflict",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["FBS"]
        }
      },
      "/v2/fbs/posting/delivered": {
        "post": {
          "summary": "Изменить статус на «Доставлено»",
          "description": "Перевести отправление в статус «Доставлено», если используется сторонняя служба доставки.",
          "operationId": "PostingAPI_FbsPostingDelivered",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/postingFbsPostingDeliveredRequest"
                },
                "example": {
                  "posting_number": ["48173252-0033-2"]
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Статус изменён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/postingFbsPostingMoveStatusResponse"
                  },
                  "example": {
                    "result": [
                      {
                        "error": [],
                        "posting_number": "48173252-0033-2",
                        "result": true
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["FBS"]
        }
      },
      "/v2/fbs/posting/sent-by-seller": {
        "post": {
          "summary": "Изменить статус на «Отправлено продавцом»",
          "description": "Перевести отправление в статус «Отправлено продавцом». Статус доступен только продавцам с первой милей, продающим из-за рубежа.",
          "operationId": "PostingAPI_FbsPostingSentbyseller",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/postingFbsPostingSentbysellerRequest"
                },
                "example": {
                  "posting_number": ["47173252-0073-1"]
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Статус изменён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/postingFbsPostingSentbysellerResponse"
                  },
                  "example": {
                    "result": [
                      {
                        "error": null,
                        "posting_number": "47173252-0073-1",
                        "result": true
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["FBS"]
        }
      },
      "/v1/posting/fbs/timeslot/change-restrictions": {
        "post": {
          "summary": "Доступные даты для переноса доставки",
          "description": "Метод для получения доступных дат для переноса доставки и количества доступных переносов.\n",
          "operationId": "PostingAPI_PostingTimeslotChangeRestrictions",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1PostingFbsTimeslotChangeRestrictionsRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Доступные даты и количество",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1PostingFbsTimeslotChangeRestrictionsResponse"
                  },
                  "example": {
                    "delivery_interval": {
                      "begin": "2023-03-27T08:43:05.658Z",
                      "end": "2023-03-27T08:43:05.658Z"
                    },
                    "remaining_changes_count": 0
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["FBS"]
        }
      },
      "/v1/posting/fbs/timeslot/set": {
        "post": {
          "summary": "Перенести дату доставки",
          "description": "Вы можете изменить дату доставки отправления не больше двух раз.\n",
          "operationId": "PostingAPI_SetPostingTimeslot",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1PostingFbsTimeslotSetRequest"
                },
                "example": {
                  "new_timeslot": {
                    "from": "2023-03-27T09:03:15.347Z",
                    "to": "2023-03-27T09:03:15.347Z"
                  },
                  "posting_number": "string"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Результат запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1PostingFbsTimeslotSetResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["FBS"]
        }
      },
      "/v1/posting/global/etgb": {
        "post": {
          "tags": ["FBS"],
          "summary": "Таможенные декларации ETGB",
          "description": "Метод для получения таможенных деклараций Elektronik Ticaret Gümrük Beyannamesi (ETGB) для продавцов из Турции.\n",
          "operationId": "PostingAPI_GetEtgb",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetEtgbRequest"
                },
                "example": {
                  "date": {
                    "from": "2023-02-13T12:13:16.818Z",
                    "to": "2023-02-13T12:13:16.818Z"
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Информация о декларациях",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1GetEtgbResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v2/returns/company/fbo": {
        "post": {
          "summary": "Получить информацию о возвратах FBO (версия 2)",
          "deprecated": true,
          "description": "<aside class=\"warning\">\n  1 апреля 2023 года мы отключим этот метод. Переключитесь на метод \n  <a href=\"#operation/ReturnsAPI_GetReturnsCompanyFbo\">/v3/returns/company/fbo</a>.\n</aside>\n\nМетод для получения информации о возвращённых товарах, которые продаются со склада Ozon.\n",
          "operationId": "ReturnsAPI_GetReturnsCompanyFboV2",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/returnsGetReturnsCompanyFboRequest"
                },
                "example": {
                  "filter": {
                    "posting_number": "39921187-0037-1",
                    "status": []
                  },
                  "limit": 100,
                  "offset": 0
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Информация о возвратах",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/returnsGetReturnsCompanyFboResponse"
                  },
                  "example": {
                    "returns": [
                      {
                        "id": 17841396265070,
                        "sku": 148959940,
                        "company_id": 1,
                        "posting_number": "38922187-0017-1",
                        "accepted_from_customer_moment": "2020-01-21T11:15:19.917Z",
                        "return_reason_name": "6.1. Была попытка доставить: изменил решение о покупке",
                        "is_opened": true,
                        "status_name": "Получен в Ozon",
                        "returned_to_ozon_moment": "2020-04-04T07:37:25.660Z",
                        "current_place_name": "",
                        "dst_place_name": "ЕКАТЕРИНБУРГ_РФЦ"
                      }
                    ],
                    "count": 1
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["ReturnsAPI"]
        }
      },
      "/v3/returns/company/fbo": {
        "post": {
          "tags": ["ReturnsAPI"],
          "summary": "Получить информацию о возвратах FBO (версия 3)",
          "description": "Метод для получения информации о возвращённых товарах, которые продаются со склада Ozon.",
          "operationId": "ReturnsAPI_GetReturnsCompanyFbo",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v3GetReturnsCompanyFboV3Request"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Информация о возвратах FBO",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v3GetReturnsCompanyFboV3Response"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v2/returns/company/fbs": {
        "post": {
          "summary": "Получить информацию о возвратах FBS (версия 2)",
          "deprecated": true,
          "description": "Метод для получения информации о возвращённых товарах, которые продаются со склада продавца.\n<aside class=\"warning\">\n1 апреля 2023 года мы отключим этот метод. Переключитесь на метод \n<a href=\"#operation/ReturnsAPI_GetReturnsCompanyFBSv3\">/v3/returns/company/fbs</a>.\n</aside>\n",
          "operationId": "ReturnsAPI_GetReturnsCompanyFBS",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/returnsGetReturnsCompanyFBSRequest"
                },
                "example": {
                  "filter": {
                    "posting_number": ["07402477-0022-2"],
                    "status": "returned_to_seller"
                  },
                  "limit": 1000,
                  "offset": 0
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Информация о возвратах",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/returnsGetReturnsCompanyFBSResponse"
                  },
                  "example": {
                    "result": {
                      "returns": [
                        {
                          "id": 19166541735000,
                          "clearing_id": 19166541725000,
                          "posting_number": "07402477-0022-2",
                          "product_id": 172423678,
                          "sku": 172423678,
                          "status": "returned_to_seller",
                          "returns_keeping_cost": 0,
                          "return_reason_name": "5.12 Заказ более не актуален: долгие сроки доставки",
                          "return_date": "2020-08-12T17:27:50+00:00",
                          "quantity": 1,
                          "product_name": "Кофе ароматизированный \"Лесной орех\" 250 гр",
                          "price": 294,
                          "waiting_for_seller_date_time": "2020-08-16T02:50:35+00:00",
                          "returned_to_seller_date_time": "2020-08-21T10:07:13+00:00",
                          "last_free_waiting_day": "2020-08-19T23:59:59+00:00",
                          "is_opened": false,
                          "place_id": 0,
                          "commission_percent": 0,
                          "commission": 0,
                          "price_without_commission": 0,
                          "is_moving": false,
                          "moving_to_place_name": "МОСКВА_ХАБ",
                          "waiting_for_seller_days": 2,
                          "picking_amount": null,
                          "accepted_from_customer_moment": null,
                          "picking_tag": null
                        }
                      ],
                      "count": 1
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["ReturnsAPI"]
        }
      },
      "/v3/returns/company/fbs": {
        "post": {
          "tags": ["ReturnsAPI"],
          "summary": "Получить информацию о возвратах FBS (версия 3)",
          "description": "Метод для получения информации о возвращённых товарах, которые продаются со склада продавца.",
          "operationId": "ReturnsAPI_GetReturnsCompanyFBSv3",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v3GetReturnsCompanyFbsV3Request"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Информация о возвратах",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v3GetReturnsCompanyFbsV3Response"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/conditional-cancellation/get": {
        "post": {
          "summary": "Получить информацию о заявке на отмену rFBS",
          "description": "Метод для получения информации о заявке на отмену rFBS-заказа.",
          "operationId": "CancellationAPI_GetConditionalCancellation",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetConditionalCancellationRequest"
                },
                "example": {
                  "cancellation_id": 90066344
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Информация о заявке на отмену",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1GetConditionalCancellationResponse"
                  },
                  "example": {
                    "result": {
                      "cancellation_id": 90066344,
                      "posting_number": "47134289-0029-1",
                      "cancellation_reason": {
                        "id": 508,
                        "name": "Покупатель отменил заказ"
                      },
                      "cancelled_at": "2022-04-07T06:37:26.871105Z",
                      "cancellation_reason_message": "Изменение пункта выдачи заказа.",
                      "tpl_integration_type": "ThirdPartyTracking",
                      "state": {
                        "id": 2,
                        "name": "Подтверждена",
                        "state": "APPROVED"
                      },
                      "cancellation_initiator": "CLIENT",
                      "order_date": "2022-04-06T17:17:24.517Z",
                      "approve_comment": "",
                      "approve_date": "2022-04-07T07:52:45.971824Z",
                      "auto_approve_date": "2022-04-09T06:37:26.871105Z"
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["CancellationAPI"]
        }
      },
      "/v1/conditional-cancellation/list": {
        "post": {
          "summary": "Получить список заявок на отмену rFBS",
          "description": "Метод для получения списка заявок на отмену rFBS-заказов.",
          "operationId": "CancellationAPI_GetConditionalCancellationList",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1GetConditionalCancellationListRequest"
                },
                "example": {
                  "filters": {
                    "cancellation_initiator": ["CLIENT"],
                    "posting_number": [],
                    "state": "ALL"
                  },
                  "limit": 2,
                  "offset": 0,
                  "with": {
                    "counters": true
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Список заявок на отмену",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1GetConditionalCancellationListResponse"
                  },
                  "example": {
                    "result": [
                      {
                        "cancellation_id": 50186754,
                        "posting_number": "41267064-0032-1",
                        "cancellation_reason": {
                          "id": 508,
                          "name": "Покупатель отменил заказ"
                        },
                        "cancelled_at": "2021-09-03T07:17:12.116114Z",
                        "cancellation_reason_message": "",
                        "tpl_integration_type": "ThirdPartyTracking",
                        "state": {
                          "id": 2,
                          "name": "Подтверждена",
                          "state": "APPROVED"
                        },
                        "cancellation_initiator": "CLIENT",
                        "order_date": "2021-09-03T07:04:53.220Z",
                        "approve_comment": "",
                        "approve_date": "2021-09-03T09:13:12.614200Z",
                        "auto_approve_date": "2021-09-06T07:17:12.116114Z"
                      },
                      {
                        "cancellation_id": 51956491,
                        "posting_number": "14094410-0018-1",
                        "cancellation_reason": {
                          "id": 507,
                          "name": "Покупатель передумал"
                        },
                        "cancelled_at": "2021-09-13T15:03:25.155827Z",
                        "cancellation_reason_message": "",
                        "tpl_integration_type": "ThirdPartyTracking",
                        "state": {
                          "id": 5,
                          "name": "Автоматически отменена",
                          "state": "REJECTED"
                        },
                        "cancellation_initiator": "CLIENT",
                        "order_date": "2021-09-13T07:48:50.143Z",
                        "approve_comment": "",
                        "approve_date": null,
                        "auto_approve_date": "2021-09-16T15:03:25.155827Z"
                      }
                    ],
                    "total": 19,
                    "counters": {
                      "on_approval": 0,
                      "approved": 14,
                      "rejected": 5
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["CancellationAPI"]
        }
      },
      "/v1/conditional-cancellation/approve": {
        "post": {
          "summary": "Подтвердить заявку на отмену rFBS",
          "description": "Метод позволяет согласовать заявку на отмену в статусе `ON_APPROVAL`. Метод применим для rFBS-заказов. Заказ будет отменён, а деньги вернутся покупателю.",
          "operationId": "CancellationAPI_ConditionalCancellationApprove",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ConditionalCancellationMoveRequest"
                },
                "example": {
                  "cancellation_id": 74393917
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Заявка подтверждена",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1Empty"
                  },
                  "example": {}
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["CancellationAPI"]
        }
      },
      "/v1/conditional-cancellation/reject": {
        "post": {
          "summary": "Отклонить заявку на отмену rFBS",
          "description": "Метод позволяет отклонить заявку на отмену в статусе `ON_APPROVAL`. Метод применим для rFBS-заказов. Объясните своё решение в параметре `comment`. \n\nЗаказ останется в том же статусе, и его нужно будет доставить покупателю.\n",
          "operationId": "CancellationAPI_ConditionalCancellationReject",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ConditionalCancellationMoveRequest"
                },
                "example": {
                  "cancellation_id": 52394916,
                  "comment": "Заявка на отмену отклоняется. Заказ будет доставлен в указанные сроки. При необходимости вы можете оформить возврат."
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Заявка отклонена",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1Empty"
                  },
                  "example": {}
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["CancellationAPI"]
        }
      },
      "/v1/chat/list": {
        "post": {
          "summary": "Список чатов",
          "description": "Возвращает информацию о чатах с указанными идентификаторами.\n\nВ ответе метода могут быть чаты с `last_message_id = 0` и без сообщений. Это происходит, когда покупатель открыл чат с продавцом, но ничего не написал.\n",
          "operationId": "ChatAPI_ChatList",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chatChatListRequest"
                },
                "example": {
                  "chat_id_list": ["83ef37bf-f13d-494c-a906-1e444d633d27"],
                  "page": 1,
                  "page_size": 10,
                  "with": {
                    "first_unread_message_id": true,
                    "unread_count": true
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Список чатов",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/chatChatListResponse"
                  },
                  "example": {
                    "result": [
                      {
                        "id": "83ef37bf-f13d-494c-a906-1e444d633d27",
                        "users": [
                          {
                            "id": "123",
                            "type": "seller"
                          },
                          {
                            "id": "71252940",
                            "type": "customer"
                          }
                        ],
                        "last_message_id": 3000000001834744300,
                        "unread_count": 0,
                        "first_unread_message_id": 0
                      }
                    ],
                    "total_unread_count": 0
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["ChatAPI"]
        }
      },
      "/v1/chat/send/message": {
        "post": {
          "summary": "Отправить сообщение",
          "description": "Отправляет сообщение в существующий чат по его идентификатору.",
          "operationId": "ChatAPI_ChatSendMessage",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chatChatSendMessageRequest"
                },
                "example": {
                  "chat_id": "99feb3fc-a474-469f-95d5-268b470cc607",
                  "text": "test"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Сообщение отправлено",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/chatChatSendMessageResponse"
                  },
                  "example": {
                    "result": "success"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["ChatAPI"]
        }
      },
      "/v1/chat/send/file": {
        "post": {
          "summary": "Отправить файл",
          "description": "Отправляет файл в существующий чат по его идентификатору.",
          "operationId": "ChatAPI_ChatSendFile",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chatChatSendFileRequest"
                },
                "example": {
                  "base64_content": "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAQAAAC1HAwCAAAAC0lEQVR42mNk+A8AAQUBAScY42YAAAAASUVORK5CYII=",
                  "chat_id": "99feb3fc-a474-469f-95d5-268b470cc607",
                  "name": "tempor"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Файл отправлен",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/chatChatSendFileResponse"
                  },
                  "example": {
                    "result": "success"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["ChatAPI"]
        }
      },
      "/v1/chat/history": {
        "post": {
          "summary": "История чата",
          "description": "Возвращает историю сообщений в чате.\n\nПо умолчанию сообщения показываются от старого к новому. Чтобы получить историю сообщений от самого нового сообщения до самого старого, используйте метод [/v1/chat/updates](#operation/ChatAPI_ChatUpdates). У методов [/v1/chat/history](#operation/ChatAPI_ChatHistory) и [/v1/chat/updates](#operation/ChatAPI_ChatUpdates) одинаковая структура запроса и ответа.\n",
          "operationId": "ChatAPI_ChatHistory",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chatChatHistoryRequest"
                },
                "example": {
                  "chat_id": "99feb3fc-a474-469f-95d5-268b470cc607",
                  "from_message_id": 0,
                  "limit": 1000
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "История чата",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/chatChatHistoryResponse"
                  },
                  "example": {
                    "result": [
                      {
                        "id": 3000000000012735500,
                        "user": {
                          "id": "15",
                          "type": "seller"
                        },
                        "type": "file",
                        "text": "",
                        "file": {
                          "url": "https://cdn-stg.ozonru.me/s3/fs-chat-api/108a0370-4dfa-11ec-bd02-06a332735108.png",
                          "mime": "image/png",
                          "size": 68,
                          "name": "tempor"
                        },
                        "created_at": "2021-11-25T14:14:55Z",
                        "context": null
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["ChatAPI"]
        }
      },
      "/v1/chat/updates": {
        "post": {
          "summary": "Обновить чат",
          "operationId": "ChatAPI_ChatUpdates",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chatChatUpdatesRequest"
                },
                "example": {
                  "chat_id": "99feb3fc-a474-469f-95d5-268b470cc607",
                  "from_message_id": 0,
                  "limit": 1000
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Чат обновлён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/chatChatUpdatesResponse"
                  },
                  "example": {
                    "result": [
                      {
                        "id": 3000000000012735500,
                        "user": {
                          "id": "15",
                          "type": "seller"
                        },
                        "type": "file",
                        "text": "",
                        "file": {
                          "url": "https://cdn-stg.ozonru.me/s3/fs-chat-api/108a0370-4dfa-11ec-bd02-06a332735108.png",
                          "mime": "image/png",
                          "size": 68,
                          "name": "tempor"
                        },
                        "created_at": "2021-11-25T14:14:55Z",
                        "context": null
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["ChatAPI"]
        }
      },
      "/v1/chat/start": {
        "post": {
          "summary": "Создать новый чат",
          "description": "Создает новый чат с покупателем по отправлению. Например, чтобы уточнить адрес или модель товара.",
          "operationId": "ChatAPI_ChatStart",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chatChatStartRequest"
                },
                "example": {
                  "posting_number": "47873153-0052-1"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Создан новый чат",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/chatChatStartResponse"
                  },
                  "example": {
                    "result": {
                      "chat_id": "5969c331-2e64-44b7-8a0e-ff9526762c62"
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["ChatAPI"]
        }
      },
      "/v2/chat/list": {
        "post": {
          "summary": "Список чатов",
          "description": "Возвращает информацию о чатах по указанным фильтрам.",
          "operationId": "ChatAPI_ChatListV2",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatList"
                },
                "example": {
                  "filter": {
                    "chat_status": "Opened",
                    "unread_only": true
                  },
                  "limit": 1,
                  "offset": 0
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Список чатов",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v2ChatListResponse"
                  },
                  "example": {
                    "chats": [
                      {
                        "chat": {
                          "created_at": "2022-07-22T08:07:19.581Z",
                          "chat_id": "5e767w03-b400-4y1b-a841-75319ca8a5c8",
                          "chat_status": "Opened",
                          "chat_type": "Seller_Support"
                        },
                        "first_unread_message_id": "3000000000118021931",
                        "last_message_id": "30000000001280042740",
                        "unread_count": 1
                      }
                    ],
                    "total_chats_count": 25,
                    "total_unread_count": 5
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["ChatAPI"]
        }
      },
      "/v2/chat/history": {
        "post": {
          "summary": "История чата",
          "operationId": "ChatAPI_ChatHistoryV2",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatHistory"
                },
                "example": {
                  "chat_id": "18b8e1f9-4ae7-461c-84ea-8e1f54d1a45e",
                  "direction": "Forward",
                  "from_message_id": 3000000000118032000,
                  "limit": 1
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "История чата",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v2ChatHistoryResponse"
                  },
                  "example": {
                    "has_next": true,
                    "messages": [
                      {
                        "message_id": "3000000000817031942",
                        "user": {
                          "id": "115568",
                          "type": "Сustomer"
                        },
                        "created_at": "2022-07-18T20:58:04.528Z",
                        "is_read": true,
                        "data": [
                          "Здравствуйте, у меня вопрос по вашему товару \"Стекло защитное для смартфонов\", артикул 11223. Подойдет ли он на данную [ модель ](https://www.ozon.ru/product/smartfon-samsung-galaxy-a03s-4-64-gb-chernyy) телефона?"
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["ChatAPI"]
        }
      },
      "/v2/chat/read": {
        "post": {
          "summary": "Отметить сообщения как прочитанные",
          "description": "Метод для отметки выбранного сообщения и сообщений до него прочитанными.",
          "operationId": "ChatAPI_ChatReadV2",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatRead"
                },
                "example": {
                  "chat_id": "99feb3fc-a474-469f-95d5-268b470cc607",
                  "from_message_id": 3000000000118032000
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Успешно",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v2ChatReadResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["ChatAPI"]
        }
      },
      "/v1/invoice/create-or-update": {
        "post": {
          "summary": "Создать или изменить ссылку на счёт-проформу",
          "description": "Создание или изменение ссылки на таможенную счёт-проформу для возврата НДС продавцам из Турции.",
          "operationId": "invoice_create",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1InvoiceCreateOrUpdateRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Ссылка создана или изменена",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1InvoiceCreateOrUpdateResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["SupplierAPI"]
        }
      },
      "/v1/invoice/get": {
        "post": {
          "summary": "Получить ссылку на счёт-проформу",
          "description": null,
          "operationId": "invoice_get",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1InvoiceGetRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Ссылка на счёт-проформу",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1InvoiceGetResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["SupplierAPI"]
        }
      },
      "/v1/invoice/delete": {
        "post": {
          "summary": "Удалить ссылку на счёт-проформу",
          "description": null,
          "operationId": "invoice_delete",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1InvoiceDeleteRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Ссылка удалена",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1InvoiceDeleteResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["SupplierAPI"]
        }
      },
      "/v1/report/info": {
        "post": {
          "summary": "Информация об отчёте",
          "description": "Возвращает информацию о созданном ранее отчёте по его идентификатору.",
          "operationId": "ReportAPI_ReportInfo",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reportReportInfoRequest"
                },
                "example": {
                  "code": "257bf213-ca57-405c-8edf-41d2ce22decf"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Информация об отчёте",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/reportReportInfoResponse"
                  },
                  "example": {
                    "result": {
                      "code": "257bf213-ca57-405c-8edf-41d2ce22decf",
                      "status": "success",
                      "error": "",
                      "file": "https://storage.yandexcloud.net/ozon.reports/95/c1/95c1ae93320294cb.csv",
                      "report_type": "seller_products",
                      "params": {},
                      "created_at": "2021-11-25T14:54:55.688260Z"
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["ReportAPI"]
        }
      },
      "/v1/report/list": {
        "post": {
          "summary": "Список отчётов",
          "description": "Возвращает список отчётов, которые были сформированы раньше.",
          "operationId": "ReportAPI_ReportList",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reportReportListRequest"
                },
                "example": {
                  "page": 0,
                  "page_size": 1000,
                  "report_type": "ALL"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Список отчётов",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/reportReportListResponse"
                  },
                  "example": {
                    "result": {
                      "reports": [
                        {
                          "code": "cd3f2c76-2b9a-4e77-a5a9-7ab52678b3bf",
                          "status": "success",
                          "error": "",
                          "file": "https://minio-production.s3.s.o3.ru:8000/sc-temporary/89/0e/890ef6e360a6396f.csv",
                          "report_type": "seller_products",
                          "params": {
                            "visibility": "3"
                          },
                          "created_at": "2019-02-06T12:09:47.258062Z"
                        },
                        {
                          "code": "c39f5fe4-c00b-4e95-a487-6ad34c1e34a3",
                          "status": "success",
                          "error": "",
                          "file": "https://minio-production.s3.s.o3.ru:8000/reports/a7/48/a7481a083873e164.csv",
                          "report_type": "seller_products",
                          "params": {
                            "visibility": "3"
                          },
                          "created_at": "2019-02-15T08:34:32.267178Z"
                        }
                      ],
                      "total": 2
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["ReportAPI"]
        }
      },
      "/v1/report/products/create": {
        "post": {
          "summary": "Отчёт по товарам",
          "description": "Метод для получения отчёта с данными о товарах. Например, Ozon ID, количества товаров, цен, статуса.\n\nПояснения к некоторым полям:\n  - __Ozon Product ID__ — идентификатор товара в нашей системе. Например, если вы продаёте товар со склада Ozon и со своего склада, Ozon Product ID будет для них одинаковым.\n  - __FBO Ozon SKU ID__ — идентификатор товара, который продаётся со склада Ozon.\n  - __FBS Ozon SKU ID__ — идентификатор товара, который продаётся с вашего склада.\n  - __CrossBorder Ozon SKU__ — идентификатор товара, который продаётся из-за границы.\n  - __Barcode__ — штрихкод товара, который печатается на маркировке.\n  - __Статус товара__ — можно ли купить товар на Ozon. Если статус «Готов к продаже», товар купить нельзя.\n  - __Доступно на складе Ozon, шт__ — сколько штук товара на складе доступно для продажи. Это количество не включает зарезервированные товары.\n  - __Зарезервировано, шт__ — сколько штук товара со статусом «Зарезервировано». Товар зарезервирован с момента получения заказа на Ozon и до упаковки для передачи покупателю.\n  - __Текущая цена с учётом скидки, руб.__ — цена, по которой товар продаётся сейчас (на момент загрузки отчёта, с учётом скидки). Если товар участвует в акции, указана цена без её учёта.\n  - __Базовая цена (цена до скидок), руб.__ — цена без учёта скидки.\n  - __Цена Premium, руб.__ — цена для покупателей с подпиской Ozon Premium.\n  - __Рекомендованная цена, руб.__ — минимальная цена на товар на другой торговой площадке.\n  - __Актуальная ссылка на рекомендованную цену__ — ссылка на товар с рекомендованной ценой на другой торговой площадке.\n",
          "operationId": "ReportAPI_CreateCompanyProductsReport",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reportCreateCompanyProductsReportRequest"
                },
                "example": {
                  "language": "DEFAULT",
                  "offer_id": [],
                  "search": "",
                  "sku": [],
                  "visibility": "ALL"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Отчёт по товарам",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/reportCreateReportResponse"
                  },
                  "example": {
                    "result": {
                      "code": "d55f4517-8347-4e24-9d93-d6e736c1c07c"
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["ReportAPI"]
        }
      },
      "/v1/report/transactions/create": {
        "post": {
          "summary": "Отчёт по транзакциям",
          "description": "<aside class=\"warning\">С 30 сентября 2022 года метод будет отключён. Для получения информации о транзакциях используйте метод <a href=\"#operation/FinanceAPI_FinanceTransactionListV3\">/v3/finance/transaction/list</a>.</aside>\n\nОтчёт по транзакциям с информацией о начислениях за выбранный период:\n - дата и тип начисления,\n - идентификатор отправления или услуги,\n - детали по отправлению или услуге,\n - сумма, полученная за продажу или удержанная за возврат,\n - комиссия за продажу,\n - сумма, удержанная за обработку и доставку,\n - сумма, удержанная за возврат и отмену,\n - общая сумма.\n",
          "operationId": "ReportAPI_CreateCompanyTransactionsReport",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reportCreateCompanyTransactionsReportRequest"
                },
                "example": {
                  "date_from": "2021-08-04T23:59:59Z",
                  "date_to": "2021-11-19T00:00:01Z",
                  "transaction_type": "ALL"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Отчёт по транзакциям",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/reportCreateReportResponse"
                  },
                  "example": {
                    "result": {
                      "code": "d55f4517-8347-4e24-9d93-d6e736c1c07c"
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["ReportAPI"]
        }
      },
      "/v1/report/products/prices/create": {
        "post": {
          "summary": "Отчёт по ценам",
          "description": "<aside class=\"warning\">С 30 сентября 2022 года метод будет отключён. Для получения информации о ценах используйте метод <a href=\"#operation/ProductAPI_GetProductInfoPricesV4\">/v4/product/info/prices</a>.</aside>\n\nОтчёт по товарам, который содержит:\n  - цены,\n  - комиссии,\n  - информацию о скидках,\n  - рыночную цену на товар,\n  - информацию об участии в акциях.\n",
          "operationId": "ReportAPI_CreateCompanyProductsPricesReport",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reportCreateCompanyProductsPricesReportRequest"
                },
                "example": {
                  "language": "DEFAULT",
                  "offer_id": [],
                  "search": "",
                  "sku": [],
                  "visibility": "ALL"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Отчёт по ценам",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/reportCreateReportResponse"
                  },
                  "example": {
                    "result": {
                      "code": "d55f4517-8347-4e24-9d93-d6e736c1c07c"
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["ReportAPI"]
        }
      },
      "/v1/report/stock/create": {
        "post": {
          "summary": "Отчёт об остатках",
          "description": "Отчёт с информацией о количестве доступных и зарезервированных единиц товара на складе.",
          "operationId": "ReportAPI_CreateCompanyStockReport",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reportCreateCompanyStockReportRequest"
                },
                "example": {
                  "language": "DEFAULT"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Отчёт об остатках",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/reportCreateReportResponse"
                  },
                  "example": {
                    "result": {
                      "code": "d55f4517-8347-4e24-9d93-d6e736c1c07c"
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["ReportAPI"]
        }
      },
      "/v1/report/products/movement/create": {
        "post": {
          "summary": "Отчёт о перемещении товаров",
          "description": "Отчёт с полной информацией по товарам, а также количество единиц товара со статусами:\n  - товары с браком или на инвентаризации,\n  - товары в перемещении между фулфилмент-центрами,\n  - товары в доставке,\t\n  - товары, подлежащие реализации.\n",
          "operationId": "ReportAPI_CreateProductsMovementReport",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reportCreateProductsMovementReportRequest"
                },
                "example": {
                  "date_from": "2020-08-01T14:15:22Z",
                  "date_to": "2021-08-01T14:15:22Z",
                  "language": "DEFAULT"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Отчёт о перемещении товаров",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/reportCreateReportResponse"
                  },
                  "example": {
                    "result": {
                      "code": "h56f4917-1346-4e64-9d90-с6e736c1e07c"
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["ReportAPI"]
        }
      },
      "/v1/report/returns/create": {
        "post": {
          "summary": "Отчёт о возвратах",
          "description": "Отчёт содержит информацию о возвращённых товарах, которые приняты от покупателя, готовы к получению или переданы продавцу.\n\nМетод подходит только для заказов, которые отправлены со склада продавца.\n\nПояснения к некоторым полям в отчёте:\n  - __ID товара в возврате__ — идентификатор товара в возврате.\n  - __ID отправления__ — идентификатор отправления в нашей системе.\n  - __Статус__ — статус возврата.\n  - __Артикул товара__ — ваш артикул товара.\n  - __Ozon ID__ — идентификатор товара в нашей системе.\n  - __Причина возврата__ — почему заказ пришлось вернуть или почему от него отказался покупатель.\n  - __Стоимость размещения__ — стоимость размещения возврата в пункте выдачи.\n  - __Переход в «Готов к получению»__ — дата, с которой возврат находится в пункте выдачи.\n  - __Последний день бесплатного размещения__ — последний день, когда возврат размещается в пункте выдачи бесплатно. Со следующего дня размещение становится платным. Подробнее о стоимости размещения в [Базе знаний продавца](https://seller-edu.ozon.ru/docs/prices/fees/kak-schitat-stoimost-razmechenia.html).\n  - __Дата возврата продавцу__ — когда возврат передали вам.\n  - __Местоположение__ — название пункта выдачи, в котором находится возврат.\n  - __Отправление вскрыто__ — если до возвращения заказа покупатель вскрыл его упаковку, в строке будет указано «Да».\n  - __Процент комиссии__ — ставка комиссии за продажу товара в процентах. Фиксируется в момент создания заказа покупателем. Подробнее о комиссиях в [Базе знаний продавца](https://seller-edu.ozon.ru/docs/prices/fees/comissions-tariffs.html#комиссии-за-продажу).\n  - __Комиссия (руб.)__ — комиссия Ozon за продажу товара в рублях, рассчитывается от цены товара.\n  - __Цена без комиссии (руб.)__ — стоимость товара за вычетом комиссии: Цена без комиссии = Стоимость товара − Комиссия.\n\nСтатусы возвратов:\n  - __В пути__ — покупатель передал нам возврат с товарами, которые ему не подошли.\n  - __В пункте выдачи__ — возврат прибыл в пункт выдачи, откуда вы можете его забрать. Пункт выдачи указан в столбце «Местоположение».\n  - __Получен__ — возврат передали вам.\n",
          "operationId": "ReportAPI_CreateCompanyReturnsReport",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reportCreateCompanyReturnsReportRequest"
                },
                "example": {
                  "filter": {
                    "delivery_schema": "fbs",
                    "order_id": 0,
                    "status": ""
                  },
                  "language": "DEFAULT"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Отчёт о возвратах",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/reportCreateReportResponse"
                  },
                  "example": {
                    "result": {
                      "code": "d55f4517-8347-4e24-9d93-d6e736c1c07c"
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["ReportAPI"]
        }
      },
      "/v1/report/postings/create": {
        "post": {
          "summary": "Отчёт об отправлениях",
          "description": "Отчёт об отправлениях с информацией по заказам:\n  - статусы заказов,\n  - дата начала обработки,\n  - номера заказов,\n  - номера отправлений,\n  - стоимость отправлений,\n  - содержимое отправлений.\n",
          "operationId": "ReportAPI_CreateCompanyPostingsReport",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reportCreateCompanyPostingsReportRequest"
                },
                "example": {
                  "filter": {
                    "processed_at_from": "2021-09-02T17:10:54.861Z",
                    "processed_at_to": "2021-11-02T17:10:54.861Z",
                    "delivery_schema": ["fbs", "fbo", "crossborder"],
                    "sku": [],
                    "cancel_reason_id": [],
                    "offer_id": "",
                    "status_alias": [],
                    "statuses": [],
                    "title": ""
                  },
                  "language": "DEFAULT"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Отчёт об отправлениях",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/reportCreateReportResponse"
                  },
                  "example": {
                    "result": {
                      "code": "d55f4517-8347-4e24-9d93-d6e736c1c07c"
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["ReportAPI"]
        }
      },
      "/v1/report/finance/create": {
        "post": {
          "summary": "Отчёт о финансах",
          "description": "<aside class=\"warning\">С 30 сентября 2022 года метод будет отключён. Для получения информации о финансах используйте метод <a href=\"#operation/FinanceAPI_FinanceCashFlowStatementList\">/v1/finance/cash-flow-statement/list</a>.</aside>\n\nОтчёт по финансам за выбранный период с информацией о балансе на начало и конец периода. Отчёт содержит:\n  -\tсумма, полученная за доставленные заказы;\n  -\tсумма комиссии за доставленные заказы;\n  -\tсумма за возвращённые товары;\n  -\tсумма, возвращённая за возвраты;\n  -\tсумма оплаты за услуги.\n",
          "operationId": "ReportAPI_CreateCompanyFinanceReport",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reportCreateCompanyFinanceReportRequest"
                },
                "example": {
                  "date_from": "2021-08-06",
                  "date_to": "2022-09-03",
                  "language": "DEFAULT"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Отчёт о финансах",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/reportCreateReportResponse"
                  },
                  "example": {
                    "result": {
                      "code": "d55f4517-8347-4e24-9d93-d6e736c1c07c"
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["ReportAPI"]
        }
      },
      "/v1/finance/cash-flow-statement/list": {
        "post": {
          "summary": "Финансовый отчёт",
          "operationId": "FinanceAPI_FinanceCashFlowStatementList",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v3FinanceCashFlowStatementListRequest"
                },
                "example": {
                  "date": {
                    "from": "2022-01-01T00:00:00.000Z",
                    "to": "2022-12-31T00:00:00.000Z"
                  },
                  "with_details": true,
                  "page": 1,
                  "page_size": 1
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Финансовый отчёт",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v3FinanceCashFlowStatementListResponse"
                  },
                  "example": {
                    "result": {
                      "cash_flows": [
                        {
                          "commission_amount": 1437,
                          "currency_code": "string",
                          "item_delivery_and_return_amount": 1991,
                          "orders_amount": 1000,
                          "period": {
                            "begin": "2023-04-03T09:12:10.239Z",
                            "end": "2023-04-03T09:12:10.239Z",
                            "id": 11567022278500
                          },
                          "returns_amount": -3000,
                          "services_amount": 8471.28
                        }
                      ],
                      "details": {
                        "period": {
                          "begin": "2023-04-03T09:12:10.239Z",
                          "end": "2023-04-03T09:12:10.239Z",
                          "id": 11567022278500
                        },
                        "payments": [
                          {
                            "payment": 0,
                            "currency_code": "string"
                          }
                        ],
                        "begin_balance_amount": 0,
                        "delivery": {
                          "total": 0,
                          "amount": 0,
                          "delivery_services": {
                            "total": 0,
                            "items": [
                              {
                                "name": "string",
                                "price": 0
                              }
                            ]
                          }
                        },
                        "return": {
                          "total": 0,
                          "amount": 0,
                          "return_services": {
                            "total": 0,
                            "items": [
                              {
                                "name": "string",
                                "price": 0
                              }
                            ]
                          }
                        },
                        "loan": 0,
                        "invoice_transfer": 0,
                        "rfbs": {
                          "total": 0,
                          "transfer_delivery": 0,
                          "transfer_delivery_return": 0,
                          "compensation_delivery_return": 0,
                          "partial_compensation": 0,
                          "partial_compensation_return": 0
                        },
                        "services": {
                          "total": 0,
                          "items": [
                            {
                              "name": "string",
                              "price": 0
                            }
                          ]
                        },
                        "others": {
                          "total": 0,
                          "items": [
                            {
                              "name": "string",
                              "price": 0
                            }
                          ]
                        },
                        "end_balance_amount": 0
                      }
                    },
                    "page_count": 15
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["ReportAPI"]
        }
      },
      "/v1/report/discounted/create": {
        "post": {
          "summary": "Выпуск отчёта об уценённых товарах",
          "description": "Запускает генерацию отчёта по уценённым товарам на складе Ozon.\nOzon может сам уценить товар, например, при повреждении.\n\nВ результате запроса будет не сам отчёт, а его уникальный идентификатор. \nЧтобы получить отчёт, отправьте идентификатор в запросе метода [/v1/report/discounted/info](#operation/ReportAPI_DiscountedReportInfo).\n",
          "operationId": "ReportAPI_CreateDiscountedReport",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reportCreateDiscountedRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Результат запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/reportCreateDiscountedResponse"
                  },
                  "example": {
                    "code": "d55f4517-8347-4e24-9d93-d6e736c1c07c"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["ReportAPI"]
        }
      },
      "/v1/report/discounted/info": {
        "post": {
          "summary": "Отчёт об уценённых товарах",
          "description": "Возвращает информацию о созданном ранее отчёте по его идентификатору.",
          "operationId": "ReportAPI_DiscountedReportInfo",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reportDiscountedInfoRequest"
                },
                "example": {
                  "code": "d55f4517-8347-4e24-9d93-d6e736c1c07c"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Результат запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/reportDiscountedInfoResponse"
                  },
                  "example": {
                    "report": {
                      "created_at": "2022-10-04T10:07:08.146Z",
                      "error": "string",
                      "file": "string",
                      "status": "string"
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["ReportAPI"]
        }
      },
      "/v1/report/discounted/list": {
        "post": {
          "summary": "Список отчётов об уценённых товарах",
          "description": "Возвращает список отчётов, которые были сформированы раньше.",
          "operationId": "ReportAPI_DiscountedReportList",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reportDiscountedListRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Результат запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/reportDiscountedListResponse"
                  },
                  "example": {
                    "reports": [
                      {
                        "created_at": "2022-10-04T10:07:08.146Z",
                        "error": "string",
                        "file": "string",
                        "status": "string"
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["ReportAPI"]
        }
      },
      "/v1/analytics/data": {
        "post": {
          "summary": "Данные аналитики",
          "description": "Уĸажите период и метриĸи, ĸоторые нужно посчитать — в ответе будет аналитиĸа, сгруппированная по параметру `dimensions`.",
          "operationId": "AnalyticsAPI_AnalyticsGetData",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/analyticsAnalyticsGetDataRequest"
                },
                "example": {
                  "date_from": "2020-09-01",
                  "date_to": "2021-10-15",
                  "metrics": ["hits_view_search"],
                  "dimension": ["sku", "day"],
                  "filters": [],
                  "sort": [
                    {
                      "key": "hits_view_search",
                      "order": "DESC"
                    }
                  ],
                  "limit": 1000,
                  "offset": 0
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Данные аналитики",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/analyticsAnalyticsGetDataResponse"
                  },
                  "example": {
                    "result": {
                      "data": [],
                      "totals": [0]
                    },
                    "timestamp": "2021-11-25 15:19:21"
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["AnalyticsAPI"]
        }
      },
      "/v1/analytics/stock_on_warehouses": {
        "post": {
          "summary": "Отчёт по остаткам и товарам",
          "description": "<aside class=\"warning\">\n  1 апреля 2023 года мы отключим этот метод. \n  Переключитесь на метод <a href=\"#operation/AnalyticsAPI_AnalyticsGetStockOnWarehousesV2\">/v2/analytics/stock_on_warehouses</a>.\n\n  Чтобы получить отчёт, запросите его в <a href=\"https://seller.ozon.ru/app/analytics/fulfillment-reports/stocks-and-movement-products-to-ozon-warehouses\">личном кабинете</a>.\n</aside>\n\nОтчёт по остаткам и товарам в перемещении по складам Ozon.\n",
          "operationId": "AnalyticsAPI_AnalyticsGetStockOnWarehouses",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/analyticsAnalyticsGetStockOnWarehousesRequest"
                },
                "example": {
                  "limit": 1000000,
                  "offset": 0
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Отчёт по остаткам и товарам",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/analyticsAnalyticsGetStockOnWarehousesResponse"
                  },
                  "example": {
                    "wh_items": [
                      {
                        "id": "chg",
                        "name": "Чёрная Грязь",
                        "items": [
                          {
                            "offer_id": "17047",
                            "sku": 146946913,
                            "title": "Держатель в автомобиль Dotfes F01 универсальный, black",
                            "category": "Держатель автомобильный для мобильных устройств",
                            "discounted": "Нет",
                            "barcode": "6970569471211",
                            "length": 15,
                            "width": 11,
                            "height": 6,
                            "volume": 0.99,
                            "weight": 62,
                            "stock": {
                              "not_for_sale": 0,
                              "loss": 0,
                              "for_sale": 0
                            }
                          },
                          {
                            "offer_id": "03151",
                            "sku": 147049701,
                            "title": "Автомобильное зарядное устройство Dotfes B01 2xUSB, 3.1A, black",
                            "category": "Зарядное устройство автомобильное",
                            "discounted": "Нет",
                            "barcode": "6970569470597",
                            "length": 17,
                            "width": 9,
                            "height": 4,
                            "volume": 0.61,
                            "weight": 50,
                            "stock": {
                              "not_for_sale": 0,
                              "loss": 0,
                              "for_sale": 0
                            }
                          }
                        ]
                      }
                    ],
                    "timestamp": "2021-11-25 15:25:07",
                    "total_items": []
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["AnalyticsAPI"]
        }
      },
      "/v1/analytics/item_turnover": {
        "post": {
          "summary": "Отчёт по оборачиваемости (FBO)",
          "description": "<aside class=\"warning\">\n  1 апреля 2023 года мы отключим этот метод. Новый метод в разработке — следите за обновлениями.\n\n  Чтобы получить отчёт, запросите его в <a href=\"https://seller.ozon.ru/app/analytics/fulfillment-reports/turnover\">личном кабинете</a>.\n</aside>\n\nМетод для получения отчёта по оборачиваемости (FBO) по категориям за 15 дней.\n",
          "operationId": "AnalyticsAPI_AnalyticsItemTurnoverDataV3",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1AnalyticsItemTurnoverDataV3Request"
                },
                "example": {
                  "date_from": "2021-09-01"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Отчёт по оборачиваемости",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1AnalyticsItemTurnoverDataV3Response"
                  },
                  "example": {
                    "date": "25.11.2021",
                    "period": "01.09.2021 - 14.09.2021",
                    "commission_total": 0.28728,
                    "categories": [
                      {
                        "category_id": 1,
                        "commission": 0,
                        "avg_stock_litres": -0.58,
                        "avg_sold_litres": 0.34,
                        "fee": 0,
                        "turnover": "-2",
                        "threshold_used": 0,
                        "threshold_free": 60,
                        "billed_days": 14,
                        "turnover_items": [
                          {
                            "offer_id": "17125",
                            "sku": 149618972,
                            "name": "Держатель в автомобиль Dotfes F02 Magnetic Car Air Vent универсальный, black",
                            "discounted": false,
                            "length": 13,
                            "width": 10,
                            "height": 2.9,
                            "volume": 0.377,
                            "turnover": "Нет продаж",
                            "threshold_free": 60,
                            "recommendation": "Ограничить поставки товара, распродавать или вывозить товар",
                            "item_commission_part": 0,
                            "avg_sold_litres": 0,
                            "avg_sold_items": 0,
                            "min_daily_sales": 0,
                            "avg_stock_litres": -0.3769999999999999,
                            "avg_stock_items": -1,
                            "avg_stock_items_free": 0,
                            "stock_items_total": 0
                          },
                          {
                            "offer_id": "17116",
                            "sku": 149756262,
                            "name": "Держатель в автомобиль Promate AirGrip-1 универсальный магнитный, black-red",
                            "discounted": false,
                            "length": 17.7,
                            "width": 12.2,
                            "height": 4,
                            "volume": 0.8637599999999999,
                            "turnover": "Нет продаж",
                            "threshold_free": 60,
                            "recommendation": "Ограничить поставки товара, распродавать или вывозить товар",
                            "item_commission_part": 0,
                            "avg_sold_litres": 0,
                            "avg_sold_items": 0,
                            "min_daily_sales": 0,
                            "avg_stock_litres": -0.8637600000000006,
                            "avg_stock_items": -1,
                            "avg_stock_items_free": 0,
                            "stock_items_total": 0
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["AnalyticsAPI"]
        }
      },
      "/v2/analytics/stock_on_warehouses": {
        "post": {
          "summary": "Отчёт по остаткам и товарам (версия 2)",
          "description": "Отчёт по остаткам и товарам в перемещении по складам Ozon.",
          "operationId": "AnalyticsAPI_AnalyticsGetStockOnWarehousesV2",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/analyticsStockOnWarehouseRequest"
                },
                "example": {
                  "limit": 1000,
                  "offset": 0,
                  "warehouse_type": "ALL"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Отчёт по остаткам и товарам",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/analyticsStockOnWarehouseResponse"
                  },
                  "example": {
                    "result": {
                      "rows": [
                        {
                          "free_to_sell_amount": 0,
                          "item_code": "string",
                          "item_name": "string",
                          "promised_amount": 0,
                          "reserved_amount": 0,
                          "sku": 0,
                          "warehouse_name": "string"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["AnalyticsAPI"]
        }
      },
      "/v1/finance/realization": {
        "post": {
          "summary": "Отчёт о реализации товаров",
          "description": "Отчёт о реализации доставленных и возвращённых товаров за месяц. Отмены и невыкупы не включаются.\n\nОтчёт придёт не позднее 5-го числа следующего месяца.\n\n[Подробнее об отчёте в Базе знаний продавца](https://seller-edu.ozon.ru/docs/finances-documents/calculations-documents/otchet-o-realizacii-tovarov.html)\n",
          "operationId": "FinanceAPI_GetRealizationReport",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/financeGetRealizationReportRequest"
                },
                "example": {
                  "date": "2022-09"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Отчёт о реализации",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/financeGetRealizationReportResponse"
                  },
                  "example": {
                    "result": {
                      "header": {
                        "doc_date": "2022-09-22",
                        "num": "string",
                        "start_date": "2022-09-02",
                        "stop_date": "2022-09-22",
                        "contract_date": "2022-09-02",
                        "contract_num": "string",
                        "payer_name": "string",
                        "payer_inn": "string",
                        "payer_kpp": "string",
                        "rcv_name": "string",
                        "rcv_inn": "string",
                        "rcv_kpp": "string",
                        "doc_amount": "string",
                        "vat_amount": "string",
                        "currency_code": "string"
                      },
                      "rows": [
                        {
                          "row_number": 0,
                          "product_id": 0,
                          "product_name": "string",
                          "offer_id": "string",
                          "barcode": "string",
                          "price": 0,
                          "commission_percent": 0,
                          "price_sale": 0,
                          "sale_qty": 0,
                          "sale_amount": 0,
                          "sale_discount": 0,
                          "sale_commission": 0,
                          "sale_price_seller": 0,
                          "return_sale": 0,
                          "return_qty": 0,
                          "return_amount": 0,
                          "return_discount": 0,
                          "return_commission": 0,
                          "return_price_seller": 0
                        }
                      ]
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["FinanceAPI"]
        }
      },
      "/v3/finance/transaction/list": {
        "post": {
          "summary": "Список транзакций (версия 3)",
          "description": "Возвращает подробную информацию по всем начислениям. Максимальный период, за который можно получить информацию в одном запросе — 1 месяц.\n\nЕсли в запросе не указывать `posting_number`, то в ответе будут все отправления за указанный период или отправления определённого типа.\n",
          "operationId": "FinanceAPI_FinanceTransactionListV3",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/financev3FinanceTransactionListV3Request"
                },
                "example": {
                  "filter": {
                    "date": {
                      "from": "2021-11-01T00:00:00.000Z",
                      "to": "2021-11-02T00:00:00.000Z"
                    },
                    "operation_type": [],
                    "posting_number": "",
                    "transaction_type": "all"
                  },
                  "page": 1,
                  "page_size": 1000
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Список транзакций",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/financev3FinanceTransactionListV3Response"
                  },
                  "example": {
                    "result": {
                      "operations": [
                        {
                          "operation_id": 11401182187840,
                          "operation_type": "MarketplaceMarketingActionCostOperation",
                          "operation_date": "2021-11-01 00:00:00",
                          "operation_type_name": "Услуги продвижения товаров",
                          "delivery_charge": 0,
                          "return_delivery_charge": 0,
                          "accruals_for_sale": 0,
                          "sale_commission": 0,
                          "amount": -6.46,
                          "type": "services",
                          "posting": {
                            "delivery_schema": "",
                            "order_date": "",
                            "posting_number": "",
                            "warehouse_id": 0
                          },
                          "items": [],
                          "services": []
                        }
                      ],
                      "page_count": 1,
                      "row_count": 355
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["FinanceAPI"]
        }
      },
      "/v3/finance/transaction/totals": {
        "post": {
          "summary": "Суммы транзакций",
          "description": "Возвращает итоговые суммы по транзакциям за указанный период.",
          "operationId": "FinanceAPI_FinanceTransactionTotalV3",
          "parameters": [
            {
              "$ref": "#/components/parameters/Client-Id"
            },
            {
              "$ref": "#/components/parameters/Api-Key"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/financev3FinanceTransactionTotalsV3Request"
                },
                "example": {
                  "date": {
                    "from": "2021-11-01T00:00:00.000Z",
                    "to": "2021-11-02T00:00:00.000Z"
                  },
                  "posting_number": "",
                  "transaction_type": "all"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Суммы транзакций",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/financev3FinanceTransactionTotalsV3Response"
                  },
                  "example": {
                    "result": {
                      "accruals_for_sale": 96647.58,
                      "sale_commission": -11456.65,
                      "processing_and_delivery": -24405.68,
                      "refunds_and_cancellations": -330,
                      "services_amount": -1307.57,
                      "compensation_amount": 0,
                      "money_transfer": 0,
                      "others_amount": 113.05
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Неверный параметр",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "403": {
              "description": "Доступ запрещён",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "404": {
              "description": "Ответ не найден",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "409": {
              "description": "Конфликт запроса",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            },
            "500": {
              "description": "Внутренняя ошибка сервера",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          },
          "tags": ["FinanceAPI"]
        }
      },
      "/v1/rating/summary": {
        "post": {
          "tags": ["SellerRating"],
          "summary": "Получить информацию о текущих рейтингах продавца",
          "operationId": "RatingAPI_RatingSummaryV1",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1Empty"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Информация о рейтингах",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1RatingSummaryV1Response"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/rating/history": {
        "post": {
          "tags": ["SellerRating"],
          "summary": "Получить информацию о рейтингах продавца за период",
          "operationId": "RatingAPI_RatingHistoryV1",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1RatingHistoryV1Request"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Информация о рейтингах",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/v1RatingHistoryV1Response"
                  }
                }
              }
            },
            "default": {
              "description": "Ошибка",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/rpcStatus"
                  }
                }
              }
            }
          }
        }
      }
    },
    "components": {
      "parameters": {
        "Client-Id": {
          "description": "Идентификатор клиента.",
          "in": "header",
          "name": "Client-Id",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        "Api-Key": {
          "description": "API-ключ.",
          "in": "header",
          "name": "Api-Key",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      },
      "schemas": {
        "categoryLanguage": {
          "default": "DEFAULT",
          "enum": ["DEFAULT", "RU", "EN", "TR", "ZH_HANS"],
          "title": "Language",
          "description": "<br>Язык в ответе:\n  - `EN` — английский,\n  - `RU` — русский,\n  - `TR` — турецкий,\n  - `ZH_HANS` — китайский.\n\nПо умолчанию используется русский язык.\n",
          "type": "string"
        },
        "categoryGetCategoryTreeRequest": {
          "properties": {
            "category_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор категории."
            },
            "language": {
              "$ref": "#/components/schemas/categoryLanguage"
            }
          },
          "title": "GetCategoryTree",
          "type": "object"
        },
        "GetCategoryTreeResponseItem": {
          "properties": {
            "category_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор категории."
            },
            "children": {
              "items": {
                "$ref": "#/components/schemas/GetCategoryTreeResponseItem"
              },
              "type": "array",
              "description": "Дерево подкатегорий."
            },
            "title": {
              "type": "string",
              "description": "Название категории."
            }
          },
          "type": "object"
        },
        "categoryGetCategoryTreeResponse": {
          "properties": {
            "result": {
              "items": {
                "$ref": "#/components/schemas/GetCategoryTreeResponseItem"
              },
              "type": "array",
              "description": "Список категорий."
            }
          },
          "type": "object"
        },
        "protobufAny": {
          "type": "object",
          "properties": {
            "typeUrl": {
              "type": "string",
              "description": "Тип протокола передачи данных."
            },
            "value": {
              "type": "string",
              "format": "byte",
              "description": "Значение ошибки."
            }
          }
        },
        "rpcStatus": {
          "type": "object",
          "properties": {
            "code": {
              "type": "integer",
              "format": "int32",
              "description": "Код ошибки."
            },
            "details": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/protobufAny"
              },
              "description": "Дополнительная информация об ошибке."
            },
            "message": {
              "type": "string",
              "description": "Описание ошибки."
            }
          }
        },
        "CategoryAttributesRequestAttributeType": {
          "default": "ALL",
          "enum": ["ALL", "REQUIRED", "OPTIONAL"],
          "type": "string",
          "description": "Фильтр по характеристикам:\n  - `ALL` — все характеристики,\n  - `REQUIRED` — обязательные,\n  - `OPTIONAL` — дополнительные.\n"
        },
        "categoryv3Language": {
          "default": "DEFAULT",
          "enum": ["DEFAULT", "RU", "EN", "TR"],
          "title": "Language",
          "type": "string",
          "description": "Язык в ответе:\n  - `EN` — английский,\n  - `RU` — русский,\n  - `TR` — турецкий.\n\nПо умолчанию используется русский язык.\n"
        },
        "categoryv3CategoryAttributesRequest": {
          "properties": {
            "attribute_type": {
              "$ref": "#/components/schemas/CategoryAttributesRequestAttributeType",
              "description": "Фильтр по характеристикам:\n  - `REQUIRED` — обязательная,\n  - `OPTIONAL` — дополнительная.\n"
            },
            "category_id": {
              "items": {
                "format": "int64",
                "type": "integer"
              },
              "type": "array",
              "description": "Идентификатор категории."
            },
            "language": {
              "$ref": "#/components/schemas/categoryv3Language"
            }
          },
          "type": "object"
        },
        "CategoryAttributesResponseAttribute": {
          "properties": {
            "category_dependent": {
              "type": "boolean",
              "description": "Признак, что значения словарного атрибута зависят от категории:\n- `true` — у атрибута разные значения для каждой категории.\n- `false` — у атрибута одинаковые значения для всех категорий.\n"
            },
            "description": {
              "type": "string",
              "description": "Описание характеристики."
            },
            "dictionary_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор справочника."
            },
            "group_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор группы характеристик."
            },
            "group_name": {
              "type": "string",
              "description": "Название группы характеристик."
            },
            "id": {
              "format": "int64",
              "type": "integer",
              "description": "Номер задания на формирование документов."
            },
            "is_aspect": {
              "type": "boolean",
              "description": "Признак аспектного атрибута. Аспектный атрибут — характеристика, по которой отличаются товары одной модели. \n\nНапример, у одежды и обуви одной модели могут быть разные расцветки и размеры. То есть цвет и размер — это аспектные атрибуты.\n\nЗначения поля:\n  - `true` — атрибут аспектный и его нельзя изменить после поставки товара на склад или продажи со своего склада.\n  - `false` — атрибут не аспектный, можно изменить в любое время.\n"
            },
            "is_collection": {
              "type": "boolean",
              "description": "Признак, что характеристика — набор значений:\n  - `true` — характеристика — набор значений,\n  - `false` — характеристика состоит из одного значения.\n"
            },
            "is_required": {
              "type": "boolean",
              "description": "Признак обязательной характеристики:\n  - `true` — обязательная характеристика,\n  - `false` — характеристику можно не указывать.\n"
            },
            "name": {
              "type": "string",
              "description": "Название."
            },
            "type": {
              "type": "string",
              "description": "Тип характеристики."
            }
          },
          "type": "object"
        },
        "CategoryAttributesResponseCategoryAttributes": {
          "properties": {
            "attributes": {
              "items": {
                "$ref": "#/components/schemas/CategoryAttributesResponseAttribute"
              },
              "type": "array",
              "description": "Массив характеристик товара."
            },
            "category_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор категории."
            }
          },
          "type": "object"
        },
        "categoryv3CategoryAttributesResponse": {
          "properties": {
            "result": {
              "items": {
                "$ref": "#/components/schemas/CategoryAttributesResponseCategoryAttributes"
              },
              "type": "array",
              "description": "Результат запроса."
            }
          },
          "type": "object"
        },
        "categoryv2Language": {
          "default": "DEFAULT",
          "enum": ["DEFAULT", "RU", "EN"],
          "title": "Language",
          "type": "string",
          "description": "<br>Язык в ответе:\n  - `EN` — английский,\n  - `RU` — русский.\n\nПо умолчанию используется русский язык.\n"
        },
        "categoryv2DictionaryValueBatchRequest": {
          "properties": {
            "attribute_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор характеристики."
            },
            "category_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор категории."
            },
            "language": {
              "$ref": "#/components/schemas/categoryv2Language",
              "description": "Язык в ответе:\n  - `EN` — английский,\n  - `RU` — русский.\nПо умолчанию используется русский язык.\n"
            },
            "last_value_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор справочника, с которого нужно начать ответ. Если `last_value_id` — 10, то в ответе будут справочники, начиная с одиннадцатого."
            },
            "limit": {
              "format": "int64",
              "type": "integer",
              "description": "Количество значений в ответе:\n  - максимум — 5000,\n  - минимум — 1.\n"
            }
          },
          "type": "object"
        },
        "categoryv2DictionaryValueBatchResponseDictionaryValue": {
          "properties": {
            "id": {
              "format": "int64",
              "type": "integer",
              "description": null
            },
            "info": {
              "type": "string",
              "description": null
            },
            "picture": {
              "type": "string",
              "description": null
            },
            "value": {
              "type": "string",
              "description": "Значение характеристики товара."
            }
          },
          "type": "object"
        },
        "categoryv2DictionaryValueBatchResponse": {
          "properties": {
            "has_next": {
              "type": "boolean"
            },
            "result": {
              "items": {
                "$ref": "#/components/schemas/categoryv2DictionaryValueBatchResponseDictionaryValue"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "productv2ImportProductsRequestDictionaryValue": {
          "properties": {
            "dictionary_value_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор справочника."
            },
            "value": {
              "type": "string",
              "description": "Значение из справочника."
            }
          },
          "type": "object"
        },
        "productv2ImportProductsRequestAttribute": {
          "properties": {
            "complex_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор характеристики, которая поддерживает вложенные свойства. Например, у характеристики «Процессор» есть вложенные характеристики «Производитель», «L2 Cache» и другие. У каждой из вложенных характеристик может быть несколько вариантов значений."
            },
            "id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор характеристики."
            },
            "values": {
              "items": {
                "$ref": "#/components/schemas/productv2ImportProductsRequestDictionaryValue"
              },
              "type": "array",
              "description": "Массив вложенных значений характеристики."
            }
          },
          "type": "object"
        },
        "productv2ImportProductsRequestComplexAttribute": {
          "properties": {
            "attributes": {
              "items": {
                "$ref": "#/components/schemas/productv2ImportProductsRequestAttribute"
              },
              "type": "array",
              "description": "Массив с характеристиками товара. Характеристики отличаются для разных категорий — их можно посмотреть в [Базе знаний продавца](https://seller-edu.ozon.ru/) или через [API](https://docs.ozon.ru/api/seller/)."
            }
          },
          "type": "object"
        },
        "v2ServiceType": {
          "default": "IS_CODE_SERVICE",
          "enum": null,
          "type": "string",
          "description": "Тип сервиса. Передайте одно из значений в верхнем регистре:\n  - `IS_CODE_SERVICE`,\n  - `IS_NO_CODE_SERVICE`.\n"
        },
        "ImportProductsRequestPdfList": {
          "properties": {
            "index": {
              "format": "int64",
              "type": "integer",
              "description": "Индекс документа в хранилище, который задаёт порядок."
            },
            "name": {
              "type": "string",
              "description": "Название файла."
            },
            "src_url": {
              "type": "string",
              "description": "Адрес файла."
            }
          },
          "type": "object"
        },
        "productv2ImportProductsRequestItem": {
          "properties": {
            "attributes": {
              "items": {
                "$ref": "#/components/schemas/productv2ImportProductsRequestAttribute"
              },
              "type": "array",
              "description": "Массив с характеристиками товара. Характеристики отличаются для разных категорий — их можно посмотреть в [Базе знаний продавца](https://seller-edu.ozon.ru/) или через [API](https://docs.ozon.ru/api/seller/)."
            },
            "barcode": {
              "type": "string",
              "description": "Штрихкод товара."
            },
            "category_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор категории."
            },
            "color_image": {
              "type": "string",
              "description": "Маркетинговый цвет.\n\nФормат: адрес ссылки на изображение в общедоступном облачном хранилище. Формат изображения по ссылке — JPG.\n"
            },
            "complex_attributes": {
              "items": {
                "$ref": "#/components/schemas/productv2ImportProductsRequestComplexAttribute"
              },
              "type": "array",
              "description": "Массив характеристик, у которых есть вложенные атрибуты."
            },
            "currency_code": {
              "type": "string",
              "description": "Валюта ваших цен. Переданное значение должно совпадать с валютой, которая установлена в настройках личного кабинета. По умолчанию передаётся `RUB` — российский рубль.\n\nНапример, если у вас установлена валюта взаиморасчётов юань, передавайте значение `CNY`, иначе вернётся ошибка.\n\nВозможные значения: \n  - `RUB` — российский рубль,\n  - `BYN` — белорусский рубль,\n  - `KZT` — тенге,\n  - `EUR` — евро,\n  - `USD` — доллар США,\n  - `CNY` — юань.\n"
            },
            "depth": {
              "format": "int32",
              "type": "integer",
              "description": "Глубина упаковки."
            },
            "dimension_unit": {
              "type": "string",
              "description": "Единица измерения габаритов:\n  - `mm` — миллиметры,\n  - `cm` — сантиметры,\n  - `in` — дюймы.\n"
            },
            "geo_names": {
              "items": {
                "type": "string"
              },
              "description": "Геоограничения. Передайте список, состоящий из `name`, полученных в ответе метода [/v1/products/geo-restrictions-catalog-by-filter](#operations/ProductAPI_GetGeoRestrictionsV1)."
            },
            "height": {
              "format": "int32",
              "type": "integer",
              "description": "Высота упаковки."
            },
            "images": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "Массив изображений. До 15 штук. Изображения показываются на сайте в таком же порядке, как в массиве.\n\nЕсли не передать значение `primary_image`, первое изображение в массиве будет главным для товара.\n\nЕсли вы передали значение `primary_image`, передайте до 14 изображений.\nЕсли параметр `primary_image` пустой, передайте до 15 изображений.\n\nФормат: адрес ссылки на изображение в общедоступном облачном хранилище. Формат изображения по ссылке — JPG или PNG.\n"
            },
            "primary_image": {
              "type": "string",
              "description": "Ссылка на главное изображение товара."
            },
            "service_type": {
              "$ref": "#/components/schemas/v2ServiceType"
            },
            "images360": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "Массив изображений 360. До 70 штук.\n\nФормат: адрес ссылки на изображение в общедоступном облачном хранилище. Формат изображения по ссылке — JPG.\n"
            },
            "name": {
              "type": "string",
              "description": "Название товара. До 500 символов."
            },
            "offer_id": {
              "type": "string",
              "description": "Идентификатор товара в системе продавца — артикул.\n\nМаксимальная длина строки — 50 символов.\n"
            },
            "old_price": {
              "type": "string",
              "description": "Цена до скидок (будет зачёркнута на карточке товара). Указывается в рублях. Разделитель дробной\nчасти — точка, до двух знаков после точки.\n\nЕсли вы раньше передавали `old_price`, то при обновлении `price` также обновите `old_price`.\n"
            },
            "pdf_list": {
              "items": {
                "$ref": "#/components/schemas/ImportProductsRequestPdfList"
              },
              "type": "array",
              "description": "Список PDF-файлов."
            },
            "premium_price": {
              "type": "string",
              "description": "Цена для клиентов с подпиской [Ozon Premium](https://docs.ozon.ru/common/ozon-premium/)."
            },
            "price": {
              "type": "string",
              "description": "Цена товара с учётом скидок, отображается на карточке товара. Если на товар нет скидок, укажите\nзначение `old_price` в этом параметре.\n"
            },
            "vat": {
              "type": "string",
              "description": "Ставка НДС для товара:\n  - `0` — не облагается НДС,\n  - `0.1` — 10%,\n  - `0.2` — 20%.\n"
            },
            "weight": {
              "format": "int32",
              "type": "integer",
              "description": "Вес товара в упаковке. Предельное значение — 1000 килограммов или конвертированная величина в других\nединицах измерения.\n"
            },
            "weight_unit": {
              "type": "string",
              "description": "Единица измерения веса:\n  - `g` — граммы,\n  - `kg` — килограммы,\n  - `lb` — фунты.\n"
            },
            "width": {
              "format": "int32",
              "type": "integer",
              "description": "Ширина упаковки."
            }
          },
          "type": "object",
          "required": [
            "attributes",
            "category_id",
            "depth",
            "dimension_unit",
            "height",
            "images",
            "name",
            "offer_id",
            "price",
            "vat",
            "weight",
            "weight_unit",
            "width"
          ]
        },
        "productv2ImportProductsRequest": {
          "properties": {
            "items": {
              "items": {
                "$ref": "#/components/schemas/productv2ImportProductsRequestItem"
              },
              "type": "array",
              "description": "Массив данных."
            }
          },
          "type": "object"
        },
        "productv2ImportProductsResponseResult": {
          "properties": {
            "task_id": {
              "format": "int64",
              "type": "integer",
              "description": "Номер задания на загрузку товаров."
            }
          },
          "type": "object",
          "description": "Результаты запроса."
        },
        "productv2ImportProductsResponse": {
          "properties": {
            "result": {
              "$ref": "#/components/schemas/productv2ImportProductsResponseResult"
            }
          },
          "type": "object"
        },
        "productGetImportProductsInfoRequest": {
          "properties": {
            "task_id": {
              "format": "int64",
              "type": "integer",
              "description": "Код задачи на импорт товаров."
            }
          },
          "type": "object"
        },
        "v1ItemError": {
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "description": "Код ошибки."
            },
            "message": {
              "type": "string",
              "description": "Техническое описание ошибки."
            },
            "state": {
              "type": "string",
              "description": "Состояние товара, в котором произошла ошибка."
            },
            "level": {
              "type": "string",
              "description": "Уровень ошибки."
            },
            "description": {
              "type": "string",
              "description": "Описание ошибки."
            },
            "field": {
              "type": "string",
              "description": "Поле, в котором произошла ошибка."
            },
            "attribute_id": {
              "type": "integer",
              "format": "int64",
              "description": "Атрибут, в котором произошла ошибка."
            },
            "attribute_name": {
              "type": "string",
              "description": "Название атрибута, в котором произошла ошибка."
            },
            "optional_description_elements": {
              "type": "object",
              "description": "Дополнительные поля для описания ошибки.",
              "additionalProperties": {
                "type": "string",
                "description": "Дополнительное поле для описания ошибки."
              }
            }
          }
        },
        "GetImportProductsInfoResponseResultItem": {
          "properties": {
            "offer_id": {
              "type": "string",
              "description": "Идентификатор товара в системе продавца — артикул.\n\nМаксимальная длина строки в значении поля — 50 символов.\n"
            },
            "product_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор товара."
            },
            "status": {
              "type": "string",
              "description": "Статус создания товара. Информация о товаре обрабатывается очередями.\nВозможные значения параметра:\n- `pending` — товар в очереди на обработку;\n- `imported` — товар успешно загружен;\n- `failed` — товар загружен с ошибками.\n"
            },
            "errors": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/v1ItemError"
              },
              "description": "Массив ошибок."
            }
          },
          "type": "object"
        },
        "productGetImportProductsInfoResponseResult": {
          "properties": {
            "items": {
              "items": {
                "$ref": "#/components/schemas/GetImportProductsInfoResponseResultItem"
              },
              "type": "array",
              "description": "Информация о товарах."
            },
            "total": {
              "format": "int32",
              "type": "integer",
              "description": "Идентификатор товара в системе продавца."
            }
          },
          "type": "object"
        },
        "productGetImportProductsInfoResponse": {
          "properties": {
            "result": {
              "$ref": "#/components/schemas/productGetImportProductsInfoResponseResult"
            }
          },
          "type": "object"
        },
        "productImportProductsBySKURequestItem": {
          "properties": {
            "name": {
              "type": "string",
              "description": "Название товара. До 500 символов."
            },
            "offer_id": {
              "type": "string",
              "description": "Идентификатор товара в системе продавца — артикул.\n\nМаксимальная длина строки — 50 символов.\n"
            },
            "old_price": {
              "type": "string",
              "description": "Цена до скидок (будет зачеркнута на карточке товара). Указывается в рублях. Разделитель дробной части — точка, до двух знаков после точки."
            },
            "premium_price": {
              "type": "string",
              "description": "Цена для клиентов с подпиской [Ozon Premium](https://docs.ozon.ru/common/ozon-premium/)."
            },
            "price": {
              "type": "string",
              "description": "Цена товара с учётом скидок, отображается на карточке товара. Если на товар нет скидок, укажите значение `old_price` в этом параметре."
            },
            "sku": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор товара в системе Ozon — SKU."
            },
            "vat": {
              "type": "string",
              "description": "Ставка НДС для товара:\n  - `0` — не облагается НДС,\n  - `0.1` — 10%,\n  - `0.2` — 20%.\n"
            },
            "currency_code": {
              "type": "string",
              "description": "Валюта ваших цен. Переданное значение должно совпадать с валютой, которая установлена в настройках личного кабинета. По умолчанию передаётся `RUB` — российский рубль.\n\nНапример, если у вас установлена валюта взаиморасчётов юань, передавайте значение `CNY`, иначе вернётся ошибка.\n\nВозможные значения: \n  - `RUB` — российский рубль,\n  - `BYN` — белорусский рубль,\n  - `KZT` — тенге,\n  - `EUR` — евро,\n  - `USD` — доллар США,\n  - `CNY` — юань.\n"
            }
          },
          "type": "object"
        },
        "productImportProductsBySKURequest": {
          "properties": {
            "items": {
              "items": {
                "$ref": "#/components/schemas/productImportProductsBySKURequestItem"
              },
              "type": "array",
              "description": "Информация о товарах."
            }
          },
          "type": "object"
        },
        "productImportProductsBySKUResponseResult": {
          "properties": {
            "task_id": {
              "format": "int64",
              "type": "integer",
              "description": "Код задачи на импорт товаров."
            },
            "unmatched_sku_list": {
              "items": {
                "format": "int64",
                "type": "integer"
              },
              "type": "array",
              "description": "Список идентификаторов товаров."
            }
          },
          "type": "object"
        },
        "productImportProductsBySKUResponse": {
          "properties": {
            "result": {
              "$ref": "#/components/schemas/productImportProductsBySKUResponseResult"
            }
          },
          "type": "object"
        },
        "productv1ProductImportPicturesRequest": {
          "type": "object",
          "properties": {
            "color_image": {
              "type": "string",
              "description": "Маркетинговый цвет."
            },
            "images": {
              "description": "Массив ссылок на изображения. \nИзображения в массиве расположены в порядке их расположения на сайте. \nПервое изображение в массиве будет главным.\n",
              "items": {
                "type": "string"
              }
            },
            "images360": {
              "items": {
                "type": "string"
              },
              "description": "Массив изображений 360. До 70 штук.\n\nФормат: адрес ссылки на изображение в общедоступном облачном хранилище. Формат изображения по ссылке — JPG.\n"
            },
            "product_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор товара."
            }
          }
        },
        "productProductInfoPicturesResponsePicture": {
          "type": "object",
          "properties": {
            "is_360": {
              "type": "boolean",
              "description": "Признак, что картинка — изображение 360."
            },
            "is_color": {
              "type": "boolean",
              "description": "Признак, что картинка — образец цвета."
            },
            "is_primary": {
              "type": "boolean",
              "description": "Признак, что картинка — главное изображение."
            },
            "product_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор товара."
            },
            "state": {
              "type": "string",
              "description": "Статус загрузки изображения. \n\nЕсли вызывали метод [/v1/product/pictures/import](#operation/ProductAPI_ProductImportPictures), то в ответе метода всегда будет `imported` — картинка не обработана.\nЧтобы посмотреть финальный статус, примерно через 10 секунд вызовите метод [/v1/product/pictures/info](#operation/ProductAPI_ProductInfoPictures).\n\nЕсли вызывали метод [/v1/product/pictures/info](#operation/ProductAPI_ProductInfoPictures), вы увидите один из статусов:\n- `uploaded` — изображение загружено;\n- `failed` — не получилось загрузить изображение.\n"
            },
            "url": {
              "description": "Адрес ссылки на изображение в общедоступном облачном хранилище. Формат изображения по ссылке — JPG или PNG.",
              "type": "string"
            }
          }
        },
        "productv1ProductInfoPicturesResponseResult": {
          "type": "object",
          "description": "Результат работы метода.",
          "properties": {
            "pictures": {
              "items": {
                "$ref": "#/components/schemas/productProductInfoPicturesResponsePicture"
              }
            }
          }
        },
        "productv1ProductInfoPicturesResponse": {
          "type": "object",
          "properties": {
            "result": {
              "$ref": "#/components/schemas/productv1ProductInfoPicturesResponseResult"
            }
          }
        },
        "productv1ProductInfoPicturesRequest": {
          "type": "object",
          "properties": {
            "product_id": {
              "description": "Список идентификаторов товаров.",
              "items": {
                "type": "string",
                "format": "int64"
              }
            }
          }
        },
        "productv2GetProductListRequestFilterFilterVisibility": {
          "default": "ALL",
          "enum": [
            "ALL",
            "VISIBLE",
            "INVISIBLE",
            "EMPTY_STOCK",
            "NOT_MODERATED",
            "MODERATED",
            "DISABLED",
            "STATE_FAILED",
            "READY_TO_SUPPLY",
            "VALIDATION_STATE_PENDING",
            "VALIDATION_STATE_FAIL",
            "VALIDATION_STATE_SUCCESS",
            "TO_SUPPLY",
            "IN_SALE",
            "REMOVED_FROM_SALE",
            "BANNED",
            "OVERPRICED",
            "CRITICALLY_OVERPRICED",
            "EMPTY_BARCODE",
            "BARCODE_EXISTS",
            "QUARANTINE",
            "ARCHIVED",
            "OVERPRICED_WITH_STOCK",
            "PARTIAL_APPROVED",
            "IMAGE_ABSENT",
            "MODERATION_BLOCK"
          ],
          "type": "string",
          "description": "Фильтр по видимости товара:\n  - `ALL` — все товары, кроме архивных.\n  - `VISIBLE` — товары, которые видны покупателям.\n  - `INVISIBLE` — товары, которые не видны покупателям.\n  - `EMPTY_STOCK` — товары, у которых не указано наличие.\n  - `NOT_MODERATED` — товары, которые не прошли модерацию.\n  - `MODERATED` — товары, которые прошли модерацию.\n  - `DISABLED` — товары, которые видны покупателям, но недоступны к покупке.\n  - `STATE_FAILED` — товары, создание которых завершилось ошибкой.\n  - `READY_TO_SUPPLY` — товары, готовые к поставке.\n  - `VALIDATION_STATE_PENDING` — товары, которые проходят проверку валидатором на премодерации.\n  - `VALIDATION_STATE_FAIL` — товары, которые не прошли проверку валидатором на премодерации.\n  - `VALIDATION_STATE_SUCCESS` — товары, которые прошли проверку валидатором на премодерации.\n  - `TO_SUPPLY` — товары, готовые к продаже.\n  - `IN_SALE` — товары в продаже.\n  - `REMOVED_FROM_SALE` — товары, скрытые от покупателей.\n  - `BANNED` — заблокированные товары.\n  - `OVERPRICED` — товары с завышенной ценой.\n  - `CRITICALLY_OVERPRICED` — товары со слишком завышенной ценой.\n  - `EMPTY_BARCODE` — товары без штрихкода.\n  - `BARCODE_EXISTS` — товары со штрихкодом.\n  - `QUARANTINE` — товары на карантине после изменения цены более чем на 50%.\n  - `ARCHIVED` — товары в архиве.\n  - `OVERPRICED_WITH_STOCK` — товары в продаже со стоимостью выше, чем у конкурентов.\n  - `PARTIAL_APPROVED` — товары в продаже с пустым или неполным описанием.\n  - `IMAGE_ABSENT` — товары без изображений.\n  - `MODERATION_BLOCK` — товары, для которых заблокирована модерация.\n"
        },
        "productv2GetProductListRequestFilter": {
          "type": "object",
          "description": "Фильтр по товарам.",
          "properties": {
            "offer_id": {
              "description": "Фильтр по параметру `offer_id`. Можно передавать список значений.",
              "items": {
                "type": "string"
              }
            },
            "product_id": {
              "description": "Фильтр по параметру `product_id`. Можно передавать список значений.",
              "items": {
                "type": "string",
                "format": "int64"
              }
            },
            "visibility": {
              "$ref": "#/components/schemas/productv2GetProductListRequestFilterFilterVisibility"
            }
          }
        },
        "productv2GetProductListRequest": {
          "type": "object",
          "properties": {
            "filter": {
              "$ref": "#/components/schemas/productv2GetProductListRequestFilter"
            },
            "last_id": {
              "type": "string",
              "description": "Идентификатор последнего значения на странице. Оставьте это поле пустым при выполнении первого запроса.\n\nЧтобы получить следующие значения, укажите `last_id` из ответа предыдущего запроса.\n"
            },
            "limit": {
              "type": "integer",
              "format": "int64",
              "description": "Количество значений на странице. Минимум — 1, максимум — 1000."
            }
          }
        },
        "productv2GetProductListResponseItem": {
          "type": "object",
          "properties": {
            "offer_id": {
              "type": "string",
              "description": "Идентификатор товара в системе продавца — артикул."
            },
            "product_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор товара."
            }
          }
        },
        "productv2GetProductListResponseResult": {
          "type": "object",
          "description": "Результат.",
          "properties": {
            "items": {
              "description": "Список товаров.",
              "items": {
                "$ref": "#/components/schemas/productv2GetProductListResponseItem"
              }
            },
            "last_id": {
              "type": "string",
              "description": "Идентификатор последнего значения на странице.\n\nЧтобы получить следующие значения, передайте полученное значение в следующем запросе в параметре `last_id`.\n"
            },
            "total": {
              "description": "Всего товаров.",
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "productv2GetProductListResponse": {
          "type": "object",
          "properties": {
            "result": {
              "$ref": "#/components/schemas/productv2GetProductListResponseResult"
            }
          }
        },
        "productv2GetProductInfoRequest": {
          "properties": {
            "offer_id": {
              "type": "string",
              "description": "Идентификатор товара в системе продавца — артикул."
            },
            "product_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор товара."
            },
            "sku": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор товара в системе Ozon — SKU."
            }
          },
          "type": "object"
        },
        "productv2GetProductInfoResponseCommissions": {
          "properties": {
            "deliveryAmount": {
              "format": "double",
              "type": "number",
              "description": "Стоимость доставки."
            },
            "minValue": {
              "format": "double",
              "type": "number",
              "description": "Минимальная комиссия."
            },
            "percent": {
              "format": "double",
              "type": "number",
              "description": "Процент комиссии."
            },
            "returnAmount": {
              "format": "double",
              "type": "number",
              "description": "Стоимость возврата."
            },
            "saleSchema": {
              "type": "string",
              "description": "Схема продажи."
            },
            "value": {
              "format": "double",
              "type": "number",
              "description": "Сумма комиссии."
            }
          },
          "type": "object"
        },
        "productv2GetProductInfoDiscountedStocks": {
          "type": "object",
          "description": "Остатки уценённого товара на складе Ozon.",
          "properties": {
            "coming": {
              "type": "integer",
              "format": "int32",
              "description": "Количество товара, ожидаемого при поставке."
            },
            "present": {
              "type": "integer",
              "format": "int32",
              "description": "Количество товара на складе."
            },
            "reserved": {
              "type": "integer",
              "format": "int32",
              "description": "Количество зарезервированного товара."
            }
          }
        },
        "PriceIndexesIndexDataExternal": {
          "type": "object",
          "description": "Цена товара у конкурентов на других площадках.",
          "properties": {
            "minimal_price": {
              "type": "string",
              "description": "Минимальная цена товара у конкурентов на другой площадке."
            },
            "minimal_price_currency": {
              "type": "string",
              "description": "Валюта цены."
            },
            "price_index_value": {
              "type": "number",
              "format": "double",
              "description": "Значение индекса цены."
            }
          }
        },
        "PriceIndexesIndexDataOzon": {
          "type": "object",
          "description": "Цена товара у конкурентов на Ozon.",
          "properties": {
            "minimal_price": {
              "type": "string",
              "description": "Минимальная цена товара у конкурентов на Ozon."
            },
            "minimal_price_currency": {
              "type": "string",
              "description": "Валюта цены."
            },
            "price_index_value": {
              "type": "number",
              "format": "double",
              "description": "Значение индекса цены."
            }
          }
        },
        "PriceIndexesIndexDataSelf": {
          "type": "object",
          "description": "Цена вашего товара на других площадках.",
          "properties": {
            "minimal_price": {
              "type": "string",
              "description": "Минимальная цена вашего товара на других площадках."
            },
            "minimal_price_currency": {
              "type": "string",
              "description": "Валюта цены."
            },
            "price_index_value": {
              "type": "number",
              "format": "double",
              "description": "Значение индекса цены."
            }
          }
        },
        "commonPriceIndexes": {
          "type": "object",
          "description": "Ценовые индексы товара.\n\nПодробнее в [Базе знаний продавца](https://docs.ozon.ru/global/launch/quality-assurance/rating).\n",
          "properties": {
            "external_index_data": {
              "$ref": "#/components/schemas/PriceIndexesIndexDataExternal"
            },
            "ozon_index_data": {
              "$ref": "#/components/schemas/PriceIndexesIndexDataOzon"
            },
            "price_index": {
              "type": "string",
              "enum": ["WITHOUT_INDEX", "PROFIT", "AVG_PROFIT", "NON_PROFIT"],
              "description": "Итоговый ценовой индекс товара:\n- `WITHOUT_INDEX` — без индекса,\n- `PROFIT` — выгодный, \n- `AVG_PROFIT` — умеренный,\n- `NON_PROFIT` — невыгодный.\n"
            },
            "self_marketplaces_index_data": {
              "$ref": "#/components/schemas/PriceIndexesIndexDataSelf"
            }
          }
        },
        "v2ItemError": {
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "description": "Код ошибки."
            },
            "state": {
              "type": "string",
              "description": "Состояние товара, в котором произошла ошибка."
            },
            "level": {
              "type": "string",
              "description": "Уровень ошибки."
            },
            "description": {
              "type": "string",
              "description": "Описание ошибки."
            },
            "field": {
              "type": "string",
              "description": "Поле, в котором произошла ошибка."
            },
            "attribute_id": {
              "type": "integer",
              "format": "int64",
              "description": "Атрибут, в котором произошла ошибка."
            },
            "attribute_name": {
              "type": "string",
              "description": "Название атрибута, в котором произошла ошибка."
            },
            "optional_description_elements": {
              "type": "object",
              "description": "Дополнительные поля для описания ошибки.",
              "additionalProperties": {
                "type": "string",
                "description": "Дополнительное поле для описания ошибки."
              }
            }
          }
        },
        "productv2Status": {
          "type": "object",
          "properties": {
            "state": {
              "type": "string",
              "description": "Состояние товара."
            },
            "state_failed": {
              "type": "string",
              "description": "Состояние товара, на переходе в которое произошла ошибка."
            },
            "moderate_status": {
              "type": "string",
              "description": "Статус модерации."
            },
            "decline_reasons": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Причины отклонения товара."
            },
            "validation_state": {
              "type": "string",
              "description": "Статус валидации."
            },
            "state_name": {
              "type": "string",
              "description": "Название состояния товара."
            },
            "state_description": {
              "type": "string",
              "description": "Описание состояния товара."
            },
            "is_failed": {
              "type": "boolean",
              "description": "Признак, что при создании товара возникли ошибки."
            },
            "is_created": {
              "type": "boolean",
              "description": "Признак, что товар создан."
            },
            "state_tooltip": {
              "type": "string",
              "description": "Подсказки для текущего состояния товара."
            },
            "item_errors": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/v2ItemError"
              },
              "description": "Ошибки при загрузке товаров."
            },
            "state_updated_at": {
              "type": "string",
              "format": "date-time",
              "description": "Время последнего изменения состояния товара."
            }
          },
          "description": "Описание состояния товара."
        },
        "productv2GetProductInfoResponseSource": {
          "properties": {
            "is_enabled": {
              "type": "boolean",
              "description": "Признак, что источник учитывается при расчете рыночного значения."
            },
            "sku": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор товара на Ozon."
            },
            "source": {
              "type": "string",
              "description": "Ссылка на источник."
            }
          },
          "type": "object"
        },
        "productv2GetProductInfoResponseStock": {
          "properties": {
            "coming": {
              "format": "int32",
              "type": "integer",
              "description": "Ожидается поставка."
            },
            "present": {
              "format": "int32",
              "type": "integer",
              "description": "Сейчас на складе."
            },
            "reserved": {
              "format": "int32",
              "type": "integer",
              "description": "Зарезервировано."
            }
          },
          "type": "object",
          "description": "Информация об остатках товара."
        },
        "productv2GetProductInfoResponseVisibilityDetails": {
          "properties": {
            "active_product": {
              "type": "boolean",
              "description": "Если активный товар — `true`."
            },
            "has_price": {
              "type": "boolean",
              "description": "Если установлена цена — `true`."
            },
            "has_stock": {
              "type": "boolean",
              "description": "Если есть остаток на складах — `true`."
            }
          },
          "type": "object",
          "description": "Настройки видимости товара."
        },
        "productv2GetProductInfoResponseResult": {
          "properties": {
            "barcode": {
              "type": "string",
              "description": "Штрихкод."
            },
            "barcodes": {
              "items": {
                "type": "string"
              },
              "description": "Все штрихкоды товара."
            },
            "buybox_price": {
              "type": "string",
              "description": "Цена главного предложения на Ozon. \n\nУстаревший параметр, больше не используется. Всегда возвращает пустую строку `\"\"`.\n"
            },
            "category_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор категории."
            },
            "color_image": {
              "type": "string",
              "description": "Маркетинговый цвет."
            },
            "commissions": {
              "items": {
                "$ref": "#/components/schemas/productv2GetProductInfoResponseCommissions"
              },
              "type": "array",
              "description": "Информация о комиссиях."
            },
            "created_at": {
              "format": "date-time",
              "type": "string",
              "description": "Дата и время создания товара."
            },
            "fbo_sku": {
              "type": "integer",
              "format": "int64",
              "description": "SKU товара, который продаётся со склада Ozon (FBO)."
            },
            "fbs_sku": {
              "type": "integer",
              "format": "int64",
              "description": "SKU товара, который продаётся со склада продавца (FBS и rFBS)."
            },
            "id": {
              "format": "int64",
              "type": "integer",
              "description": "Номер задания на формирование документов."
            },
            "images": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "Массив ссылок на изображения. Изображения в массиве расположены в порядке их расположения на сайте. Если параметр `primary_image` не указан, первое изображение в массиве главное для товара."
            },
            "primary_image": {
              "type": "string",
              "description": "Главное изображение товара."
            },
            "images360": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "Массив изображений 360."
            },
            "has_discounted_item": {
              "type": "boolean",
              "description": "Признак, что у товара есть уценённые аналоги на складе Ozon."
            },
            "is_discounted": {
              "type": "boolean",
              "description": "Признак, является ли товар уценённым:\n  - Если товар создавался продавцом как уценённый — `true`. \n  - Если товар не уценённый или был уценён Ozon — `false`.\n"
            },
            "discounted_stocks": {
              "$ref": "#/components/schemas/productv2GetProductInfoDiscountedStocks"
            },
            "is_kgt": {
              "type": "boolean",
              "description": "Признак крупногабаритного товара."
            },
            "is_prepayment": {
              "type": "boolean",
              "description": "Флаг обязательной предоплаты для товара:\n  `true` — чтобы купить товар, нужно внести предоплату.\n  `false` — предоплата необязательна.\n"
            },
            "is_prepayment_allowed": {
              "type": "boolean",
              "description": "Если возможна предоплата — `true`."
            },
            "currency_code": {
              "type": "string",
              "description": "Валюта ваших цен. Совпадает с валютой, которая установлена в настройках личного кабинета.\n\nВозможные значения: \n  - `RUB` — российский рубль,\n  - `BYN` — белорусский рубль,\n  - `KZT` — тенге,\n  - `EUR` — евро,\n  - `USD` — доллар США,\n  - `CNY` — юань.\n"
            },
            "marketing_price": {
              "type": "string",
              "description": "Цена на товар с учетом всех акций. Это значение будет указано на витрине Ozon."
            },
            "min_ozon_price": {
              "type": "string",
              "description": "Минимальная цена на аналогичный товар на Ozon.\n\nУстаревший параметр, больше не используется. Всегда возвращает пустую строку `\"\"`.\n"
            },
            "min_price": {
              "type": "string",
              "description": "Минимальная цена товара после применения акций."
            },
            "name": {
              "type": "string",
              "description": "Название."
            },
            "offer_id": {
              "type": "string",
              "description": "Идентификатор товара в системе продавца — артикул."
            },
            "old_price": {
              "type": "string",
              "description": "Цена до учёта скидок. На карточке товара отображается зачёркнутой."
            },
            "premium_price": {
              "type": "string",
              "description": "Цена для клиентов с подпиской [Ozon Premium](https://docs.ozon.ru/common/ozon-premium/)."
            },
            "price": {
              "type": "string",
              "description": "Цена товара с учётом скидок — это значение показывается на карточке товара."
            },
            "price_index": {
              "type": "string",
              "description": "Параметр неактуален и будет удалён 1 мая 2023 года.\n\nЦеновой индекс.\n"
            },
            "price_indexes": {
              "$ref": "#/components/schemas/commonPriceIndexes"
            },
            "recommended_price": {
              "type": "string",
              "description": "Цена на товар, рекомендованная системой на основании схожих предложений."
            },
            "status": {
              "$ref": "#/components/schemas/productv2Status"
            },
            "sources": {
              "items": {
                "$ref": "#/components/schemas/productv2GetProductInfoResponseSource"
              },
              "type": "array",
              "description": "Информация об источниках схожих предложений. Подробнее в [Базе знаний продавца](https://seller-edu.ozon.ru/docs/prices/market-prices.html#если-рыночная-цена-на-комплект-отображается-неверно)."
            },
            "stocks": {
              "$ref": "#/components/schemas/productv2GetProductInfoResponseStock"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time",
              "description": "Дата последнего обновления товара."
            },
            "vat": {
              "type": "string",
              "description": "Ставка НДС для товара."
            },
            "visibility_details": {
              "$ref": "#/components/schemas/productv2GetProductInfoResponseVisibilityDetails"
            },
            "visible": {
              "type": "boolean",
              "description": "Если товар выставлен на продажу — `true`."
            },
            "volume_weight": {
              "format": "double",
              "type": "number",
              "description": "Объёмный вес товара."
            }
          },
          "type": "object",
          "description": "Результаты запроса."
        },
        "productv2GetProductInfoResponse": {
          "properties": {
            "result": {
              "$ref": "#/components/schemas/productv2GetProductInfoResponseResult"
            }
          },
          "type": "object"
        },
        "v1GetProductRatingBySkuRequest": {
          "type": "object",
          "properties": {
            "skus": {
              "description": "Список SKU товаров, для которых нужно вернуть контент-рейтинг.",
              "items": {
                "type": "string",
                "format": "int64"
              }
            }
          }
        },
        "GetProductRatingBySkuResponseRatingCondition": {
          "type": "object",
          "properties": {
            "cost": {
              "type": "number",
              "format": "float",
              "description": "Количество баллов контент-рейтинга, которое даёт выполнение условия."
            },
            "description": {
              "type": "string",
              "description": "Описание условия."
            },
            "fulfilled": {
              "type": "boolean",
              "description": "Признак, что условие выполнено."
            },
            "key": {
              "type": "string",
              "description": "Идентификатор условия."
            }
          }
        },
        "GetProductRatingBySkuResponseRatingImproveAttribute": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор атрибута."
            },
            "name": {
              "type": "string",
              "description": "Название атрибута."
            }
          }
        },
        "GetProductRatingBySkuResponseRatingGroup": {
          "type": "object",
          "properties": {
            "conditions": {
              "description": "Список условий, увеличивающих контент-рейтинг товара.",
              "items": {
                "$ref": "#/components/schemas/GetProductRatingBySkuResponseRatingCondition"
              }
            },
            "improve_at_least": {
              "type": "integer",
              "foramt": "int64",
              "description": "Количество атрибутов, которые нужно заполнить для получения максимального балла в этой группе характеристик."
            },
            "improve_attributes": {
              "description": "Cписок атрибутов, заполнение которых может увеличить контент-рейтинг товара.",
              "items": {
                "$ref": "#/components/schemas/GetProductRatingBySkuResponseRatingImproveAttribute"
              }
            },
            "key": {
              "type": "string",
              "description": "Идентификатор группы."
            },
            "name": {
              "type": "string",
              "description": "Название группы."
            },
            "rating": {
              "type": "number",
              "format": "float",
              "description": "Рейтинг в группе."
            },
            "weight": {
              "type": "number",
              "format": "float",
              "description": "Процент влияния характеристик группы на контент-рейтинг."
            }
          }
        },
        "GetProductRatingBySkuResponseProductRating": {
          "type": "object",
          "properties": {
            "sku": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор товара на Ozon."
            },
            "rating": {
              "type": "number",
              "format": "float",
              "description": "Контент-рейтинг товара: от 0 до 100.\n"
            },
            "groups": {
              "description": "Группы характеристик, из которых складывается контент-рейтинг.",
              "items": {
                "$ref": "#/components/schemas/GetProductRatingBySkuResponseRatingGroup"
              }
            }
          }
        },
        "v1GetProductRatingBySkuResponse": {
          "type": "object",
          "properties": {
            "products": {
              "description": "Контент-рейтинг товаров.",
              "items": {
                "$ref": "#/components/schemas/GetProductRatingBySkuResponseProductRating"
              }
            }
          }
        },
        "productv2GetProductInfoListRequest": {
          "properties": {
            "offer_id": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "Идентификатор товара в системе продавца — артикул. Максимальное количество товаров — 1000."
            },
            "product_id": {
              "items": {
                "format": "int64",
                "type": "integer"
              },
              "type": "array",
              "description": "Идентификатор товара."
            },
            "sku": {
              "items": {
                "format": "int64",
                "type": "integer"
              },
              "type": "array",
              "description": "Идентификатор товара в системе Ozon — SKU."
            }
          },
          "type": "object"
        },
        "productv2GetProductInfoListResponseSource": {
          "properties": {
            "is_enabled": {
              "type": "boolean",
              "description": "Флаг, что источник учитывается при расчете рыночного значения."
            },
            "sku": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор товара на Ozon — SKU."
            },
            "source": {
              "type": "string",
              "description": "Ссылка на источник."
            }
          },
          "type": "object"
        },
        "productv2GetProductInfoListResponseStock": {
          "properties": {
            "coming": {
              "format": "int32",
              "type": "integer",
              "description": "Ожидается поставка."
            },
            "present": {
              "format": "int32",
              "type": "integer",
              "description": "Сейчас на складе."
            },
            "reserved": {
              "format": "int32",
              "type": "integer",
              "description": "Зарезервировано."
            }
          },
          "type": "object",
          "description": "Информация об остатках товара."
        },
        "GetProductInfoListResponseReason": {
          "properties": {
            "description": {
              "type": "string",
              "description": "Описание причины."
            },
            "id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор причины."
            }
          },
          "type": "object"
        },
        "GetProductInfoListResponseReasons": {
          "properties": {
            "reasons": {
              "items": {
                "$ref": "#/components/schemas/GetProductInfoListResponseReason"
              },
              "type": "array",
              "description": "Причины скрытия товара."
            }
          },
          "type": "object"
        },
        "productv2GetProductInfoListResponseVisibilityDetails": {
          "properties": {
            "active_product": {
              "type": "boolean",
              "description": "Если активный товар — `true`."
            },
            "has_price": {
              "type": "boolean",
              "description": "Если установлена цена — `true`."
            },
            "has_stock": {
              "type": "boolean",
              "description": "Если есть остаток на складах — `true`."
            },
            "reasons": {
              "additionalProperties": {
                "$ref": "#/components/schemas/GetProductInfoListResponseReasons"
              },
              "type": "object",
              "description": "Причина, почему товар скрыт."
            }
          },
          "type": "object",
          "description": "Настройки видимости товара."
        },
        "productv2GetProductInfoListResponseItem": {
          "properties": {
            "barcode": {
              "type": "string",
              "description": "Штрихкод."
            },
            "barcodes": {
              "items": {
                "type": "string"
              },
              "description": "Все штрихкоды товара."
            },
            "buybox_price": {
              "type": "string",
              "description": "Цена главного предложения на Ozon."
            },
            "category_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор категории."
            },
            "color_image": {
              "type": "string",
              "description": "Маркетинговый цвет."
            },
            "created_at": {
              "format": "date-time",
              "type": "string",
              "description": "Дата и время создания товара."
            },
            "fbo_sku": {
              "type": "integer",
              "format": "int64",
              "description": "SKU товара, который продаётся со склада Ozon (FBO)."
            },
            "fbs_sku": {
              "type": "integer",
              "format": "int64",
              "description": "SKU товара, который продаётся со склада продавца (FBS и rFBS)."
            },
            "id": {
              "format": "int64",
              "type": "integer",
              "description": "Номер задания на формирование документов."
            },
            "images": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "Массив ссылок на изображения. Изображения в массиве расположены в порядке их расположения на сайте. Если параметр\n`primary_image` не указан, первое изображение в массиве главное для товара.\n"
            },
            "primary_image": {
              "type": "string",
              "description": "Главное изображение товара."
            },
            "images360": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "Массив изображений 360."
            },
            "has_discounted_item": {
              "type": "boolean",
              "description": "Признак, что у товара есть уценённые аналоги на складе Ozon."
            },
            "is_discounted": {
              "type": "boolean",
              "description": "Признак, является ли товар уценённым:\n  - Если товар создавался продавцом как уценённый — `true`. \n  - Если товар не уценённый или был уценён Ozon — `false`.\n"
            },
            "discounted_stocks": {
              "$ref": "#/components/schemas/productv2GetProductInfoDiscountedStocks"
            },
            "is_kgt": {
              "type": "boolean",
              "description": "Признак крупногабаритного товара."
            },
            "currency_code": {
              "type": "string",
              "description": "Валюта ваших цен. Cовпадает с валютой, которая установлена в настройках личного кабинета.\n\nВозможные значения: \n  - `RUB` — российский рубль,\n  - `BYN` — белорусский рубль,\n  - `KZT` — тенге,\n  - `EUR` — евро,\n  - `USD` — доллар США,\n  - `CNY` — юань.\n"
            },
            "marketing_price": {
              "type": "string",
              "description": "Цена на товар с учётом всех акций. Это значение будет указано на витрине Ozon."
            },
            "min_ozon_price": {
              "type": "string",
              "description": "Минимальная цена на аналогичный товар на Ozon."
            },
            "min_price": {
              "type": "string",
              "description": "Минимальная цена товара после применения акций."
            },
            "name": {
              "type": "string",
              "description": "Название."
            },
            "offer_id": {
              "type": "string",
              "description": "Идентификатор товара в системе продавца — артикул."
            },
            "old_price": {
              "type": "string",
              "description": "Цена до учёта скидок. На карточке товара отображается зачёркнутой."
            },
            "premium_price": {
              "type": "string",
              "description": "Цена для клиентов с подпиской [Ozon Premium](https://docs.ozon.ru/common/ozon-premium/)."
            },
            "price": {
              "type": "string",
              "description": "Цена товара с учётом скидок — это значение показывается на карточке товара."
            },
            "price_index": {
              "type": "string",
              "description": "Параметр неактуален и будет удалён 1 мая 2023 года.\n\nЦеновой индекс.\n"
            },
            "price_indexes": {
              "$ref": "#/components/schemas/commonPriceIndexes"
            },
            "recommended_price": {
              "type": "string",
              "description": "Цена на товар, рекомендованная системой на основании схожих предложений."
            },
            "status": {
              "$ref": "#/components/schemas/productv2Status"
            },
            "sources": {
              "items": {
                "$ref": "#/components/schemas/productv2GetProductInfoListResponseSource"
              },
              "type": "array",
              "description": "Информация об источниках схожих предложений."
            },
            "stocks": {
              "$ref": "#/components/schemas/productv2GetProductInfoListResponseStock"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time",
              "description": "Дата последнего обновления товара."
            },
            "vat": {
              "type": "string",
              "description": "Ставка НДС для товара."
            },
            "visibility_details": {
              "$ref": "#/components/schemas/productv2GetProductInfoListResponseVisibilityDetails"
            },
            "visible": {
              "type": "boolean",
              "description": "Если товар выставлен на продажу — `true`."
            }
          },
          "type": "object"
        },
        "productv2GetProductInfoListResponseResult": {
          "properties": {
            "items": {
              "items": {
                "$ref": "#/components/schemas/productv2GetProductInfoListResponseItem"
              },
              "type": "array",
              "description": "Массив данных."
            }
          },
          "type": "object",
          "description": "Результаты запроса."
        },
        "productv2GetProductInfoListResponse": {
          "properties": {
            "result": {
              "$ref": "#/components/schemas/productv2GetProductInfoListResponseResult"
            }
          },
          "type": "object"
        },
        "productv3Filter": {
          "type": "object",
          "description": "Фильтр по товарам.",
          "properties": {
            "offer_id": {
              "description": "Фильтр по параметру `offer_id`. Можно передавать список значений.",
              "items": {
                "type": "string"
              }
            },
            "product_id": {
              "description": "Фильтр по параметру `product_id`. Можно передавать список значений.",
              "items": {
                "type": "string",
                "format": "int64"
              }
            },
            "visibility": {
              "$ref": "#/components/schemas/productv2GetProductListRequestFilterFilterVisibility"
            }
          }
        },
        "productv3GetProductAttributesV3Request": {
          "type": "object",
          "properties": {
            "filter": {
              "$ref": "#/components/schemas/productv3Filter"
            },
            "last_id": {
              "type": "string",
              "description": "Идентификатор последнего значения на странице. Оставьте это поле пустым при выполнении первого запроса.\n\nЧтобы получить следующие значения, укажите `last_id` из ответа предыдущего запроса.\n"
            },
            "limit": {
              "type": "integer",
              "format": "int64",
              "description": "Количество значений на странице. Минимум — 1, максимум — 1000."
            },
            "sort_by": {
              "type": "string",
              "description": "Параметр, по которому товары будут отсортированы."
            },
            "sort_dir": {
              "type": "string",
              "description": "Направление сортировки."
            }
          }
        },
        "productGetProductAttributesV3ResponseDictionaryValue": {
          "properties": {
            "dictionary_value_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор характеристики в словаре."
            },
            "value": {
              "type": "string",
              "description": "Значение характеристики товара."
            }
          },
          "type": "object"
        },
        "productGetProductAttributesV3ResponseAttribute": {
          "properties": {
            "attribute_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор характеристики."
            },
            "complex_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор характеристики, которая поддерживает вложенные свойства. Например, у характеристики «Процессор» есть вложенные характеристики «Производитель» и «L2 Cache». У каждой из вложенных характеристик может быть несколько вариантов значений."
            },
            "values": {
              "items": {
                "$ref": "#/components/schemas/productGetProductAttributesV3ResponseDictionaryValue"
              },
              "type": "array",
              "description": "Массив значений характеристик."
            }
          },
          "type": "object"
        },
        "GetProductAttributesV3ResponseDictionaryValue": {
          "properties": {
            "dictionaryValueId": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор характеристики в словаре."
            },
            "value": {
              "type": "string",
              "description": "Значение характеристики товара."
            }
          },
          "type": "object"
        },
        "GetProductAttributesV3ResponseAttribute": {
          "properties": {
            "attribute_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор характеристики."
            },
            "complex_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор характеристики, которая поддерживает вложенные свойства. Например, у характеристики «Процессор» есть вложенные характеристики «Производитель» и «L2 Cache». У каждой из вложенных характеристик может быть несколько вариантов значений."
            },
            "values": {
              "items": {
                "$ref": "#/components/schemas/GetProductAttributesV3ResponseDictionaryValue"
              },
              "type": "array",
              "description": "Массив значений характеристик."
            }
          },
          "type": "object"
        },
        "productGetProductAttributesV3ResponseComplexAttribute": {
          "properties": {
            "attributes": {
              "items": {
                "$ref": "#/components/schemas/GetProductAttributesV3ResponseAttribute"
              },
              "type": "array",
              "description": "Массив характеристик товара."
            }
          },
          "type": "object"
        },
        "GetProductAttributesResponseImage": {
          "properties": {
            "default": {
              "type": "boolean",
              "description": null
            },
            "file_name": {
              "type": "string",
              "description": null
            },
            "index": {
              "format": "int64",
              "type": "integer",
              "description": null
            }
          },
          "type": "object"
        },
        "GetProductAttributesResponseImage360": {
          "properties": {
            "file_name": {
              "type": "string"
            },
            "index": {
              "format": "int64",
              "type": "integer"
            }
          },
          "type": "object"
        },
        "GetProductAttributesResponsePdf": {
          "properties": {
            "file_name": {
              "type": "string",
              "description": "Путь к PDF-файлу."
            },
            "index": {
              "format": "int64",
              "type": "integer",
              "description": "Индекс документа в хранилище, который задаёт порядок."
            },
            "name": {
              "type": "string",
              "description": "Название файла."
            }
          },
          "type": "object"
        },
        "productv3GetProductAttributesV3ResponseResult": {
          "properties": {
            "attributes": {
              "items": {
                "$ref": "#/components/schemas/productGetProductAttributesV3ResponseAttribute"
              },
              "type": "array",
              "description": "Массив характеристик товара."
            },
            "barcode": {
              "type": "string",
              "description": "Штрихкод."
            },
            "category_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор категории."
            },
            "color_image": {
              "type": "string",
              "description": "Маркетинговый цвет."
            },
            "complex_attributes": {
              "items": {
                "$ref": "#/components/schemas/productGetProductAttributesV3ResponseComplexAttribute"
              },
              "type": "array",
              "description": "Массив вложенных характеристик."
            },
            "depth": {
              "format": "int32",
              "type": "integer",
              "description": "Глубина."
            },
            "dimension_unit": {
              "type": "string",
              "description": "Единица измерения габаритов:\n  - `mm` — миллиметры,\n  - `cm` — сантиметры,\n  - `in` — дюймы.\n"
            },
            "height": {
              "format": "int32",
              "type": "integer",
              "description": "Высота упаковки."
            },
            "id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор характеристики товара."
            },
            "image_group_id": {
              "type": "string",
              "description": "Идентификатор для последующей пакетной загрузки изображений."
            },
            "images": {
              "items": {
                "$ref": "#/components/schemas/GetProductAttributesResponseImage"
              },
              "type": "array",
              "description": "Массив ссылок на изображения товара."
            },
            "images360": {
              "items": {
                "$ref": "#/components/schemas/GetProductAttributesResponseImage360"
              },
              "type": "array",
              "description": "Массив изображений 360."
            },
            "name": {
              "type": "string",
              "description": "Название товара. До 500 символов."
            },
            "offer_id": {
              "type": "string",
              "description": "Идентификатор товара в системе продавца — артикул."
            },
            "pdf_list": {
              "items": {
                "$ref": "#/components/schemas/GetProductAttributesResponsePdf"
              },
              "type": "array",
              "description": "Массив PDF-файлов."
            },
            "weight": {
              "format": "int32",
              "type": "integer",
              "description": "Вес товара в упаковке."
            },
            "weight_unit": {
              "type": "string",
              "description": "Единица измерения веса."
            },
            "width": {
              "format": "int32",
              "type": "integer",
              "description": "Ширина упаковки."
            }
          },
          "type": "object"
        },
        "productv3GetProductAttributesV3Response": {
          "properties": {
            "result": {
              "items": {
                "$ref": "#/components/schemas/productv3GetProductAttributesV3ResponseResult"
              },
              "type": "array",
              "description": "Результаты запроса."
            },
            "last_id": {
              "type": "string",
              "description": "Идентификатор последнего значения на странице.\n\nЧтобы получить следующие значения, укажите полученное значение в следующем запросе в параметре `last_id`.\n"
            },
            "total": {
              "description": "Количество товаров в списке.",
              "type": "string",
              "format": "int32"
            }
          },
          "type": "object"
        },
        "productGetProductInfoDescriptionRequest": {
          "properties": {
            "offer_id": {
              "type": "string",
              "description": "Идентификатор товара в системе продавца — артикул."
            },
            "product_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор товара."
            }
          },
          "type": "object"
        },
        "productGetProductInfoDescriptionResponseProduct": {
          "properties": {
            "description": {
              "type": "string",
              "description": "Описание."
            },
            "id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор."
            },
            "name": {
              "type": "string",
              "description": "Название."
            },
            "offer_id": {
              "type": "string",
              "description": "Идентификатор товара в системе продавца — артикул."
            }
          },
          "type": "object"
        },
        "productGetProductInfoDescriptionResponse": {
          "properties": {
            "result": {
              "$ref": "#/components/schemas/productGetProductInfoDescriptionResponseProduct"
            }
          },
          "type": "object"
        },
        "productv2GetProductInfoLimitV2Request": {
          "type": "object"
        },
        "productv2GetProductInfoLimitV2ResponseResult": {
          "type": "object",
          "properties": {
            "remaining": {
              "type": "integer",
              "format": "int64",
              "description": "Сколько изменений можно внести до сброса счётчика за текущие сутки."
            },
            "reset_at": {
              "type": "string",
              "format": "date-time",
              "description": "Время в формате UTC, когда сбросится значение счётчика за текущие сутки."
            },
            "value": {
              "type": "integer",
              "format": "int64",
              "description": "Значение лимита на загрузку и обновление товаров."
            }
          }
        },
        "productv2GetProductInfoLimitV2Response": {
          "type": "object",
          "properties": {
            "result": {
              "$ref": "#/components/schemas/productv2GetProductInfoLimitV2ResponseResult"
            }
          }
        },
        "v1Empty": {
          "type": "object"
        },
        "GetProductInfoLimitResponseDailyQuota": {
          "type": "object",
          "description": "Суточные лимиты.",
          "properties": {
            "all_quota_value": {
              "type": "integer",
              "format": "int64",
              "description": "Общий суточный лимит на создание и обновление товаров."
            },
            "all_remaining_value": {
              "type": "integer",
              "format": "int64",
              "description": "Сколько осталось от общего суточного лимита на создание и обновление товаров до конца суток."
            },
            "create_quota_value": {
              "type": "integer",
              "format": "int64",
              "description": "Суточный лимит на создание товаров."
            },
            "create_remaining_value": {
              "type": "integer",
              "format": "int64",
              "description": "Сколько осталось от суточного лимита на создание товаров до конца суток."
            },
            "reset_at": {
              "type": "string",
              "format": "date-time",
              "description": "Время в формате UTC, когда сбросится значение счётчика за текущие сутки."
            }
          }
        },
        "GetProductInfoLimitResponseTotalQuota": {
          "type": "object",
          "description": "Лимиты на ассортимент.",
          "properties": {
            "item_quota_value": {
              "type": "integer",
              "format": "int64",
              "description": "Сколько всего товаров можно создать. Если значение `-1`, ограничений нет."
            },
            "remaining_value": {
              "type": "integer",
              "format": "int64",
              "description": "Сколько ещё товаров можно создать. Если значение `-1`, ограничений нет."
            }
          }
        },
        "v3GetProductInfoLimitResponseResult": {
          "type": "object",
          "description": "Результат работы метода.",
          "properties": {
            "daily_quota": {
              "$ref": "#/components/schemas/GetProductInfoLimitResponseDailyQuota"
            },
            "total_quota": {
              "$ref": "#/components/schemas/GetProductInfoLimitResponseTotalQuota"
            }
          }
        },
        "v3GetProductInfoLimitResponse": {
          "type": "object",
          "properties": {
            "result": {
              "$ref": "#/components/schemas/v3GetProductInfoLimitResponseResult"
            }
          }
        },
        "GetUploadQuotaResponseDailyCreate": {
          "type": "object",
          "description": "Суточный лимит на создание товаров.",
          "properties": {
            "limit": {
              "type": "integer",
              "format": "int64",
              "description": "Сколько всего товаров можно создать в сутки."
            },
            "reset_at": {
              "type": "string",
              "format": "date-time",
              "description": "Время в формате UTC, когда сбросится значение счётчика за текущие сутки."
            },
            "usage": {
              "type": "integer",
              "format": "int64",
              "description": "Сколько товаров создано за текущие сутки."
            }
          }
        },
        "GetUploadQuotaResponseDailyUpdate": {
          "type": "object",
          "description": "Суточный лимит на обновление товаров.",
          "properties": {
            "limit": {
              "type": "integer",
              "format": "int64",
              "description": "Сколько всего товаров можно обновить в сутки."
            },
            "reset_at": {
              "type": "string",
              "format": "date-time",
              "description": "Время в формате UTC, когда сбросится значение счётчика за текущие сутки."
            },
            "usage": {
              "type": "integer",
              "format": "int64",
              "description": "Сколько товаров обновлено за текущие сутки."
            }
          }
        },
        "GetUploadQuotaResponseTotal": {
          "type": "object",
          "description": "Лимит на ассортимент.",
          "properties": {
            "limit": {
              "type": "integer",
              "format": "int64",
              "description": "Сколько всего товаров можно создать в личном кабинете."
            },
            "usage": {
              "type": "integer",
              "format": "int64",
              "description": "Сколько товаров уже создано."
            }
          }
        },
        "v4GetUploadQuotaResponse": {
          "type": "object",
          "properties": {
            "daily_create": {
              "$ref": "#/components/schemas/GetUploadQuotaResponseDailyCreate"
            },
            "daily_update": {
              "$ref": "#/components/schemas/GetUploadQuotaResponseDailyUpdate"
            },
            "total": {
              "$ref": "#/components/schemas/GetUploadQuotaResponseTotal"
            }
          }
        },
        "ProductUpdateOfferIdRequestUpdateOfferId": {
          "type": "object",
          "properties": {
            "new_offer_id": {
              "type": "string",
              "description": "Новый артикул.\n\nМаксимальная длина строки — 50 символов.\n"
            },
            "offer_id": {
              "type": "string",
              "description": "Старый артикул."
            }
          }
        },
        "v1ProductUpdateOfferIdRequest": {
          "type": "object",
          "properties": {
            "update_offer_id": {
              "description": "Список пар с новыми и старыми значениями артикулов.",
              "items": {
                "$ref": "#/components/schemas/ProductUpdateOfferIdRequestUpdateOfferId"
              }
            }
          }
        },
        "v1ProductUpdateOfferIdResponseError": {
          "type": "object",
          "properties": {
            "message": {
              "type": "string",
              "description": "Сообщение об ошибке."
            },
            "offer_id": {
              "type": "string",
              "description": "Артикул товара, который не получилось изменить."
            }
          }
        },
        "v1ProductUpdateOfferIdResponse": {
          "type": "object",
          "properties": {
            "errors": {
              "description": "Список ошибок.",
              "items": {
                "$ref": "#/components/schemas/v1ProductUpdateOfferIdResponseError"
              }
            }
          }
        },
        "productProductArchiveRequest": {
          "properties": {
            "product_id": {
              "items": {
                "format": "int64",
                "type": "integer"
              },
              "type": "array",
              "description": "Идентификатор товара."
            }
          },
          "type": "object"
        },
        "productBooleanResponse": {
          "properties": {
            "result": {
              "type": "boolean",
              "description": "Результат обработки запроса. `true`, если запрос выполнен без ошибок."
            }
          },
          "type": "object"
        },
        "productProductUnarchiveRequest": {
          "properties": {
            "product_id": {
              "items": {
                "format": "int64",
                "type": "integer"
              },
              "type": "array",
              "description": "Идентификатор товара."
            }
          },
          "type": "object"
        },
        "DeleteProductsRequestProduct": {
          "properties": {
            "offer_id": {
              "type": "string",
              "description": "Идентификатор товара в системе продавца — артикул."
            }
          },
          "type": "object"
        },
        "productv2DeleteProductsRequest": {
          "properties": {
            "products": {
              "items": {
                "$ref": "#/components/schemas/DeleteProductsRequestProduct"
              },
              "type": "array",
              "description": "Идентификатор товара."
            }
          },
          "type": "object"
        },
        "DeleteProductsResponseDeleteStatus": {
          "properties": {
            "error": {
              "type": "string",
              "description": "Причина ошибки, которая возникла при обработке запроса."
            },
            "is_deleted": {
              "type": "boolean",
              "description": "Если запрос выполнен без ошибок и товары удалены — `true`."
            },
            "offer_id": {
              "type": "string",
              "description": "Идентификатор товара в системе продавца — артикул."
            }
          },
          "type": "object"
        },
        "productv2DeleteProductsResponse": {
          "properties": {
            "status": {
              "items": {
                "$ref": "#/components/schemas/DeleteProductsResponseDeleteStatus"
              },
              "type": "array",
              "description": "Статус обработки запроса."
            }
          },
          "type": "object"
        },
        "v2GetGeoRestrictionsByFilterRequestFilter": {
          "type": "object",
          "description": "Фильтр. Чтобы посмотреть все геоограничения, оставьте `names` пустым, а в `only_visible` передайте `true`.",
          "properties": {
            "names": {
              "description": "Список с названиями городов.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "only_visible": {
              "description": "Видимость значения. Рекомендуем всегда передавать `true` в этом параметре.",
              "type": "boolean"
            }
          }
        },
        "productv2GetGeoRestrictionsByFilterRequest": {
          "type": "object",
          "properties": {
            "filter": {
              "$ref": "#/components/schemas/v2GetGeoRestrictionsByFilterRequestFilter"
            },
            "last_order_number": {
              "description": "Порядок геоограничения, с которого выводим данные в ответе.\n\nЕсли указать `23`, то на выходе у первого элемента списка `restrictions` будет `order_number = 24`. Если вы хотите получить все геоограничения, укажите `0` в этом параметре.\n",
              "type": "integer",
              "format": "int64"
            },
            "limit": {
              "description": "Количество результатов в ответе.",
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "GetGeoRestrictionsByFilterResponseGeoRestriction": {
          "type": "object",
          "description": "Список геоограничений.",
          "properties": {
            "id": {
              "description": "Идентификатор геоограничения.",
              "type": "string"
            },
            "is_visible": {
              "description": "Видимость элемента.",
              "type": "boolean"
            },
            "name": {
              "description": "Название города.",
              "type": "string"
            },
            "order_number": {
              "description": "Порядковый номер геоограничения.\n\nЕсли на вход в параметре `last_order_number` указать `23`, то у первого элемента списка `restrictions` будет `order_number = 24`.\n",
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "productv2GetGeoRestrictionsByFilterResponse": {
          "type": "object",
          "properties": {
            "restrictions": {
              "items": {
                "$ref": "#/components/schemas/GetGeoRestrictionsByFilterResponseGeoRestriction"
              }
            }
          }
        },
        "v1ProductUploadDigitalCodesRequest": {
          "properties": {
            "digital_codes": {
              "description": "Цифровые коды активации.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "product_id": {
              "description": "Идентификатор товара.",
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "v1ProductUploadDigitalCodesResponseResult": {
          "properties": {
            "task_id": {
              "description": "Код задачи на загрузку кодов.",
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "v1ProductUploadDigitalCodesResponse": {
          "properties": {
            "result": {
              "$ref": "#/components/schemas/v1ProductUploadDigitalCodesResponseResult"
            }
          }
        },
        "v1ProductUploadDigitalCodesRequestInfo": {
          "type": "object",
          "properties": {
            "task_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор задачи на загрузку кодов активации, полученный в ответе метода [/v1/product/upload_digital_codes](#operation/ProductAPI_UploadDigitalCode)."
            }
          }
        },
        "v1ProductUploadDigitalCodesResponseInfoResult": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string",
              "description": "Статус загрузки:\n  - `pending` — товар в очереди на обработку.\n  - `imported` — товар успешно загружен.\n  - `failed` — товар загружен с ошибками.\n"
            }
          }
        },
        "v1ProductUploadDigitalCodesResponseInfo": {
          "type": "object",
          "properties": {
            "result": {
              "$ref": "#/components/schemas/v1ProductUploadDigitalCodesResponseInfoResult"
            }
          }
        },
        "v1GetProductInfoSubscriptionRequest": {
          "type": "object",
          "properties": {
            "skus": {
              "description": "Список SKU, идентификаторов товара в системе Ozon.",
              "type": "array",
              "items": {
                "type": "string",
                "format": "int64"
              }
            }
          }
        },
        "v1GetProductInfoSubscriptionResponseResult": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "format": "int64",
              "description": "Количество подписавшихся пользователей."
            },
            "sku": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор товара в системе Ozon, SKU."
            }
          }
        },
        "v1GetProductInfoSubscriptionResponse": {
          "type": "object",
          "properties": {
            "result": {
              "description": "Результат работы метода.",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/v1GetProductInfoSubscriptionResponseResult"
              }
            }
          }
        },
        "productImportProductsStocksRequestStock": {
          "properties": {
            "offer_id": {
              "type": "string",
              "description": "Идентификатор товара в системе продавца — артикул."
            },
            "product_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор товара."
            },
            "stock": {
              "format": "int64",
              "type": "integer",
              "description": "Количество товара в наличии."
            }
          },
          "type": "object"
        },
        "productImportProductsStocksRequest": {
          "properties": {
            "stocks": {
              "items": {
                "$ref": "#/components/schemas/productImportProductsStocksRequestStock"
              },
              "type": "array",
              "description": "Информация о товарах на складах."
            }
          },
          "type": "object"
        },
        "productImportProductsStocksResponseError": {
          "properties": {
            "code": {
              "type": "string",
              "description": "Код ошибки:\n- `OVER_MAX_OVH_KGT` — вес или габариты товара больше максимальных. Обновить количество не получится. [Информация в Базе знаний продавца](https://seller-edu.ozon.ru/docs/fbs/logistics-settings/upravlenie-ostatkami.html#какие-типы-ошибок-могут-возникнуть-при-обновлении-остатков).\n- `OVER_MAX_OVH_NON_KGT` — вы не можете продавать крупногабаритные товары с этого склада. [Информация в Базе знаний продавца](https://seller-edu.ozon.ru/docs/fbs/upravlenie-ostatkami.html#какие-типы-ошибок-могут-возникнуть-при-обновлении-остатков).\n- `NON_KGT_ON_KGT_WAREHOUSE` — все ваши товары продаются как крупногабаритные, а вы хотите продавать обычный. Он попадёт под условия продажи крупногабаритных. [Информация в Базе знаний продавца](https://seller-edu.ozon.ru/docs/fbs/upravlenie-ostatkami.html#какие-типы-ошибок-могут-возникнуть-при-обновлении-остатков).\n- `STOCK_TOO_BIG` — указано слишком большое количество, попробуйте уменьшить его.\n- `INVALID_STATE` — товар не прошёл все этапы создания, проверьте его статус.\n- `CANNOT_CREATE_FBS_SKU` — произошла внутренняя ошибка при обновлении наличия, попробуйте ещё раз.\n- `NOT_FOUND` — не удалось найти указанный товар.\n- `PRODUCT_HAS_NOT_BEEN_TAGGED_YET` — товар ещё не пометили тегами «КГТ» или «неКГТ», так как не указаны габариты товара или система для расстановки тегов ещё не обработала его.\n"
            },
            "message": {
              "type": "string",
              "description": "Причина ошибки."
            }
          },
          "type": "object"
        },
        "productImportProductsStocksResponseProcessResult": {
          "properties": {
            "errors": {
              "items": {
                "$ref": "#/components/schemas/productImportProductsStocksResponseError"
              },
              "type": "array",
              "description": "Массив ошибок, которые возникли при обработке запроса."
            },
            "offer_id": {
              "type": "string",
              "description": "Идентификатор товара в системе продавца — артикул."
            },
            "product_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор товара."
            },
            "updated": {
              "type": "boolean",
              "description": "Если информации о товаре успешно обновлена — `true`."
            }
          },
          "type": "object"
        },
        "productImportProductsStocksResponse": {
          "properties": {
            "result": {
              "items": {
                "$ref": "#/components/schemas/productImportProductsStocksResponseProcessResult"
              },
              "type": "array",
              "description": "Результаты запроса."
            }
          },
          "type": "object"
        },
        "productv2ProductsStocksRequestStock": {
          "properties": {
            "offer_id": {
              "type": "string",
              "description": "Идентификатор товара в системе продавца — артикул."
            },
            "product_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор товара."
            },
            "stock": {
              "format": "int64",
              "type": "integer",
              "description": "Количество."
            },
            "warehouse_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор склада, полученный из метода [/v1/warehouse/list](#operation/WarehouseAPI_WarehouseList)."
            }
          },
          "type": "object"
        },
        "productv2ProductsStocksRequest": {
          "properties": {
            "stocks": {
              "items": {
                "$ref": "#/components/schemas/productv2ProductsStocksRequestStock"
              },
              "type": "array",
              "description": "Информация о товарах на складах."
            }
          },
          "type": "object"
        },
        "productv2ProductsStocksResponseError": {
          "properties": {
            "code": {
              "type": "string",
              "description": "Код ошибки:\n  - `SKU STOCK NOT CHANGED` — количество товара на складе не изменилось, так как вы передаёте тот же остаток.\n  - `PRODUCT_HAS_NOT_BEEN_TAGGED_YET` — товар ещё не пометили тегами «КГТ» или «неКГТ», так как не указаны габариты товара или система для расстановки тегов ещё не обработала его.\n  - `NON_KGT_ON_KGT_WAREHOUSE` — попытка установить или обновить остаток некрупногабаритного товара на КГТ складе.\n"
            },
            "message": {
              "type": "string",
              "description": "Причина ошибки."
            }
          },
          "type": "object"
        },
        "productv2ProductsStocksResponseResult": {
          "properties": {
            "errors": {
              "items": {
                "$ref": "#/components/schemas/productv2ProductsStocksResponseError"
              },
              "type": "array",
              "description": "Массив ошибок, которые возникли при обработке запроса."
            },
            "offer_id": {
              "type": "string",
              "description": "Идентификатор товара в системе продавца — артикул."
            },
            "product_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор товара."
            },
            "updated": {
              "type": "boolean",
              "description": "Если запрос выполнен успешно и остатки обновлены — `true`."
            },
            "warehouse_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор склада."
            }
          },
          "type": "object"
        },
        "productv2ProductsStocksResponse": {
          "description": "Результаты запроса.",
          "properties": {
            "result": {
              "items": {
                "$ref": "#/components/schemas/productv2ProductsStocksResponseResult"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "productv3GetProductInfoStocksV3Request": {
          "type": "object",
          "properties": {
            "filter": {
              "$ref": "#/components/schemas/productv3Filter"
            },
            "last_id": {
              "type": "string",
              "description": "Идентификатор последнего значения на странице. Оставьте это поле пустым при выполнении первого запроса.\n\nЧтобы получить следующие значения, укажите `last_id` из ответа предыдущего запроса.\n"
            },
            "limit": {
              "type": "integer",
              "format": "int64",
              "description": "Количество значений на странице. Минимум — 1, максимум — 1000."
            }
          }
        },
        "GetProductInfoStocksV3ResponseStock": {
          "properties": {
            "present": {
              "format": "int32",
              "type": "integer",
              "description": "Сейчас на складе."
            },
            "reserved": {
              "format": "int32",
              "type": "integer",
              "description": "Зарезервировано."
            },
            "type": {
              "type": "string",
              "description": "Тип склада."
            }
          },
          "type": "object",
          "description": "Остатки."
        },
        "productv3GetProductInfoStocksV3ResponseItem": {
          "properties": {
            "offer_id": {
              "type": "string",
              "description": "Идентификатор товара в системе продавца — артикул."
            },
            "product_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор товара."
            },
            "stocks": {
              "items": {
                "$ref": "#/components/schemas/GetProductInfoStocksV3ResponseStock"
              },
              "type": "array",
              "description": "Информация об остатках."
            }
          },
          "type": "object"
        },
        "productv3GetProductInfoStocksV3ResponseResult": {
          "properties": {
            "items": {
              "items": {
                "$ref": "#/components/schemas/productv3GetProductInfoStocksV3ResponseItem"
              },
              "type": "array",
              "description": "Информация о товарах."
            },
            "last_id": {
              "type": "string",
              "description": "Идентификатор последнего значения на странице.\n\nЧтобы получить следующие значения, передайте полученное значение в следующем запросе в параметре `last_id`.\n"
            },
            "total": {
              "format": "int32",
              "type": "integer",
              "description": "Количество уникальных товаров, для которых выводится информация об остатках."
            }
          },
          "type": "object",
          "description": "Результаты запроса."
        },
        "productv3GetProductInfoStocksV3Response": {
          "properties": {
            "result": {
              "$ref": "#/components/schemas/productv3GetProductInfoStocksV3ResponseResult"
            }
          },
          "type": "object"
        },
        "productsv1GetProductInfoStocksByWarehouseFbsRequest": {
          "type": "object",
          "properties": {
            "fbs_sku": {
              "description": "SKU товара, который продаётся со склада продавца (схемы FBS и rFBS). \n\nПолучите `fbs_sku` в ответе методов [/v2/product/info](#operation/ProductAPI_GetProductInfoV2) и [/v2/product/info/list](#operation/ProductAPI_GetProductInfoListV2).\n\nМаксимальное количестов SKU в одном запросе — 500.\n",
              "items": {
                "type": "string",
                "format": "int64"
              }
            }
          }
        },
        "productsv1GetProductInfoStocksByWarehouseFbsResponseResult": {
          "type": "object",
          "properties": {
            "fbs_sku": {
              "description": "SKU товара, который продаётся со склада продавца (схемы FBS и rFBS).",
              "type": "integer",
              "format": "int64"
            },
            "present": {
              "description": "Общее количество товара на складе.",
              "type": "integer",
              "format": "int64"
            },
            "product_id": {
              "description": "Идентификатор товара в системе продавца.",
              "type": "integer",
              "format": "int64"
            },
            "reserved": {
              "description": "Количество зарезервированных товаров на складе.",
              "type": "integer",
              "format": "int64"
            },
            "warehouse_id": {
              "description": "Идентификатор склада.",
              "type": "integer",
              "format": "int64"
            },
            "warehouse_name": {
              "description": "Название склада.",
              "type": "string"
            }
          }
        },
        "productsv1GetProductInfoStocksByWarehouseFbsResponse": {
          "type": "object",
          "properties": {
            "result": {
              "description": "Результат работы метода.",
              "items": {
                "$ref": "#/components/schemas/productsv1GetProductInfoStocksByWarehouseFbsResponseResult"
              }
            }
          }
        },
        "productImportProductsPricesRequestPrice": {
          "properties": {
            "auto_action_enabled": {
              "type": "string",
              "description": "Атрибут для включения и выключения автоприменения акций:\n- `ENABLED` — включить автоприменение акций;\n- `DISABLED` — выключить автоприменение акций;\n- `UNKNOWN` — ничего не менять, передаётся по умолчанию.\n\nНапример, если ранее вы включили автоприменение акций и не хотите выключать его, передавайте `UNKNOWN`.\n\nЕсли вы передаёте `ENABLED` в этом параметре, установите значение минимальной цены в параметре `min_price`.\n",
              "default": "UNKNOWN",
              "enum": ["UNKNOWN", "ENABLED", "DISABLED"]
            },
            "currency_code": {
              "type": "string",
              "description": "Валюта ваших цен. Переданное значение должно совпадать с валютой, которая установлена в настройках личного кабинета. По умолчанию передаётся `RUB` — российский рубль.\n\nНапример, если у вас установлена валюта взаиморасчётов юань, передавайте значение `CNY`, иначе вернётся ошибка.\n\nВозможные значения: \n  - `RUB` — российский рубль,\n  - `BYN` — белорусский рубль,\n  - `KZT` — тенге,\n  - `EUR` — евро,\n  - `USD` — доллар США,\n  - `CNY` — юань.\n"
            },
            "min_price": {
              "type": "string",
              "description": "Минимальная цена товара после применения акций."
            },
            "offer_id": {
              "type": "string",
              "description": "Идентификатор товара в системе продавца."
            },
            "old_price": {
              "type": "string",
              "description": "Цена до скидок (зачеркнута на карточке товара). Указывается в рублях. Разделитель дробной части — точка, до двух знаков после точки.\n\nЕсли на товар нет скидок, укажите значение `0` в этом поле, а текущую цену передайте в поле `price`.\n"
            },
            "price": {
              "type": "string",
              "description": "Цена товара с учётом скидок, отображается на карточке товара.\n\nЕсли текущая цена товара от 400 до 10 000 рублей включительно, разница между значениями `price` и `old_price` должна быть больше 5%, но не менее 20 рублей.\n"
            },
            "product_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор товара."
            }
          },
          "type": "object"
        },
        "productImportProductsPricesRequest": {
          "properties": {
            "prices": {
              "items": {
                "$ref": "#/components/schemas/productImportProductsPricesRequestPrice"
              },
              "type": "array",
              "description": "Информация о ценах товаров."
            }
          },
          "type": "object"
        },
        "productImportProductsPricesResponseError": {
          "properties": {
            "code": {
              "type": "string",
              "description": "Код ошибки."
            },
            "message": {
              "type": "string",
              "description": "Причина ошибки."
            }
          },
          "type": "object"
        },
        "productImportProductsPricesResponseProcessResult": {
          "properties": {
            "errors": {
              "items": {
                "$ref": "#/components/schemas/productImportProductsPricesResponseError"
              },
              "type": "array",
              "description": "Массив ошибок, которые возникли при обработке запроса."
            },
            "offer_id": {
              "type": "string",
              "description": "Идентификатор товара в системе продавца — артикул."
            },
            "product_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор товара."
            },
            "updated": {
              "type": "boolean",
              "description": "Если информации о товаре успешно обновлена — `true`."
            }
          },
          "type": "object"
        },
        "productImportProductsPricesResponse": {
          "properties": {
            "result": {
              "items": {
                "$ref": "#/components/schemas/productImportProductsPricesResponseProcessResult"
              },
              "type": "array",
              "description": "Результаты запроса."
            }
          },
          "type": "object"
        },
        "productv4Filter": {
          "type": "object",
          "description": "Фильтр по товарам.",
          "properties": {
            "offer_id": {
              "description": "Фильтр по параметру `offer_id`. Можно передавать список значений.",
              "items": {
                "type": "string"
              }
            },
            "product_id": {
              "description": "Фильтр по параметру `product_id`. Можно передавать до 1000 значений.",
              "items": {
                "type": "string",
                "format": "int64"
              }
            },
            "visibility": {
              "$ref": "#/components/schemas/productv2GetProductListRequestFilterFilterVisibility"
            }
          }
        },
        "productv4GetProductInfoPricesV4Request": {
          "type": "object",
          "properties": {
            "filter": {
              "$ref": "#/components/schemas/productv4Filter"
            },
            "last_id": {
              "type": "string",
              "description": "Идентификатор последнего значения на странице. Оставьте это поле пустым при выполнении первого запроса.\n\nЧтобы получить следующие значения, укажите `last_id` из ответа предыдущего запроса.\n"
            },
            "limit": {
              "type": "integer",
              "format": "int32",
              "description": "Количество значений на странице. Минимум — 1, максимум — 1000."
            }
          }
        },
        "ItemCommissions": {
          "type": "object",
          "description": "Информация о комиссиях.",
          "properties": {
            "fbo_deliv_to_customer_amount": {
              "format": "double",
              "type": "number",
              "description": "Последняя миля (FBO)."
            },
            "fbo_direct_flow_trans_max_amount": {
              "format": "double",
              "type": "number",
              "description": "Магистраль до (FBO)."
            },
            "fbo_direct_flow_trans_min_amount": {
              "format": "double",
              "type": "number",
              "description": "Магистраль от (FBO)."
            },
            "fbo_fulfillment_amount": {
              "format": "double",
              "type": "number",
              "description": "Комиссия за сборку заказа (FBO)."
            },
            "fbo_return_flow_amount": {
              "format": "double",
              "type": "number",
              "description": "Комиссия за возврат и отмену (FBO)."
            },
            "fbo_return_flow_trans_min_amount": {
              "format": "double",
              "type": "number",
              "description": "Комиссия за обратную логистику от (FBO)."
            },
            "fbo_return_flow_trans_max_amount": {
              "format": "double",
              "type": "number",
              "description": "Комиссия за обратную логистику до (FBO)."
            },
            "fbs_deliv_to_customer_amount": {
              "format": "double",
              "type": "number",
              "description": "Последняя миля (FBS)."
            },
            "fbs_direct_flow_trans_max_amount": {
              "format": "double",
              "type": "number",
              "description": "Магистраль до (FBS)."
            },
            "fbs_direct_flow_trans_min_amount": {
              "format": "double",
              "type": "number",
              "description": "Магистраль от (FBS)."
            },
            "fbs_first_mile_min_amount": {
              "format": "double",
              "type": "number",
              "description": "Комиссия за обработку отправления от (FBS)."
            },
            "fbs_first_mile_max_amount": {
              "format": "double",
              "type": "number",
              "description": "Комиссия за обработку отправления до (FBS)."
            },
            "fbs_return_flow_amount": {
              "format": "double",
              "type": "number",
              "description": "Комиссия за возврат и отмену, обработка отправления (FBS)."
            },
            "fbs_return_flow_trans_max_amount": {
              "format": "double",
              "type": "number",
              "description": "Комиссия за возврат и отмену, магистраль до (FBS)."
            },
            "fbs_return_flow_trans_min_amount": {
              "format": "double",
              "type": "number",
              "description": "Комиссия за возврат и отмену, магистраль от (FBS)."
            },
            "sales_percent": {
              "format": "double",
              "type": "number",
              "description": "Процент комиссии за продажу (FBO и FBS)."
            }
          }
        },
        "MarketingActionsMarketingAction": {
          "properties": {
            "date_from": {
              "format": "date-time",
              "type": "string",
              "description": "Дата и время начала акции продавца."
            },
            "date_to": {
              "format": "date-time",
              "type": "string",
              "description": "Дата и время окончания акции продавца."
            },
            "discount_value": {
              "type": "string",
              "description": "Скидка по акции продавца."
            },
            "title": {
              "type": "string",
              "description": "Название акции продавца."
            }
          },
          "type": "object"
        },
        "ItemMarketingActions": {
          "properties": {
            "actions": {
              "items": {
                "$ref": "#/components/schemas/MarketingActionsMarketingAction"
              },
              "type": "array",
              "description": "Маркетинговые акции продавца. Параметры `date_from`, `date_to`, `discount_value` и `title` указываются для каждой акции продавца."
            },
            "current_period_from": {
              "format": "date-time",
              "type": "string",
              "description": "Дата и время начала текущего периода по всем действующим акциям."
            },
            "current_period_to": {
              "format": "date-time",
              "type": "string",
              "description": "Дата и время окончания текущего периода по всем действующим акциям."
            },
            "ozon_actions_exist": {
              "type": "boolean",
              "description": "Если к товару может быть применена акция за счёт Ozon — `true`."
            }
          },
          "type": "object"
        },
        "ItemPrice": {
          "type": "object",
          "description": "Цена товара.",
          "properties": {
            "auto_action_enabled": {
              "type": "boolean",
              "description": "Если автоприменение акций у товара включено — `true`."
            },
            "currency_code": {
              "type": "string",
              "description": "Валюта ваших цен. Совпадает с валютой, которая установлена в настройках личного кабинета.\n\nВозможные значения: \n  - `RUB` — российский рубль,\n  - `BYN` — белорусский рубль,\n  - `KZT` — тенге,\n  - `EUR` — евро,\n  - `USD` — доллар США,\n  - `CNY` — юань.\n"
            },
            "marketing_price": {
              "type": "string",
              "description": "Цена на товар с учетом всех акций. Это значение будет указано на витрине Ozon."
            },
            "marketing_seller_price": {
              "type": "string",
              "description": "Цена на товар с учетом акций продавца."
            },
            "min_ozon_price": {
              "type": "string",
              "description": "Минимальная цена на аналогичный товар на Ozon."
            },
            "min_price": {
              "type": "string",
              "description": "Минимальная цена товара после применения всех скидок."
            },
            "old_price": {
              "type": "string",
              "description": "Цена до учёта скидок. На карточке товара отображается зачёркнутой."
            },
            "premium_price": {
              "type": "string",
              "description": "Цена для клиентов с подпиской [Ozon Premium](https://docs.ozon.ru/common/ozon-premium/)."
            },
            "price": {
              "type": "string",
              "description": "Цена товара с учётом скидок — это значение показывается на карточке товара."
            },
            "recommended_price": {
              "type": "string",
              "description": "Цена на товар, рекомендованная системой на основании схожих предложений."
            },
            "retail_price": {
              "type": "string",
              "description": "Цена поставщика."
            },
            "vat": {
              "type": "string",
              "description": "Ставка НДС для товара."
            }
          }
        },
        "productGetProductInfoPricesV4ResponseItem": {
          "type": "object",
          "properties": {
            "commissions": {
              "$ref": "#/components/schemas/ItemCommissions"
            },
            "marketing_actions": {
              "$ref": "#/components/schemas/ItemMarketingActions"
            },
            "offer_id": {
              "type": "string",
              "description": "Идентификатор товара в системе продавца."
            },
            "price": {
              "$ref": "#/components/schemas/ItemPrice"
            },
            "price_index": {
              "type": "string",
              "description": "Параметр неактуален и будет удалён 1 мая 2023 года.\n\nЦеновой индекс.\n"
            },
            "price_indexes": {
              "$ref": "#/components/schemas/commonPriceIndexes"
            },
            "product_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор товара."
            },
            "volume_weight": {
              "type": "number",
              "format": "double",
              "description": "Объёмный вес товара."
            }
          }
        },
        "productGetProductInfoPricesV4ResponseResult": {
          "type": "object",
          "description": "Результаты запроса.",
          "properties": {
            "items": {
              "description": "Список товаров.",
              "items": {
                "$ref": "#/components/schemas/productGetProductInfoPricesV4ResponseItem"
              }
            },
            "last_id": {
              "type": "string",
              "description": "Идентификатор последнего значения на странице.\n\nЧтобы получить следующие значения, передайте полученное значение в следующем запросе в параметре `last_id`.\n"
            },
            "total": {
              "type": "integer",
              "format": "int32",
              "description": "Количество товаров в списке."
            }
          }
        },
        "productv4GetProductInfoPricesV4Response": {
          "type": "object",
          "properties": {
            "result": {
              "$ref": "#/components/schemas/productGetProductInfoPricesV4ResponseResult"
            }
          }
        },
        "v1GetProductInfoDiscountedRequest": {
          "type": "object",
          "properties": {
            "discounted_skus": {
              "description": "Список SKU уценённых товаров.",
              "items": {
                "type": "string",
                "format": "int64"
              }
            }
          }
        },
        "v1GetProductInfoDiscountedResponseItem": {
          "type": "object",
          "properties": {
            "comment_reason_damaged": {
              "type": "string",
              "description": "Комментарий к причине повреждения."
            },
            "condition": {
              "type": "string",
              "description": "Состояние товара — новый или Б/У."
            },
            "condition_estimation": {
              "type": "string",
              "description": "Состояние товара по шкале от 1 до 7:\n- 1 — удовлетворительное,\n- 2 — хорошее,\n- 3 — очень хорошее,\n- 4 — отличное,\n- 5–7 — как новый.\n"
            },
            "defects": {
              "type": "string",
              "description": "Дефекты товара."
            },
            "discounted_sku": {
              "type": "integer",
              "format": "int64",
              "description": "SKU уценённого товара."
            },
            "mechanical_damage": {
              "type": "string",
              "description": "Описание механического повреждения."
            },
            "package_damage": {
              "type": "string",
              "description": "Описание повреждения упаковки."
            },
            "packaging_violation": {
              "type": "string",
              "description": "Признак нарушения целостности упаковки."
            },
            "reason_damaged": {
              "type": "string",
              "description": "Причина повреждения."
            },
            "repair": {
              "type": "string",
              "description": "Признак, что товар отремонтирован."
            },
            "shortage": {
              "type": "string",
              "description": "Признак, что товар некомплектный."
            },
            "sku": {
              "type": "integer",
              "format": "int64",
              "description": "SKU основного товара."
            },
            "warranty_type": {
              "type": "string",
              "description": "Наличие у товара действующей гарантии."
            }
          }
        },
        "v1GetProductInfoDiscountedResponse": {
          "type": "object",
          "properties": {
            "items": {
              "description": "Информация об уценке и основном товаре.",
              "items": {
                "$ref": "#/components/schemas/v1GetProductInfoDiscountedResponseItem"
              }
            }
          }
        },
        "v1ProductUpdateDiscountRequest": {
          "type": "object",
          "properties": {
            "discount": {
              "type": "integer",
              "format": "int32",
              "description": "Размер скидки: от 3 до 99 процентов.\n"
            },
            "product_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор товара."
            }
          }
        },
        "v1ProductUpdateDiscountResponse": {
          "type": "object",
          "properties": {
            "result": {
              "type": "boolean",
              "description": "Результат работы метода. `true`, если запрос выполнен без ошибок."
            }
          }
        },
        "GetSellerActionsV1ResponseAction": {
          "type": "object",
          "properties": {
            "id": {
              "type": "number",
              "format": "double",
              "description": "Идентификатор акции."
            },
            "title": {
              "type": "string",
              "description": "Название акции."
            },
            "action_type": {
              "type": "string",
              "description": "Тип акции."
            },
            "description": {
              "type": "string",
              "description": "Описание акции."
            },
            "date_start": {
              "type": "string",
              "description": "Дата начала акции."
            },
            "date_end": {
              "type": "string",
              "description": "Дата окончания акции."
            },
            "freeze_date": {
              "type": "string",
              "description": "Дата приостановки акции.\n\nЕсли поле заполнено, продавец не может повышать цены, изменять список товаров и уменьшать количество единиц товаров в акции.\n\nПродавец может понижать цены и увеличивать количество единиц товара в акции.\n"
            },
            "potential_products_count": {
              "type": "number",
              "format": "double",
              "description": "Количество товаров, доступных для акции."
            },
            "participating_products_count": {
              "type": "number",
              "format": "double",
              "description": "Количество товаров, которые участвуют в акции."
            },
            "is_participating": {
              "type": "boolean",
              "description": "Участвуете вы в этой акции или нет."
            },
            "is_voucher_action": {
              "type": "boolean",
              "description": "Признак, что для участия в акции покупателям нужен промокод."
            },
            "banned_products_count": {
              "type": "number",
              "format": "double",
              "description": "Количество заблокированных товаров."
            },
            "with_targeting": {
              "type": "boolean",
              "description": "Признак, что акция с целевой аудиторией."
            },
            "order_amount": {
              "type": "number",
              "format": "double",
              "description": "Сумма заказа."
            },
            "discount_type": {
              "type": "string",
              "description": "Тип скидки."
            },
            "discount_value": {
              "type": "number",
              "format": "double",
              "description": "Размер скидки."
            }
          }
        },
        "seller_apiGetSellerActionsV1Response": {
          "type": "object",
          "properties": {
            "result": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GetSellerActionsV1ResponseAction"
              },
              "description": "Результаты запроса."
            }
          }
        },
        "seller_apiGetSellerProductV1Request": {
          "type": "object",
          "properties": {
            "action_id": {
              "type": "number",
              "format": "double",
              "description": "Идентификатор акции."
            },
            "limit": {
              "type": "number",
              "format": "double",
              "description": "Количество ответов на странице. По умолчанию — 100."
            },
            "offset": {
              "type": "number",
              "format": "double",
              "description": "Количество элементов, которое будет пропущено в ответе. Например, если `offset=10`, ответ начнётся с 11-го найденного элемента."
            }
          },
          "description": "Список товаров."
        },
        "seller_apiProduct": {
          "type": "object",
          "properties": {
            "id": {
              "type": "number",
              "format": "double",
              "description": "Идентификатор товара."
            },
            "price": {
              "type": "number",
              "format": "double",
              "description": "Текущая цена товара без скидки."
            },
            "action_price": {
              "type": "number",
              "format": "double",
              "description": "Цена товара по акции."
            },
            "max_action_price": {
              "type": "number",
              "format": "double",
              "description": "Максимально возможная цена товара по акции."
            },
            "add_mode": {
              "type": "string",
              "description": "Тип добавления товара в акцию: автоматически или вручную продавцом.\n"
            },
            "min_stock": {
              "type": "number",
              "format": "double",
              "description": "Минимальное число единиц товара в акции типа «Скидка на сток»."
            },
            "stock": {
              "type": "number",
              "format": "double",
              "description": "Число единиц товара в акции типа «Скидка на сток»."
            }
          }
        },
        "seller_apiGetSellerProductV1ResponseResult": {
          "type": "object",
          "properties": {
            "products": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/seller_apiProduct"
              },
              "description": "Список товаров."
            },
            "total": {
              "type": "number",
              "format": "double",
              "description": "Общее количество товаров, которое доступно для акции."
            }
          },
          "description": "Результаты запроса."
        },
        "seller_apiGetSellerProductV1Response": {
          "type": "object",
          "properties": {
            "result": {
              "$ref": "#/components/schemas/seller_apiGetSellerProductV1ResponseResult"
            }
          }
        },
        "seller_apiProductPrice": {
          "type": "object",
          "properties": {
            "product_id": {
              "type": "number",
              "format": "double",
              "description": "Идентификатор товара."
            },
            "action_price": {
              "type": "number",
              "format": "double",
              "description": "Цена товара по акции."
            },
            "stock": {
              "type": "number",
              "format": "double",
              "description": "Количество единиц товара в акции типа «Скидка на сток»."
            }
          }
        },
        "seller_apiActivateProductV1Request": {
          "type": "object",
          "properties": {
            "action_id": {
              "type": "number",
              "format": "double",
              "description": "Идентификатор акции."
            },
            "products": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/seller_apiProductPrice"
              },
              "description": "Список товаров."
            }
          }
        },
        "seller_apiProductV1ResponseProduct": {
          "type": "object",
          "properties": {
            "product_id": {
              "type": "number",
              "format": "double",
              "description": "Идентификатор товара."
            },
            "reason": {
              "type": "string",
              "description": "Причина, почему товар не добавлен в акцию."
            }
          }
        },
        "seller_apiProductV1ResponseResult": {
          "type": "object",
          "properties": {
            "product_ids": {
              "type": "array",
              "items": {
                "type": "number",
                "format": "double"
              },
              "description": "Список идентификаторов товаров, которые добавлены в акцию."
            },
            "rejected": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/seller_apiProductV1ResponseProduct"
              },
              "description": "Список товаров, которые не удалось добавить в акцию."
            }
          },
          "description": "Результаты запроса."
        },
        "seller_apiProductV1Response": {
          "type": "object",
          "properties": {
            "result": {
              "$ref": "#/components/schemas/seller_apiProductV1ResponseResult"
            }
          }
        },
        "seller_apiProductIDsV1Request": {
          "type": "object",
          "properties": {
            "action_id": {
              "type": "number",
              "format": "double",
              "description": "Идентификатор акции."
            },
            "product_ids": {
              "type": "array",
              "items": {
                "type": "number",
                "format": "double"
              },
              "description": "Список идентификаторов товаров."
            }
          }
        },
        "seller_apiProductV1ResponseProductDeactivate": {
          "type": "object",
          "properties": {
            "product_id": {
              "type": "number",
              "format": "double",
              "description": "Идентификатор товара."
            },
            "reason": {
              "type": "string",
              "description": "Причина, почему товар не удалён из акции."
            }
          }
        },
        "seller_apiProductV1ResponseResultDeactivate": {
          "type": "object",
          "properties": {
            "product_ids": {
              "type": "array",
              "items": {
                "type": "number",
                "format": "double"
              },
              "description": "Список идентификаторов товаров, которые удалены из акции."
            },
            "rejected": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/seller_apiProductV1ResponseProductDeactivate"
              },
              "description": "Список товаров, которые не удалось удалить из акции."
            }
          },
          "description": "Результаты запроса."
        },
        "seller_apiProductV1ResponseDeactivate": {
          "type": "object",
          "properties": {
            "result": {
              "$ref": "#/components/schemas/seller_apiProductV1ResponseResultDeactivate"
            }
          }
        },
        "v1GetHotSalesListRequest": {
          "type": "object"
        },
        "GetHotSalesListResponseHotSale": {
          "type": "object",
          "properties": {
            "date_end": {
              "type": "string",
              "description": "Дата окончания акции."
            },
            "date_start": {
              "type": "string",
              "description": "Дата начала акции."
            },
            "description": {
              "type": "string",
              "description": "Описание акции."
            },
            "freeze_date": {
              "type": "string",
              "description": "Дата приостановки акции.\n\nЕсли поле заполнено, продавец не может повышать цены, изменять список товаров и уменьшать количество единиц товаров в акции.\n\nПродавец может понижать цены и увеличивать количество единиц товара в акции.\n"
            },
            "hotsale_id": {
              "type": "number",
              "format": "double",
              "description": "Идентификатор акции Hot Sale."
            },
            "is_participating": {
              "type": "boolean",
              "description": "Признак, что вы участвуете в этой акции."
            },
            "title": {
              "type": "string",
              "description": "Название акции."
            }
          }
        },
        "v1GetHotSalesListResponse": {
          "type": "object",
          "properties": {
            "result": {
              "description": "Результат работы метода.",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GetHotSalesListResponseHotSale"
              }
            }
          }
        },
        "v1GetHotSalesProductsRequest": {
          "type": "object",
          "properties": {
            "hotsale_id": {
              "type": "number",
              "format": "double",
              "description": "Идентификатор акции Hot Sale."
            },
            "limit": {
              "type": "number",
              "format": "double",
              "description": "Количество элементов в ответе. По умолчанию — 100."
            },
            "offset": {
              "type": "number",
              "format": "double",
              "description": "Количество элементов, которое будет пропущено в ответе. Например, если `offset = 10`, то ответ начнётся с 11-го найденного элемента."
            }
          }
        },
        "v1HotSaleProduct": {
          "type": "object",
          "properties": {
            "action_price": {
              "type": "number",
              "format": "double",
              "description": "Цена товара по акции."
            },
            "date_day_promo": {
              "type": "string",
              "description": "Дата участия товара в акции в формате `YYYY-MM-DD`."
            },
            "id": {
              "type": "number",
              "format": "double",
              "description": "Идентификатор товара."
            },
            "is_active": {
              "type": "boolean",
              "description": "Признак участия товара в акции."
            },
            "max_action_price": {
              "type": "number",
              "format": "double",
              "description": "Максимально возможная цена товара по акции."
            },
            "min_stock": {
              "type": "number",
              "format": "double",
              "description": "Минимальное число единиц товара в акции типа «Скидка на сток»."
            },
            "stock": {
              "type": "number",
              "format": "double",
              "description": "Число единиц товара в акции типа «Скидка на сток»."
            }
          }
        },
        "v1GetHotSalesProductsResponseResult": {
          "type": "object",
          "description": "Результат работы метода.",
          "properties": {
            "products": {
              "description": "Список товаров.",
              "items": {
                "$ref": "#/components/schemas/v1HotSaleProduct"
              }
            },
            "total": {
              "type": "number",
              "format": "double",
              "description": "Общее количество товаров, которое доступно для акции."
            }
          }
        },
        "v1GetHotSalesProductsResponse": {
          "type": "object",
          "properties": {
            "result": {
              "$ref": "#/components/schemas/v1GetHotSalesProductsResponseResult"
            }
          }
        },
        "v1ActivateHotSalesProductsRequestActivateProduct": {
          "type": "object",
          "properties": {
            "action_price": {
              "type": "number",
              "format": "double",
              "description": "Цена товара по акции."
            },
            "product_id": {
              "type": "number",
              "format": "double",
              "description": "Идентификатор товара."
            },
            "stock": {
              "type": "number",
              "format": "double",
              "description": "Число единиц товара в акции типа «Скидка на сток»."
            }
          }
        },
        "v1ActivateHotSalesProductsRequest": {
          "type": "object",
          "properties": {
            "hotsale_id": {
              "type": "number",
              "format": "double",
              "description": "Идентификатор акции Hot Sale."
            },
            "products": {
              "type": "array",
              "description": "Товары, которые нужно добавить в акцию. Максимальное количество в одном запросе — 100.",
              "items": {
                "$ref": "#/components/schemas/v1ActivateHotSalesProductsRequestActivateProduct"
              }
            }
          }
        },
        "v1SetActivateHotSaleProductsResultProduct": {
          "type": "object",
          "description": "Товары, которые не получилось добавить в акцию.",
          "properties": {
            "product_id": {
              "description": "Идентификатор товара.",
              "type": "number",
              "format": "double"
            },
            "reason": {
              "type": "string",
              "description": "Причина, почему товар не добавлен в акцию."
            }
          }
        },
        "v1SetActivateHotSaleProductsResultResult": {
          "type": "object",
          "description": "Результат работы метода.",
          "properties": {
            "rejected": {
              "type": "array",
              "description": "Список товаров, которые не удалось добавить в акцию.",
              "items": {
                "$ref": "#/components/schemas/v1SetActivateHotSaleProductsResultProduct"
              }
            }
          }
        },
        "v1SetActivateHotSaleProductsResult": {
          "type": "object",
          "properties": {
            "result": {
              "$ref": "#/components/schemas/v1SetActivateHotSaleProductsResultResult"
            }
          }
        },
        "v1DeactivateHotSalesProductsRequest": {
          "type": "object",
          "properties": {
            "hotsale_id": {
              "type": "number",
              "format": "double",
              "description": "Идентификатор акции Hot Sale."
            },
            "product_ids": {
              "type": "array",
              "items": {
                "type": "number",
                "format": "double"
              },
              "description": "Список идентификаторов товаров. Максимальное количество в одном запросе — 100."
            }
          }
        },
        "v1SetDeactivateHotSaleProductsResultProduct": {
          "type": "object",
          "description": "Товары, которые не получилось удалить из акции.",
          "properties": {
            "product_id": {
              "description": "Идентификатор товара.",
              "type": "number",
              "format": "double"
            },
            "reason": {
              "type": "string",
              "description": "Причина, почему товар не удалён из акции."
            }
          }
        },
        "v1SetDeactivateHotSaleProductsResultResult": {
          "type": "object",
          "description": "Результат работы метода.",
          "properties": {
            "rejected": {
              "type": "array",
              "description": "Список товаров, которые не удалось удалить из акции.",
              "items": {
                "$ref": "#/components/schemas/v1SetDeactivateHotSaleProductsResultProduct"
              }
            }
          }
        },
        "v1SetDeactivateHotSaleProductsResult": {
          "type": "object",
          "properties": {
            "result": {
              "$ref": "#/components/schemas/v1SetDeactivateHotSaleProductsResultResult"
            }
          }
        },
        "v1DiscountTaskStatus": {
          "type": "string",
          "default": "UNKNOWN",
          "enum": [
            "NEW",
            "SEEN",
            "APPROVED",
            "PARTLY_APPROVED",
            "DECLINED",
            "AUTO_DECLINED",
            "DECLINED_BY_USER",
            "COUPON",
            "PURCHASED"
          ],
          "description": "Статус заявки на скидку:\n- `NEW` — новая,\n- `SEEN` — просмотренная,\n- `APPROVED` — одобренная,\n- `PARTLY_APPROVED` — одобренная частично,\n- `DECLINED` — отклонённая,\n- `AUTO_DECLINED` — отклонена автоматически,\n- `DECLINED_BY_USER` — отклонена покупателем,\n- `COUPON` — скидка по купону,\n- `PURCHASED` — купленная.\n"
        },
        "v1GetDiscountTaskListRequest": {
          "type": "object",
          "properties": {
            "status": {
              "$ref": "#/components/schemas/v1DiscountTaskStatus"
            },
            "page": {
              "type": "integer",
              "format": "uint64",
              "description": "Страница, с которой нужно выгрузить список заявок на скидку."
            },
            "limit": {
              "type": "integer",
              "format": "uint64",
              "description": "Максимальное количество заявок на странице."
            }
          }
        },
        "v1GetDiscountTaskListResponseTask": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "uint64",
              "description": "Идентификатор заявки."
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "description": "Дата создания заявки."
            },
            "end_at": {
              "type": "string",
              "format": "date-time",
              "description": "Время окончания действия заявки."
            },
            "edited_till": {
              "type": "string",
              "format": "date-time",
              "description": "Время для изменения решения."
            },
            "status": {
              "type": "string",
              "description": "Статус заявки."
            },
            "customer_name": {
              "type": "string",
              "description": "Имя покупателя."
            },
            "sku": {
              "type": "integer",
              "format": "uint64",
              "description": "Идентификатор товара в системе Ozon — SKU."
            },
            "user_comment": {
              "type": "string",
              "description": "Комментарий покупателя к заявке."
            },
            "seller_comment": {
              "type": "string",
              "description": "Комментарий продавца к заявке."
            },
            "requested_price": {
              "type": "number",
              "format": "double",
              "description": "Цена по заявке."
            },
            "approved_price": {
              "type": "number",
              "format": "double",
              "description": "Одобренная цена."
            },
            "original_price": {
              "type": "number",
              "format": "double",
              "description": "Цена товара до всех скидок."
            },
            "discount": {
              "type": "number",
              "format": "double",
              "description": "Скидка в рублях."
            },
            "discount_percent": {
              "type": "number",
              "format": "double",
              "description": "Скидка в процентах."
            },
            "base_price": {
              "type": "number",
              "format": "double",
              "description": "Базовая цена, по которой товар продаётся на Ozon, если не участвует в акции."
            },
            "min_auto_price": {
              "type": "number",
              "format": "double",
              "description": "Минимальное значение цены после автоприменения скидок и акций."
            },
            "prev_task_id": {
              "type": "integer",
              "format": "uint64",
              "description": "Идентификатор предыдущей заявки от покупателя по этому товару."
            },
            "is_damaged": {
              "type": "boolean",
              "description": "Является ли товар уценённым. `true`, если уценённый."
            },
            "moderated_at": {
              "type": "string",
              "format": "date-time",
              "description": "Дата модерации: просмотра, одобрения или отклонения заявки.\n"
            },
            "approved_discount": {
              "type": "number",
              "format": "double",
              "description": "Скидка в рублях, которую одобрил продавец. Передайте значение `0`, если продавец не одобрял заявку."
            },
            "approved_discount_percent": {
              "type": "number",
              "format": "double",
              "description": "Скидка в процентах, которую одобрил продавец. Передайте значение `0`, если продавец не одобрял заявку."
            },
            "is_purchased": {
              "type": "boolean",
              "description": "Покупал ли пользователь товар. `true`, если покупал."
            },
            "is_auto_moderated": {
              "type": "boolean",
              "description": "Была ли заявка промодерирована автоматически. `true`, если модерация была автоматической."
            },
            "offer_id": {
              "type": "string",
              "description": "Артикул товара."
            },
            "email": {
              "type": "string",
              "description": "Электронный адрес сотрудника продавца, который обработал заявку."
            },
            "last_name": {
              "type": "string",
              "description": "Фамилия сотрудника продавца, который обработал заявку."
            },
            "first_name": {
              "type": "string",
              "description": "Имя сотрудника продавца, который обработал заявку."
            },
            "patronymic": {
              "type": "string",
              "description": "Отчество сотрудника продавца, который обработал заявку."
            },
            "approved_quantity_min": {
              "type": "integer",
              "format": "uint64",
              "description": "Минимальное одобренное количество товаров."
            },
            "approved_quantity_max": {
              "type": "integer",
              "format": "uint64",
              "description": "Максимальное одобренное количество товаров."
            },
            "requested_quantity_min": {
              "type": "integer",
              "format": "uint64",
              "description": "Запрошенное минимальное количество товаров."
            },
            "requested_quantity_max": {
              "type": "integer",
              "format": "uint64",
              "description": "Запрошенное максимальное количество товаров."
            },
            "requested_price_with_fee": {
              "type": "number",
              "format": "double",
              "description": "Цена по заявке c региональной наценкой."
            },
            "approved_price_with_fee": {
              "type": "number",
              "format": "double",
              "description": "Одобренная цена с региональной наценкой."
            },
            "approved_price_fee_percent": {
              "type": "number",
              "format": "double",
              "description": "Региональная наценка в процентах."
            }
          }
        },
        "v1GetDiscountTaskListResponse": {
          "type": "object",
          "properties": {
            "result": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/v1GetDiscountTaskListResponseTask"
              },
              "description": "Список заявок."
            }
          }
        },
        "v1ApproveDiscountTasksRequestTask": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "uint64",
              "description": "Идентификатор заявки."
            },
            "approved_price": {
              "type": "number",
              "format": "double",
              "description": "Согласованная цена."
            },
            "seller_comment": {
              "type": "string",
              "description": "Комментарий продавца к заявке."
            },
            "approved_quantity_min": {
              "type": "integer",
              "format": "uint64",
              "description": "Одобренное минимальное количество товаров."
            },
            "approved_quantity_max": {
              "type": "integer",
              "format": "uint64",
              "description": "Одобренное максимальное количество товаров."
            }
          }
        },
        "v1ApproveDiscountTasksRequest": {
          "type": "object",
          "properties": {
            "tasks": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/v1ApproveDiscountTasksRequestTask"
              },
              "description": "Список заявок."
            }
          }
        },
        "ApproveDeclineDiscountTasksResponseFailDetail": {
          "type": "object",
          "properties": {
            "task_id": {
              "type": "integer",
              "format": "uint64",
              "description": "Идентификатор заявки."
            },
            "error_for_user": {
              "type": "string",
              "description": "Текст ошибки."
            }
          }
        },
        "v1ApproveDeclineDiscountTasksResponseResult": {
          "type": "object",
          "properties": {
            "fail_details": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ApproveDeclineDiscountTasksResponseFailDetail"
              },
              "description": "Ошибки при создании заявки."
            },
            "success_count": {
              "type": "integer",
              "format": "int32",
              "description": "Количество заявок с успешной сменой статуса."
            },
            "fail_count": {
              "type": "integer",
              "format": "int32",
              "description": "Количество заявок, у которых не удалось сменить статус."
            }
          },
          "description": "Результат работы метода."
        },
        "v1ApproveDeclineDiscountTasksResponse": {
          "type": "object",
          "properties": {
            "result": {
              "$ref": "#/components/schemas/v1ApproveDeclineDiscountTasksResponseResult"
            }
          }
        },
        "v1DeclineDiscountTasksRequestTask": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "uint64",
              "description": "Идентификатор заявки."
            },
            "seller_comment": {
              "type": "string",
              "description": "Комментарий продавца к заявке."
            }
          }
        },
        "v1DeclineDiscountTasksRequest": {
          "type": "object",
          "properties": {
            "tasks": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/v1DeclineDiscountTasksRequestTask"
              },
              "description": "Список заявок."
            }
          }
        },
        "v1GetCompetitorsRequest": {
          "type": "object",
          "properties": {
            "page": {
              "type": "integer",
              "format": "int64",
              "description": "Страница списка, с которой нужно выгрузить конкурентов. Минимальное значение — `1`."
            },
            "limit": {
              "type": "integer",
              "format": "int64",
              "description": "Максимальное количество конкурентов на странице. Допустимы значения от `1` до `50`."
            }
          }
        },
        "GetCompetitorsResponseCompetitorInfo": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Название конкурента."
            },
            "id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор конкурента."
            }
          }
        },
        "v1GetCompetitorsResponse": {
          "type": "object",
          "properties": {
            "competitor": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GetCompetitorsResponseCompetitorInfo"
              },
              "description": "Список конкурентов."
            },
            "total": {
              "type": "integer",
              "format": "int32",
              "description": "Общее количество конкурентов."
            }
          }
        },
        "v1GetStrategyListRequest": {
          "type": "object",
          "properties": {
            "page": {
              "type": "integer",
              "format": "int64",
              "description": "Страница списка, с которой нужно выгрузить стратегии. Минимальное значение — `1`."
            },
            "limit": {
              "type": "integer",
              "format": "int64",
              "description": "Максимальное количество стратегий на странице. Допустимые значения — от `1` до `50`."
            }
          }
        },
        "GetStrategyListResponseStrategy": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Идентификатор стратегии"
            },
            "name": {
              "type": "string",
              "description": "Название стратегии."
            },
            "type": {
              "type": "string",
              "description": "Тип стратегии:\n- `MIN_EXT_PRICE` — системная,\n- `COMP_PRICE` — пользовательская.\n"
            },
            "update_type": {
              "type": "string",
              "description": "Тип последнего изменения стратегии:\n- `strategyEnabled` — возобновлена,\n- `strategyDisabled` — остановлена,\n- `strategyChanged` — обновлена,\n- `strategyCreated` — создана,\n- `strategyItemsListChanged` — изменён набор товаров в стратегии.\n"
            },
            "updated_at": {
              "type": "string",
              "description": "Дата последнего изменения."
            },
            "products_count": {
              "type": "integer",
              "format": "int64",
              "description": "Количество товаров в стратегии."
            },
            "competitors_count": {
              "type": "integer",
              "format": "int64",
              "description": "Количество выбранных конкурентов."
            },
            "enabled": {
              "type": "boolean",
              "description": "Статус стратегии:\n- `true` — включена,\n- `false` — отключена.\n"
            }
          }
        },
        "v1GetStrategyListResponse": {
          "type": "object",
          "properties": {
            "strategies": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GetStrategyListResponseStrategy"
              },
              "description": "Список стратегий."
            },
            "total": {
              "type": "integer",
              "format": "int32",
              "description": "Общее количество стратегий."
            }
          }
        },
        "v1Competitor": {
          "type": "object",
          "properties": {
            "coefficient": {
              "type": "number",
              "format": "float",
              "description": "Коэффициент, на который будет умножаться минимальная цена среди конкурентов. Допустимый диапазон — от `0.5` до `1.2`."
            },
            "competitor_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор конкурента."
            }
          }
        },
        "v1CreatePricingStrategyRequest": {
          "type": "object",
          "properties": {
            "competitors": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/v1Competitor"
              },
              "description": "Список конкурентов."
            },
            "strategy_name": {
              "type": "string",
              "description": "Название стратегии."
            }
          }
        },
        "v1CreatePricingStrategyResponseResult": {
          "type": "object",
          "description": "Результат работы метода.",
          "properties": {
            "strategy_id": {
              "type": "string",
              "description": "Идентификатор стратегии."
            }
          }
        },
        "v1CreatePricingStrategyResponse": {
          "type": "object",
          "properties": {
            "result": {
              "$ref": "#/components/schemas/v1CreatePricingStrategyResponseResult"
            }
          }
        },
        "v1StrategyRequest": {
          "type": "object",
          "properties": {
            "strategy_id": {
              "type": "string",
              "description": "Идентификатор стратегии."
            }
          }
        },
        "v1GetStrategyResponseResult": {
          "type": "object",
          "description": "Результат работы метода.",
          "properties": {
            "competitors": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/v1Competitor"
              },
              "description": "Список конкурентов."
            },
            "enabled": {
              "type": "boolean",
              "description": "Статус стратегии:\n- `true` — включена,\n- `false` — отключена.\n"
            },
            "name": {
              "type": "string",
              "description": "Название стратегии."
            },
            "type": {
              "type": "string",
              "description": "Тип стратегии:\n- `MIN_EXT_PRICE` — системная стратегия,\n- `COMP_PRICE` — пользовательская стратегия.\n"
            },
            "update_type": {
              "type": "string",
              "description": "Тип последнего изменения стратегии:\n  - `strategyEnabled` — возобновлена,\n  - `strategyDisabled` — остановлена,\n  - `strategyChanged` — обновлена,\n  - `strategyCreated` — создана,\n  - `strategyItemsListChanged` — изменён набор товаров в стратегии.\n"
            }
          }
        },
        "v1GetStrategyResponse": {
          "type": "object",
          "properties": {
            "result": {
              "$ref": "#/components/schemas/v1GetStrategyResponseResult"
            }
          }
        },
        "v1UpdatePricingStrategyRequest": {
          "type": "object",
          "properties": {
            "competitors": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/v1Competitor"
              },
              "description": "Список конкурентов."
            },
            "strategy_id": {
              "type": "string",
              "description": "Идентификатор стратегии."
            },
            "strategy_name": {
              "type": "string",
              "description": "Название стратегии."
            }
          }
        },
        "v1AddStrategyItemsRequest": {
          "type": "object",
          "properties": {
            "product_id": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "int64"
              },
              "description": "Список идентификаторов товаров. Максимальное количество — 50."
            },
            "strategy_id": {
              "type": "string",
              "description": "Идентификатор стратегии."
            }
          }
        },
        "AddStrategyItemsResponseError": {
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "description": "Код ошибки."
            },
            "error": {
              "type": "string",
              "description": "Текст ошибки."
            },
            "product_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор товара."
            }
          }
        },
        "v1AddStrategyItemsResponseResult": {
          "type": "object",
          "description": "Результат работы метода.",
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AddStrategyItemsResponseError"
              },
              "description": "Товары с ошибками."
            },
            "failed_product_count": {
              "type": "integer",
              "format": "int32",
              "description": "Количество товаров с ошибками."
            }
          }
        },
        "v1AddStrategyItemsResponse": {
          "type": "object",
          "properties": {
            "result": {
              "$ref": "#/components/schemas/v1AddStrategyItemsResponseResult"
            }
          }
        },
        "v1ItemIDsRequest": {
          "type": "object",
          "properties": {
            "product_id": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "int64"
              },
              "description": "Список идентификаторов товаров. Максимальное количество — 50."
            }
          }
        },
        "GetStrategyIDsByItemIDsResponseProductInfo": {
          "type": "object",
          "properties": {
            "product_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор товара."
            },
            "strategy_id": {
              "type": "string",
              "description": "Идентификатор стратегии, в которую добавлен товар."
            }
          }
        },
        "v1GetStrategyIDsByItemIDsResponseResult": {
          "type": "object",
          "description": "Результат работы метода.",
          "properties": {
            "products_info": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GetStrategyIDsByItemIDsResponseProductInfo"
              },
              "description": "Информация о товаре."
            }
          }
        },
        "v1GetStrategyIDsByItemIDsResponse": {
          "type": "object",
          "properties": {
            "result": {
              "$ref": "#/components/schemas/v1GetStrategyIDsByItemIDsResponseResult"
            }
          }
        },
        "v1GetStrategyItemsResponseResult": {
          "type": "object",
          "description": "Список товаров.",
          "properties": {
            "product_id": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "int64"
              },
              "description": "Идентификатор товара."
            }
          }
        },
        "v1GetStrategyItemsResponse": {
          "type": "object",
          "properties": {
            "result": {
              "$ref": "#/components/schemas/v1GetStrategyItemsResponseResult"
            }
          }
        },
        "v1GetStrategyItemInfoRequest": {
          "type": "object",
          "properties": {
            "product_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор товара."
            }
          }
        },
        "v1GetStrategyItemInfoResponseResult": {
          "type": "object",
          "description": "Результат работы метода.",
          "properties": {
            "strategy_id": {
              "type": "string",
              "description": "Идентификатор стратегии."
            },
            "is_enabled": {
              "type": "boolean",
              "description": "`true`, если товар участвует в стратегии ценообразования.\n"
            },
            "strategy_product_price": {
              "type": "integer",
              "format": "int32",
              "description": "Цена по стратегии."
            },
            "price_downloaded_at": {
              "type": "string",
              "description": "Дата установки цены по стратегии."
            },
            "strategy_competitor_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор конкурента."
            },
            "strategy_competitor_product_url": {
              "type": "string",
              "description": "Ссылка на товар конкурента."
            }
          }
        },
        "v1GetStrategyItemInfoResponse": {
          "type": "object",
          "properties": {
            "result": {
              "$ref": "#/components/schemas/v1GetStrategyItemInfoResponseResult"
            }
          }
        },
        "v1DeleteStrategyItemsResponseResult": {
          "type": "object",
          "description": "Результат работы метода.",
          "properties": {
            "failed_product_count": {
              "type": "integer",
              "format": "int32",
              "description": "Количество товаров с ошибками."
            }
          }
        },
        "v1DeleteStrategyItemsResponse": {
          "type": "object",
          "properties": {
            "result": {
              "$ref": "#/components/schemas/v1DeleteStrategyItemsResponseResult"
            }
          }
        },
        "v1UpdateStatusStrategyRequest": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Статус стратегии:\n- `true` — включена,\n- `false` — отключена.\n"
            },
            "strategy_id": {
              "type": "string",
              "description": "Идентификатор стратегии."
            }
          }
        },
        "brandBrandCompanyCertificationListRequest": {
          "properties": {
            "page": {
              "format": "int32",
              "type": "integer",
              "description": "Номер страницы, возвращаемой в запросе."
            },
            "page_size": {
              "format": "int32",
              "type": "integer",
              "description": "Количество элементов на странице."
            }
          },
          "type": "object"
        },
        "BrandCompanyCertificationListResponseBrandCertification": {
          "properties": {
            "brand_name": {
              "type": "string",
              "description": "Название бренда."
            },
            "has_certificate": {
              "type": "boolean",
              "description": "Признак, что требуется сертификат:\n- `true` — требуется сертификат;\n- `false` — сертификат не нужен.\n"
            }
          },
          "type": "object"
        },
        "BrandCompanyCertificationListResponseBrandCertificationResult": {
          "properties": {
            "brand_certification": {
              "items": {
                "$ref": "#/components/schemas/BrandCompanyCertificationListResponseBrandCertification"
              },
              "type": "array",
              "description": "Информация о сертифицируемых брендах."
            },
            "total": {
              "format": "int64",
              "type": "integer",
              "description": "Общее количество брендов."
            }
          },
          "type": "object",
          "description": "Результат запроса."
        },
        "brandBrandCompanyCertificationListResponse": {
          "properties": {
            "result": {
              "$ref": "#/components/schemas/BrandCompanyCertificationListResponseBrandCertificationResult"
            }
          },
          "type": "object"
        },
        "productProductCertificateAccordanceTypesResponseType": {
          "properties": {
            "name": {
              "type": "string",
              "description": "Название документа."
            },
            "value": {
              "type": "string",
              "description": "Значение справочника."
            }
          },
          "type": "object"
        },
        "productProductCertificateAccordanceTypesResponse": {
          "properties": {
            "result": {
              "items": {
                "$ref": "#/components/schemas/productProductCertificateAccordanceTypesResponseType"
              },
              "type": "array",
              "description": "Список типов и названий сертификатов."
            }
          },
          "type": "object"
        },
        "googlerpcStatus": {
          "type": "object",
          "properties": {
            "code": {
              "type": "integer",
              "format": "int32",
              "description": "Код ошибки."
            },
            "details": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/protobufAny"
              },
              "description": "Дополнительная информация об ошибке."
            },
            "message": {
              "type": "string",
              "description": "Описание ошибки."
            }
          }
        },
        "v2ProductCertificateAccordanceTypesResponseType": {
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "description": "Код типа соответствия требованиям."
            },
            "title": {
              "type": "string",
              "description": "Описание типа соответствия требованиям."
            }
          }
        },
        "v2ProductCertificateAccordanceTypesResponseResult": {
          "type": "object",
          "properties": {
            "base": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/v2ProductCertificateAccordanceTypesResponseType"
              },
              "description": "Основные типы соответствия требованиям."
            },
            "hazard": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/v2ProductCertificateAccordanceTypesResponseType"
              },
              "description": "Типов соответствия требованиям, относящиеся к опасным товарам."
            }
          },
          "description": "Список типов соответствия требованиям."
        },
        "v2ProductCertificateAccordanceTypesResponse": {
          "type": "object",
          "properties": {
            "result": {
              "$ref": "#/components/schemas/v2ProductCertificateAccordanceTypesResponseResult"
            }
          }
        },
        "productProductCertificateTypesResponseType": {
          "properties": {
            "name": {
              "type": "string",
              "description": "Название документа."
            },
            "value": {
              "type": "string",
              "description": "Значение справочника."
            }
          },
          "type": "object"
        },
        "productProductCertificateTypesResponse": {
          "properties": {
            "result": {
              "items": {
                "$ref": "#/components/schemas/productProductCertificateTypesResponseType"
              },
              "type": "array",
              "description": "Список типов и названий сертификатов."
            }
          },
          "type": "object"
        },
        "productProductCertificationListRequest": {
          "properties": {
            "page": {
              "format": "int32",
              "type": "integer",
              "description": "Номер страницы, возвращаемой в запросе."
            },
            "page_size": {
              "format": "int32",
              "type": "integer",
              "description": "Количество элементов на странице."
            }
          },
          "type": "object"
        },
        "ProductCertificationListResponseCertification": {
          "properties": {
            "category_name": {
              "type": "string",
              "description": "Название сертифицируемой категории."
            },
            "is_required": {
              "type": "boolean",
              "description": "Признак обязательной характеристики."
            }
          },
          "type": "object"
        },
        "ProductCertificationListResponseCertificationResult": {
          "properties": {
            "certification": {
              "items": {
                "$ref": "#/components/schemas/ProductCertificationListResponseCertification"
              },
              "type": "array",
              "description": "Информация о сертифицируемых категориях."
            },
            "total": {
              "format": "int64",
              "type": "integer",
              "description": "Всего категорий."
            }
          },
          "type": "object",
          "description": "Результат запроса."
        },
        "productProductCertificationListResponse": {
          "properties": {
            "result": {
              "$ref": "#/components/schemas/ProductCertificationListResponseCertificationResult"
            }
          },
          "type": "object"
        },
        "productProductCertificateBindRequest": {
          "properties": {
            "certificate_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор сертификата, который был присвоен при его загрузке."
            },
            "product_id": {
              "items": {
                "format": "int64",
                "type": "integer"
              },
              "type": "array",
              "description": "Массив идентификаторов товаров, к которым относится этот сертификат."
            }
          },
          "type": "object"
        },
        "v1ProductCertificateDeleteRequest": {
          "type": "object",
          "properties": {
            "certificate_id": {
              "type": "integer",
              "format": "int32",
              "description": "Идентификатор сертификата."
            }
          },
          "required": ["certificate_id"]
        },
        "v1ProductCertificateDeleteResponseResult": {
          "type": "object",
          "properties": {
            "is_delete": {
              "type": "boolean",
              "description": "Удалён ли сертификат:\n- `true` — удалён,\n- `false` — не удалён.\n"
            },
            "error_message": {
              "type": "string",
              "description": "Описание ошибок при удалении сертификата."
            }
          },
          "description": "Результат удаления сертификата."
        },
        "v1ProductCertificateDeleteResponse": {
          "type": "object",
          "properties": {
            "result": {
              "$ref": "#/components/schemas/v1ProductCertificateDeleteResponseResult"
            }
          }
        },
        "v1ProductCertificateInfoRequest": {
          "type": "object",
          "properties": {
            "certificate_number": {
              "type": "string",
              "description": "Идентификатор сертификата."
            }
          },
          "required": ["certificate_number"]
        },
        "v1Certificate": {
          "type": "object",
          "properties": {
            "certificate_id": {
              "type": "integer",
              "format": "int32",
              "description": "Идентификатор."
            },
            "certificate_number": {
              "type": "string",
              "description": "Номер."
            },
            "certificate_name": {
              "type": "string",
              "description": "Название."
            },
            "type_code": {
              "type": "string",
              "description": "Тип."
            },
            "status_code": {
              "type": "string",
              "description": "Статус."
            },
            "accordance_type_code": {
              "type": "string",
              "description": "Тип соответствия требованиям."
            },
            "rejection_reason_code": {
              "type": "string",
              "description": "Причина отклонения сертификата."
            },
            "verification_comment": {
              "type": "string",
              "description": "Комментарий модератора."
            },
            "issue_date": {
              "type": "string",
              "format": "date-time",
              "description": "Дата создания."
            },
            "expire_date": {
              "type": "string",
              "format": "date-time",
              "description": "Дата окончания действия."
            },
            "products_count": {
              "type": "integer",
              "format": "int32",
              "description": "Количество товаров, привязанных к сертификату."
            }
          },
          "description": "Информация о сертификате."
        },
        "v1ProductCertificateInfoResponse": {
          "type": "object",
          "properties": {
            "result": {
              "$ref": "#/components/schemas/v1Certificate"
            }
          }
        },
        "v1ProductCertificateListRequest": {
          "type": "object",
          "properties": {
            "offer_id": {
              "type": "string",
              "description": "Артикул товара, привязанного к сертификату. Передайте параметр, если нужны сертификаты, к которым привязаны определённые товары."
            },
            "status": {
              "type": "string",
              "description": "Статус сертификата. Передайте параметр, если нужны сертификаты с определённым статусом."
            },
            "type": {
              "type": "string",
              "description": "Тип сертификата. Передайте параметр, если нужны сертификаты с определённым типом."
            },
            "page": {
              "type": "integer",
              "format": "int32",
              "description": "Страница, с которой следует выводить список. Минимальное значение — 1."
            },
            "page_size": {
              "type": "integer",
              "format": "int32",
              "description": "Количество объектов на странице. Значение — от 1 до 1000."
            }
          },
          "required": ["page", "page_size"]
        },
        "v1ProductCertificateListResponseResult": {
          "type": "object",
          "properties": {
            "certificates": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/v1Certificate"
              },
              "description": "Информация о сертификате."
            },
            "page_count": {
              "type": "integer",
              "format": "int32",
              "description": "Количество страниц."
            }
          },
          "description": "Список сертификатов."
        },
        "v1ProductCertificateListResponse": {
          "type": "object",
          "properties": {
            "result": {
              "$ref": "#/components/schemas/v1ProductCertificateListResponseResult"
            }
          }
        },
        "v1ProductCertificateProductStatusListRequest": {
          "type": "object"
        },
        "v1StatusCodeNamePair": {
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "description": "Код статуса товара при привязке к сертификату."
            },
            "name": {
              "type": "string",
              "description": "Описание статуса."
            }
          }
        },
        "v1ProductCertificateProductStatusListResponse": {
          "type": "object",
          "properties": {
            "result": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/v1StatusCodeNamePair"
              },
              "description": "Список статусов товаров."
            }
          }
        },
        "v1ProductCertificateProductsListRequest": {
          "type": "object",
          "properties": {
            "certificate_id": {
              "type": "integer",
              "format": "int32",
              "description": "Идентификатор сертификата."
            },
            "product_status_code": {
              "type": "string",
              "description": "Статус проверки товара при привязке к сертификату."
            },
            "page": {
              "type": "integer",
              "format": "int32",
              "description": "Номер страницы, с которой выводить список. Минимальное значение — 1."
            },
            "page_size": {
              "type": "integer",
              "format": "int32",
              "description": "Количество объектов на странице. Значение — от 1 до 1000."
            }
          },
          "required": ["certificate_id", "page", "page_size"]
        },
        "ProductCertificateProductsListResponseProduct": {
          "type": "object",
          "properties": {
            "product_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор товара."
            },
            "product_status_code": {
              "type": "string",
              "description": "Статус обработки товара при привязке к сертификату."
            }
          }
        },
        "v1ProductCertificateProductsListResponseResult": {
          "type": "object",
          "properties": {
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ProductCertificateProductsListResponseProduct"
              },
              "description": "Список товаров."
            },
            "count": {
              "type": "integer",
              "format": "int64",
              "description": "Количество найденных товаров."
            }
          },
          "description": "Товары, привязанные к сертификату."
        },
        "v1ProductCertificateProductsListResponse": {
          "type": "object",
          "properties": {
            "result": {
              "$ref": "#/components/schemas/v1ProductCertificateProductsListResponseResult"
            }
          }
        },
        "v1ProductCertificateUnbindRequest": {
          "type": "object",
          "properties": {
            "certificate_id": {
              "type": "integer",
              "format": "int32",
              "description": "Идентификатор сертификата."
            },
            "product_id": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "int64",
                "description": "Идентификатор товара."
              },
              "description": "Список идентификаторов товара, которые нужно отвязать от сертификата."
            }
          },
          "required": ["certificate_id", "product_id"]
        },
        "ProductCertificateUnbindResponseItem": {
          "type": "object",
          "properties": {
            "error": {
              "type": "string",
              "description": "Сообщение об ошибке при отвязывании товара."
            },
            "product_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор товара."
            },
            "updated": {
              "type": "boolean",
              "description": "Был ли отвязан товар от сертификата:\n- `true` — отвязан,\n- `false` — не отвязан.\n"
            }
          }
        },
        "v1ProductCertificateUnbindResponse": {
          "type": "object",
          "properties": {
            "result": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ProductCertificateUnbindResponseItem"
              },
              "description": "Результат работы метода."
            }
          }
        },
        "v1ProductCertificateRejectionReasonsListRequest": {
          "type": "object"
        },
        "v1StatusCodeNamePairRejection": {
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "description": "Код причины отклонения сертификата."
            },
            "name": {
              "type": "string",
              "description": "Описание причины отклонения сертификата."
            }
          }
        },
        "v1ProductCertificateRejectionReasonsListResponse": {
          "type": "object",
          "properties": {
            "result": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/v1StatusCodeNamePairRejection"
              },
              "description": "Причины отклонения сертификата."
            }
          }
        },
        "v1ProductCertificateStatusListRequest": {
          "type": "object"
        },
        "v1StatusCodeNamePairStatuses": {
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "description": "Код статуса сертификата."
            },
            "name": {
              "type": "string",
              "description": "Описание статуса."
            }
          }
        },
        "v1ProductCertificateStatusListResponse": {
          "type": "object",
          "properties": {
            "result": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/v1StatusCodeNamePairStatuses"
              },
              "description": "Список возможных статусов сертификатов."
            }
          }
        },
        "WarehouseFirstMileType": {
          "type": "object",
          "description": "Первая миля FBS.",
          "properties": {
            "dropoff_point_id": {
              "type": "string",
              "description": "Идентификатор DropOff-точки."
            },
            "dropoff_timeslot_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор временного слота для DropOff."
            },
            "first_mile_is_changing": {
              "type": "boolean",
              "description": "Признак, что настройки склада обновляются."
            },
            "first_mile_type": {
              "type": "string",
              "description": "Тип первой мили — `DropOff` или `Pickup`.",
              "enum": ["DropOff", "Pickup"]
            }
          }
        },
        "WarehouseListResponseWarehouse": {
          "properties": {
            "has_entrusted_acceptance": {
              "type": "boolean",
              "description": "Признак доверительной приёмки. `true`, если доверительная приёмка включена на складе."
            },
            "is_rfbs": {
              "type": "boolean",
              "description": "Признак работы склада по схеме rFBS:\n- `true` — склад работает по схеме rFBS;\n- `false` — не работает по схеме rFBS.\n"
            },
            "name": {
              "type": "string",
              "description": "Название склада."
            },
            "warehouse_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор склада."
            },
            "can_print_act_in_advance": {
              "type": "boolean",
              "description": "Возможность печати акта приёма-передачи заранее. `true`, если печатать заранее возможно."
            },
            "first_mile_type": {
              "$ref": "#/components/schemas/WarehouseFirstMileType"
            },
            "has_postings_limit": {
              "type": "boolean",
              "description": "Признак наличия лимита минимального количества заказов. `true`, если лимит есть."
            },
            "is_karantin": {
              "type": "boolean",
              "description": "Признак, что склад не работает из-за карантина."
            },
            "is_kgt": {
              "type": "boolean",
              "description": "Признак, что склад принимает крупногабаритные товары."
            },
            "is_timetable_editable": {
              "type": "boolean",
              "description": "Признак, что можно менять расписание работы складов."
            },
            "min_postings_limit": {
              "type": "integer",
              "format": "int32",
              "description": "Минимальное значение лимита — количество заказов, которые можно привезти в одной поставке."
            },
            "postings_limit": {
              "type": "integer",
              "format": "int32",
              "description": "Значение лимита. `-1`, если лимита нет."
            },
            "min_working_days": {
              "type": "integer",
              "format": "int64",
              "description": "Количество рабочих дней склада."
            },
            "status": {
              "type": "string",
              "description": "Статус склада.\n\nСоответствие статусов склада со статусами с личном кабинете:\n\n| Статус Seller&nbsp;API | Статус в личном кабинете |\n|---|---|\n| `new` | Активируется |\n| `created` | Активный |\n| `disabled` | В архиве |\n| `blocked` | Заблокирован |\n| `disabled_due_to_limit` | На паузе |\n| `error` | Ошибка |\n"
            },
            "working_days": {
              "description": "Рабочие дни склада.",
              "items": {
                "type": "string",
                "enum": ["1", "2", "3", "4", "5", "6", "7"]
              }
            }
          },
          "type": "object"
        },
        "warehouseWarehouseListResponse": {
          "properties": {
            "result": {
              "items": {
                "$ref": "#/components/schemas/WarehouseListResponseWarehouse"
              },
              "type": "array",
              "description": "Список складов."
            }
          },
          "type": "object"
        },
        "DeliveryMethodListRequestFilter": {
          "properties": {
            "provider_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор службы доставки."
            },
            "status": {
              "type": "string",
              "description": "Статус метода доставки:\n  - `NEW` — создан,\n  - `EDITED` — редактируется,\n  - `ACTIVE` — активный,\n  - `DISABLED` — неактивный.\n"
            },
            "warehouse_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор склада."
            }
          },
          "type": "object",
          "description": "Фильтр для поиска методов доставки."
        },
        "warehouseDeliveryMethodListRequest": {
          "properties": {
            "filter": {
              "$ref": "#/components/schemas/DeliveryMethodListRequestFilter"
            },
            "limit": {
              "format": "int64",
              "type": "integer",
              "description": "Количество элементов в ответе. Максимум — 50, минимум — 1."
            },
            "offset": {
              "format": "int64",
              "type": "integer",
              "description": "Количество элементов, которое будет пропущено в ответе. Например, если `offset = 10`, то ответ начнётся с 11-го найденного элемента."
            }
          },
          "type": "object"
        },
        "DeliveryMethodListResponseDeliveryMethod": {
          "properties": {
            "company_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор продавца."
            },
            "created_at": {
              "format": "date-time",
              "type": "string",
              "description": "Дата и время создания метода доставки."
            },
            "cutoff": {
              "type": "string",
              "description": "Время до которого продавцу нужно собрать заказ."
            },
            "id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор метода доставки."
            },
            "name": {
              "type": "string",
              "description": "Название метода доставки."
            },
            "provider_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор службы доставки."
            },
            "status": {
              "type": "string",
              "description": "Статус метода доставки:\n  - `NEW` — создан,\n  - `EDITED` — редактируется,\n  - `ACTIVE` — активный,\n  - `DISABLED` — неактивный.\n"
            },
            "template_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор услуги по доставке заказа."
            },
            "updated_at": {
              "format": "date-time",
              "type": "string",
              "description": "Дата и время последнего обновления метода метода доставки."
            },
            "warehouse_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор склада."
            }
          },
          "type": "object"
        },
        "warehouseDeliveryMethodListResponse": {
          "properties": {
            "has_next": {
              "type": "boolean",
              "description": "Признак, что в запросе вернулась только часть методов доставки:\n- `true` — сделайте повторный запрос с новым параметром `offset` для получения остальных методов;\n- `false` — ответ содержит все методы доставки по запросу.\n"
            },
            "result": {
              "items": {
                "$ref": "#/components/schemas/DeliveryMethodListResponseDeliveryMethod"
              },
              "type": "array",
              "description": "Результат запроса."
            }
          },
          "type": "object"
        },
        "polygonv1PolygonCreateRequest": {
          "type": "object",
          "properties": {
            "coordinates": {
              "description": "Координаты полигона доставки в формате `[[[lat long]]]`.\n",
              "type": "string"
            }
          }
        },
        "polygonv1PolygonCreateResponse": {
          "type": "object",
          "properties": {
            "polygon_id": {
              "description": "Идентификатор полигона.",
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "rpcStatus_v1PolygonCreate": {
          "type": "object",
          "properties": {
            "code": {
              "type": "integer",
              "format": "int32",
              "description": "Код ошибки."
            },
            "details": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/protobufAny"
              },
              "description": "Информация об ошибке."
            },
            "message": {
              "type": "string",
              "description": "Сообщение об ошибке:\n\n  - `coordinates not provided` — координаты не переданы;\n  - `invalid coordinates, must have two points in coordinate` — в какой-то точке передана только широта или долгота, нужно передать две точки;\n  - `the first and last points in loop must be same` — первая и последняя точка не совпадают (по стандартным правилам geojson точки должны совпадать);\n  - `non-full loops must have at least 4 unique vertices for polygons` — для полигона передано менее четырех точек.\n"
            }
          }
        },
        "PolygonBindRequestpolygon": {
          "type": "object",
          "properties": {
            "polygon_id": {
              "description": "Идентификатор полигона.",
              "type": "integer",
              "format": "int64"
            },
            "time": {
              "description": "Время в минутах, за которое доставят товар в этом полигоне.",
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "PolygonBindRequestwh_location": {
          "type": "object",
          "description": "Расположение склада.",
          "properties": {
            "lat": {
              "description": "Географическая широта расположения склада.",
              "type": "string"
            },
            "lon": {
              "description": "Географическая долгота расположения склада.",
              "type": "string"
            }
          }
        },
        "polygonv1PolygonBindRequest": {
          "type": "object",
          "properties": {
            "delivery_method_id": {
              "type": "integer",
              "format": "int32",
              "description": "Идентификатор метода доставки."
            },
            "polygons": {
              "type": "array",
              "description": "Список полигонов.",
              "items": {
                "$ref": "#/components/schemas/PolygonBindRequestpolygon"
              }
            },
            "warehouse_location": {
              "$ref": "#/components/schemas/PolygonBindRequestwh_location"
            }
          }
        },
        "polygonv1Empty": {
          "type": "object"
        },
        "rpcStatus_v1PolygonBind": {
          "type": "object",
          "properties": {
            "code": {
              "type": "integer",
              "format": "int32"
            },
            "details": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/protobufAny"
              }
            },
            "message": {
              "type": "string",
              "description": "Сообщение об ошибке:\n\n  - **delivery target polygons not provided** — полигоны не переданы;\n  - **no delivery method id provided** — delivery_method_id не передан;\n  - **no warehouse points provided** — не передана координата склада;\n  - **polygon id .... not found** — переданы ID полигонов, которые не найдены в базе данных;\n  - **not found polygon for warehouse point** — точка склада не принадлежит ни одному переданному полигону.\n"
            }
          }
        },
        "polygonv1PolygonDeleteRequest": {
          "type": "object",
          "properties": {
            "polygon_ids": {
              "description": "Список идентификаторов полигонов.",
              "type": "array",
              "items": {
                "type": "string",
                "format": "int64"
              }
            }
          }
        },
        "postingGetFboPostingListRequestFilter": {
          "properties": {
            "since": {
              "format": "date-time",
              "type": "string",
              "description": "Начало периода в формате YYYY-MM-DD."
            },
            "status": {
              "type": "string",
              "description": "Статус отправления.\n- `awaiting_packaging` — ожидает упаковки,\n- `awaiting_deliver` — ожидает отгрузки,\n- `delivering` — доставляется,\n- `delivered` — доставлено,\n- `cancelled` — отменено.\n"
            },
            "to": {
              "format": "date-time",
              "type": "string",
              "description": "Конец периода в формате YYYY-MM-DD."
            }
          },
          "type": "object",
          "description": "Фильтр для поиска отправлений."
        },
        "postingFboPostingWithParams": {
          "properties": {
            "analytics_data": {
              "type": "boolean",
              "description": "Передайте `true`, чтобы добавить в ответ данные аналитики."
            },
            "financial_data": {
              "type": "boolean",
              "description": "Передайте `true`, чтобы добавить в ответ финансовые данные."
            }
          },
          "type": "object",
          "description": "Дополнительные поля, которые нужно добавить в ответ."
        },
        "postingGetFboPostingListRequest": {
          "properties": {
            "dir": {
              "type": "string",
              "description": "Направление сортировки:\n  - `asc` — по возрастанию,\n  - `desc` — по убыванию.\n"
            },
            "filter": {
              "$ref": "#/components/schemas/postingGetFboPostingListRequestFilter"
            },
            "limit": {
              "format": "int64",
              "type": "integer",
              "description": "Количество значений в ответе:\n  - максимум — 1000,\n  - минимум — 1.\n"
            },
            "offset": {
              "format": "int64",
              "type": "integer",
              "description": "Количество элементов, которое будет пропущено в ответе. Например, если `offset = 10`, то ответ начнётся с 11-го найденного элемента."
            },
            "translit": {
              "type": "boolean",
              "description": "Если включена транслитерация адреса из кириллицы в латиницу — `true`."
            },
            "with": {
              "$ref": "#/components/schemas/postingFboPostingWithParams"
            }
          },
          "type": "object"
        },
        "v2AdditionalDataItem": {
          "properties": {
            "key": {
              "type": "string",
              "description": null
            },
            "value": {
              "type": "string",
              "description": null
            }
          },
          "type": "object",
          "description": "Дополнительная информация."
        },
        "FboPostingFboPostingAnalyticsData": {
          "properties": {
            "city": {
              "type": "string",
              "description": "Город доставки."
            },
            "delivery_type": {
              "type": "string",
              "description": "Способ доставки."
            },
            "is_legal": {
              "type": "boolean",
              "description": "Получатель юридическое лицо:\n  - `true` — юридическое лицо,\n  - `false` — физическое лицо.\n"
            },
            "is_premium": {
              "type": "boolean",
              "description": "Наличие подписки Premium."
            },
            "payment_type_group_name": {
              "type": "string",
              "description": "Способ оплаты."
            },
            "region": {
              "type": "string",
              "description": "Регион доставки."
            },
            "warehouse_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор склада."
            },
            "warehouse_name": {
              "type": "string",
              "description": "Название склада отправки заказа."
            }
          },
          "type": "object",
          "description": "Данные аналитики."
        },
        "PostingFinancialDataServices": {
          "properties": {
            "marketplace_service_item_deliv_to_customer": {
              "format": "double",
              "type": "number",
              "description": "Последняя миля."
            },
            "marketplace_service_item_direct_flow_trans": {
              "format": "double",
              "type": "number",
              "description": "Магистраль."
            },
            "marketplace_service_item_dropoff_ff": {
              "format": "double",
              "type": "number",
              "description": "Обработка отправления на фулфилмент складе (ФФ)."
            },
            "marketplace_service_item_dropoff_pvz": {
              "format": "double",
              "type": "number",
              "description": "Обработка отправления в ПВЗ."
            },
            "marketplace_service_item_dropoff_sc": {
              "format": "double",
              "type": "number",
              "description": "Обработка отправления в сортировочном центре."
            },
            "marketplace_service_item_fulfillment": {
              "format": "double",
              "type": "number",
              "description": "Сборка заказа."
            },
            "marketplace_service_item_pickup": {
              "format": "double",
              "type": "number",
              "description": "Выезд транспортного средства по адресу продавца для забора отправлений (Pick-up)."
            },
            "marketplace_service_item_return_after_deliv_to_customer": {
              "format": "double",
              "type": "number",
              "description": "Обработка возврата."
            },
            "marketplace_service_item_return_flow_trans": {
              "format": "double",
              "type": "number",
              "description": "Обратная магистраль."
            },
            "marketplace_service_item_return_not_deliv_to_customer": {
              "format": "double",
              "type": "number",
              "description": "Обработка отмен."
            },
            "marketplace_service_item_return_part_goods_customer": {
              "format": "double",
              "type": "number",
              "description": "Обработка невыкупа."
            }
          },
          "type": "object",
          "description": "Услуги."
        },
        "ProductPicking": {
          "properties": {
            "amount": {
              "format": "double",
              "type": "number",
              "description": "Стоимость доставки."
            },
            "moment": {
              "format": "date-time",
              "type": "string",
              "description": "Дата и время доставки."
            },
            "tag": {
              "type": "string",
              "description": "Крупногабаритный товар или нет."
            }
          },
          "type": "object",
          "description": "Информация о доставке.\n\nВсегда возвращает `null`.\n"
        },
        "PostingFinancialDataProduct": {
          "properties": {
            "actions": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "Действия."
            },
            "currency_code": {
              "type": "string",
              "description": "Валюта ваших цен. Cовпадает с валютой, которая установлена в настройках личного кабинета.\n\nВозможные значения: \n  - `RUB` — российский рубль,\n  - `BYN` — белорусский рубль,\n  - `KZT` — тенге,\n  - `EUR` — евро,\n  - `USD` — доллар США,\n  - `CNY` — юань.\n"
            },
            "client_price": {
              "type": "string",
              "description": "Цена для клиента."
            },
            "commission_amount": {
              "format": "double",
              "type": "number",
              "description": "Размер комиссии за товар."
            },
            "commission_percent": {
              "format": "int64",
              "type": "integer",
              "description": "Процент комиссии."
            },
            "commissions_currency_code": {
              "type": "string",
              "description": "Код валюты, в которой рассчитывались комиссии."
            },
            "item_services": {
              "$ref": "#/components/schemas/PostingFinancialDataServices"
            },
            "old_price": {
              "format": "double",
              "type": "number",
              "description": "Цена до учёта скидок. На карточке товара отображается зачёркнутой."
            },
            "payout": {
              "format": "double",
              "type": "number",
              "description": "Выплата продавцу."
            },
            "picking": {
              "$ref": "#/components/schemas/ProductPicking"
            },
            "price": {
              "format": "double",
              "type": "number",
              "description": "Цена товара с учётом скидок — это значение показывается на карточке товара."
            },
            "product_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор товара."
            },
            "quantity": {
              "format": "int64",
              "type": "integer",
              "description": "Количество товара в отправлении."
            },
            "total_discount_percent": {
              "format": "double",
              "type": "number",
              "description": "Процент скидки."
            },
            "total_discount_value": {
              "format": "double",
              "type": "number",
              "description": "Сумма скидки."
            }
          },
          "type": "object"
        },
        "v2PostingFinancialData": {
          "properties": {
            "posting_services": {
              "$ref": "#/components/schemas/PostingFinancialDataServices"
            },
            "cluster_from": {
              "type": "string",
              "description": "Код региона, откуда отправляется заказ."
            },
            "cluster_to": {
              "type": "string",
              "description": "Код региона, куда доставляется заказ."
            },
            "products": {
              "items": {
                "$ref": "#/components/schemas/PostingFinancialDataProduct"
              },
              "type": "array",
              "description": "Список товаров в заказе."
            }
          },
          "type": "object",
          "description": "Финансовые данные."
        },
        "v2PostingProduct": {
          "properties": {
            "digital_codes": {
              "items": {
                "type": "string"
              },
              "description": "Коды активации для услуг и цифровых товаров."
            },
            "name": {
              "type": "string",
              "description": "Название товара."
            },
            "offer_id": {
              "type": "string",
              "description": "Идентификатор товара в системе продавца — артикул."
            },
            "currency_code": {
              "type": "string",
              "description": "Валюта ваших цен. Cовпадает с валютой, которая установлена в настройках личного кабинета.\n\nВозможные значения: \n  - `RUB` — российский рубль,\n  - `BYN` — белорусский рубль,\n  - `KZT` — тенге,\n  - `EUR` — евро,\n  - `USD` — доллар США,\n  - `CNY` — юань.\n"
            },
            "price": {
              "type": "string",
              "description": "Цена товара."
            },
            "quantity": {
              "format": "int64",
              "type": "integer",
              "description": "Количество товара в отправлении."
            },
            "sku": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор товара в системе Ozon — SKU."
            }
          },
          "type": "object"
        },
        "v2FboPosting": {
          "properties": {
            "additional_data": {
              "items": {
                "$ref": "#/components/schemas/v2AdditionalDataItem"
              },
              "type": "array"
            },
            "analytics_data": {
              "$ref": "#/components/schemas/FboPostingFboPostingAnalyticsData"
            },
            "cancel_reason_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор причины отмены отправления."
            },
            "created_at": {
              "format": "date-time",
              "type": "string",
              "description": "Дата и время создания отправления."
            },
            "financial_data": {
              "$ref": "#/components/schemas/v2PostingFinancialData"
            },
            "in_process_at": {
              "format": "date-time",
              "type": "string",
              "description": "Дата и время начала обработки отправления."
            },
            "order_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор заказа, к которому относится отправление."
            },
            "order_number": {
              "type": "string",
              "description": "Номер заказа, к которому относится отправление."
            },
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            },
            "products": {
              "items": {
                "$ref": "#/components/schemas/v2PostingProduct"
              },
              "type": "array",
              "description": "Список товаров в отправлении."
            },
            "status": {
              "type": "string",
              "description": "Статус отправления:\n  - `awaiting_packaging` — ожидает упаковки,\n  - `awaiting_deliver` — ожидает отгрузки,\n  - `delivering` — доставляется,\n  - `delivered` — доставлено,\n  - `cancelled` — отменено.\n"
            }
          },
          "type": "object",
          "description": "Результат запроса."
        },
        "v2FboPostingListResponse": {
          "properties": {
            "result": {
              "items": {
                "$ref": "#/components/schemas/v2FboPosting"
              },
              "type": "array",
              "description": "Массив отправлений."
            }
          },
          "type": "object"
        },
        "postingGetFboPostingRequest": {
          "properties": {
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            },
            "translit": {
              "type": "boolean",
              "description": "Если включена транслитерация адреса из кириллицы в латиницу — `true`."
            },
            "with": {
              "$ref": "#/components/schemas/postingFboPostingWithParams"
            }
          },
          "type": "object"
        },
        "v2FboPostingResponse": {
          "properties": {
            "result": {
              "$ref": "#/components/schemas/v2FboPosting"
            }
          },
          "type": "object"
        },
        "v1GetSupplyOrdersListRequest": {
          "type": "object",
          "properties": {
            "page": {
              "type": "integer",
              "format": "int32",
              "description": "Номер страницы, возвращаемой в запросе."
            },
            "page_size": {
              "type": "integer",
              "format": "int32",
              "description": "Количество элементов на странице."
            },
            "states": {
              "type": "array",
              "description": "Фильтр по статусу поставки по заявке:\n- `DRAFT` — черновик заявки. Только для заявок с вРЦ.\n- `SUPPLY_VARIANTS_ARRANGING` — подбор вариантов отгрузки. Только для заявок с вРЦ.\n- `HAS_NO_SUPPLY_VARIANTS_ARCHIVE` — нет вариантов отгрузки. Заявка в архиве. Только для заявок с вРЦ.\n- `HAS_NO_SUPPLY_VARIANTS_NEW` — нет вариантов отгрузки. Только для заявок с вРЦ.\n- `SUPPLY_VARIANT_CONFIRMATION` — согласование отгрузки. Только для заявок с вРЦ.\n- `TIMESLOT_BOOKING` — бронирование времени.\n- `DATA_FILLING` — заполнение данных.\n- `READY_TO_SUPPLY` — готова к отгрузке.\n- `ACCEPTED_AT_SUPPLY_WAREHOUSE` — принята на точке отгрузки.\n- `IN_TRANSIT` — в пути.\n- `ACCEPTANCE_AT_STORAGE_WAREHOUSE` — приёмка на складе.\n- `REPORTS_CONFIRMATION_AWAITING` — согласование актов.\n- `REPORT_REJECTED` — спор.\n- `COMPLETED` — завершена.\n- `REJECTED_AT_SUPPLY_WAREHOUSE` — отказано в приёмке.\n- `CANCELLED` — отменена.\n- `OVERDUE` — просрочена.\n",
              "items": {
                "type": "string"
              }
            }
          },
          "required": ["page", "page_size"]
        },
        "v1Timeslot": {
          "type": "object",
          "description": "Интервал поставки по местному времени.",
          "properties": {
            "from": {
              "type": "string",
              "description": "Начало интервала."
            },
            "to": {
              "type": "string",
              "description": "Конец интервала."
            }
          }
        },
        "v1Warehouse": {
          "type": "object",
          "description": "Склад поставки.",
          "properties": {
            "address": {
              "type": "string",
              "description": "Адрес склада."
            },
            "name": {
              "type": "string",
              "description": "Название склада."
            },
            "warehouse_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор склада."
            }
          }
        },
        "GetSupplyOrdersListResponseSupplyOrder": {
          "type": "object",
          "properties": {
            "created_at": {
              "type": "string",
              "description": "Дата создания заявки на поставку."
            },
            "local_timeslot": {
              "$ref": "#/components/schemas/v1Timeslot"
            },
            "preferred_supply_date_from": {
              "type": "string",
              "description": "Дата, с которой вы хотите привезти поставку на склад. Только для заявок с вРЦ."
            },
            "preferred_supply_date_to": {
              "type": "string",
              "description": "Дата, до которой вы хотите привезти поставку на склад. Только для заявок с вРЦ."
            },
            "state": {
              "type": "string",
              "description": "Статус поставки по заявке:\n- `DRAFT` — черновик заявки. Только для заявок с вРЦ.\n- `SUPPLY_VARIANTS_ARRANGING` — подбор вариантов отгрузки. Только для заявок с вРЦ.\n- `HAS_NO_SUPPLY_VARIANTS_ARCHIVE` — нет вариантов отгрузки. Заявка в архиве.\n- `HAS_NO_SUPPLY_VARIANTS_NEW` — нет вариантов отгрузки.\n- `SUPPLY_VARIANT_CONFIRMATION` — согласование отгрузки. Только для заявок с вРЦ.\n- `TIMESLOT_BOOKING` — бронирование времени.\n- `DATA_FILLING` — заполнение данных.\n- `READY_TO_SUPPLY` — готова к отгрузке.\n- `ACCEPTED_AT_SUPPLY_WAREHOUSE` — принята на точке отгрузки.\n- `IN_TRANSIT` — в пути.\n- `ACCEPTANCE_AT_STORAGE_WAREHOUSE` — приёмка на складе.\n- `REPORTS_CONFIRMATION_AWAITING` — согласование актов.\n- `REPORT_REJECTED` — спор.\n- `COMPLETED` — завершена.\n- `REJECTED_AT_SUPPLY_WAREHOUSE` — отказано в приёмке.\n- `CANCELLED` — отменена.\n- `OVERDUE` — просрочена.\n"
            },
            "supply_order_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор заявки на поставку."
            },
            "supply_order_number": {
              "type": "string",
              "description": "Номер заявки."
            },
            "supply_warehouse": {
              "$ref": "#/components/schemas/v1Warehouse"
            },
            "time_left_to_prepare_supply": {
              "type": "integer",
              "format": "int64",
              "description": "Время в секундах, оставшееся на заполнение данных по поставке. Только для заявок с вРЦ."
            },
            "time_left_to_select_supply_variant": {
              "type": "integer",
              "format": "int64",
              "description": "Время в секундах, оставшееся на выбор варианта отгрузки. Только для заявок с вРЦ."
            },
            "total_items_count": {
              "type": "integer",
              "format": "int32",
              "description": "Общее количество товаров в заявке."
            },
            "total_quantity": {
              "type": "integer",
              "format": "int32",
              "description": "Общее количество единиц товара в заявке."
            }
          }
        },
        "v1GetSupplyOrdersListResponse": {
          "type": "object",
          "properties": {
            "has_next": {
              "type": "boolean",
              "description": "Признак, ответ содержит не все заявки по запросу:\n- `true` — сделайте повторный запрос с новыми значениями параметров `page` и `page_size` для получения информации об остальных заявках;\n- `false` — ответ содержит все заявки по запросу.\n"
            },
            "supply_orders": {
              "type": "array",
              "description": "Список заявок на поставку.",
              "items": {
                "$ref": "#/components/schemas/GetSupplyOrdersListResponseSupplyOrder"
              }
            },
            "total_supply_orders_count": {
              "type": "integer",
              "format": "int32",
              "description": "Общее количество заявок."
            }
          }
        },
        "v1GetSupplyOrderRequest": {
          "type": "object",
          "properties": {
            "supply_order_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор заявки на поставку."
            }
          },
          "required": ["supply_order_id"]
        },
        "v1SellerWarehouse": {
          "type": "object",
          "description": "Ваш собственный склад, с которого вы повезёте товары на склад поставки. Только для заявок с вРЦ.",
          "properties": {
            "address": {
              "type": "string",
              "description": "Адрес склада."
            },
            "name": {
              "type": "string",
              "description": "Название склада."
            },
            "warehouse_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор склада."
            }
          }
        },
        "v1VehicleInfo": {
          "type": "object",
          "description": "Информация о водителе и автомобиле.",
          "properties": {
            "driver_name": {
              "type": "string",
              "description": "Имя водителя."
            },
            "driver_phone": {
              "type": "string",
              "description": "Телефон водителя."
            },
            "vehicle_model": {
              "type": "string",
              "description": "Модель автомобиля."
            },
            "vehicle_number": {
              "type": "string",
              "description": "Номер автомобиля."
            }
          }
        },
        "v1GetSupplyOrderResponse": {
          "type": "object",
          "properties": {
            "created_at": {
              "type": "string",
              "description": "Дата создания заявки на поставку."
            },
            "local_timeslot": {
              "$ref": "#/components/schemas/v1Timeslot"
            },
            "preferred_supply_date_from": {
              "type": "string",
              "description": "Дата, с которой вы хотите привезти поставку на склад. Только для заявок с вРЦ."
            },
            "preferred_supply_date_to": {
              "type": "string",
              "description": "Дата, до которой вы хотите привезти поставку на склад. Только для заявок с вРЦ."
            },
            "seller_warehouse": {
              "$ref": "#/components/schemas/v1SellerWarehouse"
            },
            "state": {
              "type": "string",
              "description": "Статус поставки по заявке:\n- `DRAFT` — черновик заявки. Только для заявок с вРЦ.\n- `SUPPLY_VARIANTS_ARRANGING` — подбор вариантов отгрузки. Только для заявок с вРЦ.\n- `HAS_NO_SUPPLY_VARIANTS_ARCHIVE` — нет вариантов отгрузки. Заявка в архиве.\n- `HAS_NO_SUPPLY_VARIANTS_NEW` — нет вариантов отгрузки.\n- `SUPPLY_VARIANT_CONFIRMATION` — согласование отгрузки. Только для заявок с вРЦ.\n- `TIMESLOT_BOOKING` — бронирование времени.\n- `DATA_FILLING` — заполнение данных.\n- `READY_TO_SUPPLY` — готова к отгрузке.\n- `ACCEPTED_AT_SUPPLY_WAREHOUSE` — принята на точке отгрузки.\n- `IN_TRANSIT` — в пути.\n- `ACCEPTANCE_AT_STORAGE_WAREHOUSE` — приёмка на складе.\n- `REPORTS_CONFIRMATION_AWAITING` — согласование актов.\n- `REPORT_REJECTED` — спор.\n- `COMPLETED` — завершена.\n- `REJECTED_AT_SUPPLY_WAREHOUSE` — отказано в приёмке.\n- `CANCELLED` — отменена.\n- `OVERDUE` — просрочена.\n"
            },
            "supply_order_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор заявки на поставку."
            },
            "supply_order_number": {
              "type": "string",
              "description": "Номер заявки на поставку."
            },
            "supply_warehouse": {
              "$ref": "#/components/schemas/v1Warehouse"
            },
            "time_left_to_prepare_supply": {
              "type": "integer",
              "format": "int64",
              "description": "Время в секундах, оставшееся на заполнение данных по поставке. Только для заявок с вРЦ."
            },
            "time_left_to_select_supply_variant": {
              "type": "integer",
              "format": "int64",
              "description": "Время в секундах, оставшееся на выбор варианта отгрузки. Только для заявок с вРЦ."
            },
            "total_items_count": {
              "type": "integer",
              "format": "int32",
              "description": "Количество товаров в заявке."
            },
            "total_quantity": {
              "type": "integer",
              "format": "int32",
              "description": "Общее количеств единиц товара в заявке."
            },
            "vehicle_info": {
              "$ref": "#/components/schemas/v1VehicleInfo"
            }
          }
        },
        "v1GetSupplyOrderItemsRequest": {
          "type": "object",
          "properties": {
            "page": {
              "type": "integer",
              "format": "int32",
              "description": "Номер страницы, возвращаемой в запросе."
            },
            "page_size": {
              "type": "integer",
              "format": "int32",
              "description": "Количество элементов на странице."
            },
            "supply_order_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор заявки на поставку."
            }
          },
          "required": ["page", "page_size", "supply_order_id"]
        },
        "GetSupplyOrderItemsResponseItem": {
          "type": "object",
          "properties": {
            "icon_path": {
              "type": "string",
              "description": "Ссылка на изображение товара."
            },
            "name": {
              "type": "string",
              "description": "Название товара."
            },
            "offer_id": {
              "type": "string",
              "description": "Артикул товара."
            },
            "quantity": {
              "type": "integer",
              "format": "int64",
              "description": "Количество товара."
            },
            "sku": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор товара в системе Ozon — SKU."
            }
          }
        },
        "v1GetSupplyOrderItemsResponse": {
          "type": "object",
          "properties": {
            "has_next": {
              "type": "boolean",
              "description": "Признак, ответ содержит не все товары из заявки:\n- `true` — сделайте повторный запрос с новыми значениями параметров `page` и `page_size` для получения информации об остальных товаров;\n- `false` — ответ содержит все товары по запросу.\n"
            },
            "items": {
              "type": "array",
              "description": "Список товаров.",
              "items": {
                "$ref": "#/components/schemas/GetSupplyOrderItemsResponseItem"
              }
            },
            "total_items_count": {
              "type": "integer",
              "format": "int32",
              "description": "Общее количество товаров в заявке."
            }
          }
        },
        "postingv4FbsPostingProductExemplarValidateRequestProductExemplar": {
          "type": "object",
          "properties": {
            "gtd": {
              "type": "string",
              "description": "Номер грузовой таможенной декларации (ГТД)."
            },
            "mandatory_mark": {
              "type": "string",
              "description": "Обязательная маркировка «Честный ЗНАК»."
            },
            "rnpt": {
              "type": "string",
              "description": "Регистрационный номер партии товара (РНПТ)."
            }
          }
        },
        "postingv4FbsPostingProductExemplarValidateRequestProduct": {
          "type": "object",
          "properties": {
            "exemplars": {
              "description": "Информация об экземплярах.",
              "items": {
                "$ref": "#/components/schemas/postingv4FbsPostingProductExemplarValidateRequestProductExemplar"
              }
            },
            "product_id": {
              "description": "Идентификатор товара.",
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "postingv4FbsPostingProductExemplarValidateRequest": {
          "type": "object",
          "properties": {
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            },
            "products": {
              "description": "Список товаров.",
              "items": {
                "$ref": "#/components/schemas/postingv4FbsPostingProductExemplarValidateRequestProduct"
              }
            }
          }
        },
        "FbsPostingProductExemplarValidateResponseFbsPostingProductExemplarValidateResultProductExemplar": {
          "type": "object",
          "properties": {
            "errors": {
              "description": "Ошибки валидации экземпляра.",
              "items": {
                "type": "string"
              }
            },
            "gtd": {
              "description": "Номер грузовой таможенной декларации (ГТД).",
              "type": "string"
            },
            "mandatory_mark": {
              "description": "Обязательная маркировка «Честный ЗНАК».",
              "type": "string"
            },
            "valid": {
              "description": "Результат прохождения проверки. `true`, если код экземпляра соответствует требованиям.",
              "type": "boolean"
            },
            "rnpt": {
              "type": "string",
              "description": "Регистрационный номер партии товара (РНПТ)."
            }
          }
        },
        "FbsPostingProductExemplarValidateResponseFbsPostingProductExemplarValidateResultProduct": {
          "type": "object",
          "properties": {
            "error": {
              "type": "string",
              "description": "Код ошибки."
            },
            "exemplars": {
              "description": "Информация об экземплярах.",
              "items": {
                "$ref": "#/components/schemas/FbsPostingProductExemplarValidateResponseFbsPostingProductExemplarValidateResultProductExemplar"
              }
            },
            "product_id": {
              "description": "Идентификатор товара.",
              "type": "integer",
              "format": "int64"
            },
            "valid": {
              "description": "Результат прохождения проверки. `true`, если коды всех экземпляров соответствуют требованиям.",
              "type": "boolean"
            }
          }
        },
        "FbsPostingProductExemplarValidateResponseFbsPostingProductExemplarValidateResult": {
          "type": "object",
          "description": "Результат работы метода.",
          "properties": {
            "products": {
              "description": "Список товаров.",
              "items": {
                "$ref": "#/components/schemas/FbsPostingProductExemplarValidateResponseFbsPostingProductExemplarValidateResultProduct"
              }
            }
          }
        },
        "postingv4FbsPostingProductExemplarValidateResponse": {
          "type": "object",
          "properties": {
            "result": {
              "$ref": "#/components/schemas/FbsPostingProductExemplarValidateResponseFbsPostingProductExemplarValidateResult"
            }
          }
        },
        "fbsv4SetProductExemplarRequestProductExemplar": {
          "type": "object",
          "properties": {
            "gtd": {
              "type": "string",
              "description": "Номер грузовой таможенной декларации (ГТД)."
            },
            "is_gtd_absent": {
              "type": "boolean",
              "description": "Признак того, что не указан номер таможенной декларации."
            },
            "mandatory_mark": {
              "type": "string",
              "description": "Обязательная маркировка «Честный ЗНАК»."
            },
            "rnpt": {
              "type": "string",
              "description": "Регистрационный номер партии товара (РНПТ)."
            },
            "is_rnpt_absent": {
              "type": "boolean",
              "description": "Признак того, что не указан регистрационный номер партии товара (РНПТ)."
            }
          }
        },
        "fbsv4SetProductExemplarRequestProduct": {
          "type": "object",
          "properties": {
            "exemplars": {
              "description": "Информация об экземплярах.",
              "items": {
                "$ref": "#/components/schemas/fbsv4SetProductExemplarRequestProductExemplar"
              }
            },
            "product_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор FBS товара в системе Ozon — SKU."
            }
          }
        },
        "fbsv4SetProductExemplarRequest": {
          "type": "object",
          "properties": {
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            },
            "products": {
              "description": "Список товаров.",
              "items": {
                "$ref": "#/components/schemas/fbsv4SetProductExemplarRequestProduct"
              }
            }
          }
        },
        "fbsv4SetProductExemplarResponse": {
          "type": "object",
          "properties": {
            "result": {
              "description": "Результат обработки запроса. `true`, если запрос обработан успешно.",
              "type": "boolean"
            }
          }
        },
        "fbsv4GetProductExemplarStatusRequest": {
          "type": "object",
          "properties": {
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            }
          }
        },
        "fbsv4GetProductExemplarStatusResponseProductExemplar": {
          "type": "object",
          "properties": {
            "gtd": {
              "description": "Номер грузовой таможенной декларации (ГТД).",
              "type": "string"
            },
            "gtd_check_status": {
              "type": "string",
              "description": "Статус проверки грузовой таможенной декларации."
            },
            "gtd_error_codes": {
              "description": "Коды ошибок при проверке грузовой таможенной декларации.",
              "items": {
                "type": "string"
              }
            },
            "is_gtd_absent": {
              "type": "boolean",
              "description": "Признак того, что не указан номер таможенной декларации."
            },
            "mandatory_mark": {
              "type": "string",
              "description": "Обязательная маркировка «Честный ЗНАК»."
            },
            "mandatory_mark_check_status": {
              "type": "string",
              "description": "Статус проверки маркировки «Честный ЗНАК»:\n- `processing` — маркировка обрабатывается.\n- `passed` — проверка пройдена.\n- `failed` — проверка не пройдена.\n"
            },
            "mandatory_mark_error_codes": {
              "description": "Коды ошибок при проверке маркировки «Честный ЗНАК».",
              "items": {
                "type": "string"
              }
            },
            "rnpt": {
              "type": "string",
              "description": "Регистрационный номер партии товара (РНПТ)."
            },
            "rnpt_check_status": {
              "type": "string",
              "description": "Статус проверки регистрационного номера партии товара."
            },
            "rnpt_error_codes": {
              "items": {
                "type": "string"
              },
              "description": "Коды ошибок при проверке регистрационного номера партии товара."
            },
            "is_rnpt_absent": {
              "type": "boolean",
              "description": "Признак того, что не указан регистрационный номер партии товара (РНПТ)."
            }
          }
        },
        "fbsv4GetProductExemplarStatusResponseProduct": {
          "type": "object",
          "properties": {
            "exemplars": {
              "description": "Информация об экземплярах.",
              "items": {
                "$ref": "#/components/schemas/fbsv4GetProductExemplarStatusResponseProductExemplar"
              }
            },
            "product_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор товара."
            }
          }
        },
        "fbsv4GetProductExemplarStatusResponse": {
          "type": "object",
          "properties": {
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            },
            "products": {
              "description": "Список товаров.",
              "items": {
                "$ref": "#/components/schemas/fbsv4GetProductExemplarStatusResponseProduct"
              }
            },
            "status": {
              "description": "Статус проверки всех экземпляров и доступности сборки:\n- `ship_available` — сборка доступна,\n- `ship_not_available` — сборка недоступна,\n- `validation_in_process` — экземпляры на проверке.\n",
              "type": "string"
            }
          }
        },
        "FbsPostingShipV4RequestPackageProduct": {
          "type": "object",
          "properties": {
            "product_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор товара."
            },
            "quantity": {
              "type": "integer",
              "format": "int32",
              "description": "Количество экземпляров."
            }
          }
        },
        "FbsPostingShipV4RequestPackage": {
          "type": "object",
          "properties": {
            "products": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/FbsPostingShipV4RequestPackageProduct"
              },
              "description": "Список товаров в отправлении."
            }
          }
        },
        "FbsPostingShipV4RequestWith": {
          "type": "object",
          "description": "Дополнительная информация.",
          "properties": {
            "additional_data": {
              "type": "boolean",
              "description": "Чтобы получить дополнительную информацию, передайте `true`."
            }
          }
        },
        "fbsv4FbsPostingShipV4Request": {
          "type": "object",
          "properties": {
            "packages": {
              "items": {
                "$ref": "#/components/schemas/FbsPostingShipV4RequestPackage"
              },
              "description": "Список упаковок. Каждая упаковка содержит список отправлений, на которые делится заказ."
            },
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            },
            "with": {
              "$ref": "#/components/schemas/FbsPostingShipV4RequestWith"
            }
          }
        },
        "fbsv4PostingProductDetailWithoutDimensions": {
          "type": "object",
          "properties": {
            "mandatory_mark": {
              "description": "Обязательная маркировка «Честный ЗНАК».",
              "items": {
                "type": "string"
              }
            },
            "name": {
              "description": "Название товара.",
              "type": "string"
            },
            "offer_id": {
              "type": "string",
              "description": "Идентификатор товара в системе продавца — артикул."
            },
            "price": {
              "type": "string",
              "description": "Цена."
            },
            "quantity": {
              "type": "integer",
              "format": "int32",
              "description": "Количество товара в отправлении."
            },
            "sku": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор товара в системе Ozon — SKU."
            },
            "currency_code": {
              "type": "string",
              "description": "Валюта ваших цен. Cовпадает с валютой, которая установлена в настройках личного кабинета.\n\nВозможные значения: \n  - `RUB` — российский рубль,\n  - `BYN` — белорусский рубль,\n  - `KZT` — тенге,\n  - `EUR` — евро,\n  - `USD` — доллар США,\n  - `CNY` — юань.\n"
            }
          }
        },
        "FbsPostingShipV4ResponseShipAdditionalData": {
          "properties": {
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            },
            "products": {
              "description": "Список товаров в отправлении.",
              "items": {
                "$ref": "#/components/schemas/fbsv4PostingProductDetailWithoutDimensions"
              }
            }
          }
        },
        "fbsv4FbsPostingShipV4Response": {
          "type": "object",
          "properties": {
            "additional_data": {
              "description": "Дополнительная информация об отправлениях.",
              "items": {
                "$ref": "#/components/schemas/FbsPostingShipV4ResponseShipAdditionalData"
              }
            },
            "result": {
              "description": "Результат сборки отправлений.",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "postingv3GetFbsPostingUnfulfilledListRequestFilter": {
          "properties": {
            "cutoff_from": {
              "format": "date-time",
              "type": "string",
              "description": "Фильтр по времени, до которого продавцу нужно собрать заказ. Начало периода.\n\nФормат: YYYY-MM-DDThh:mm:ss.mcsZ.\nПример: 2020-03-18T07:34:50.359Z.\n"
            },
            "cutoff_to": {
              "format": "date-time",
              "type": "string",
              "description": "Фильтр по времени, до которого продавцу нужно собрать заказ. Конец периода.\n\nФормат: YYYY-MM-DDThh:mm:ss.mcsZ.\nПример: 2020-03-18T07:34:50.359Z.\n"
            },
            "delivering_date_from": {
              "format": "date-time",
              "type": "string",
              "description": "Минимальная дата передачи отправления в доставку."
            },
            "delivering_date_to": {
              "format": "date-time",
              "type": "string",
              "description": "Максимальная дата передачи отправления в доставку."
            },
            "delivery_method_id": {
              "items": {
                "format": "int64",
                "type": "integer"
              },
              "type": "array",
              "description": "Идентификатор способа доставки."
            },
            "provider_id": {
              "items": {
                "format": "int64",
                "type": "integer"
              },
              "type": "array",
              "description": "Идентификатор службы доставки."
            },
            "status": {
              "type": "string",
              "description": "Статус отправления:\n- `acceptance_in_progress` — идёт приёмка,\n- `awaiting_approve` — ожидает подтверждения,\n- `awaiting_packaging` — ожидает упаковки,\n- `awaiting_registration` — ожидает регистрации,\n- `awaiting_deliver` — ожидает отгрузки,\n- `arbitration` — арбитраж,\n- `client_arbitration` — клиентский арбитраж доставки,\n- `delivering` — доставляется,\n- `driver_pickup` — у водителя,\n- `not_accepted` — не принят на сортировочном центре.\n"
            },
            "warehouse_id": {
              "items": {
                "format": "int64",
                "type": "integer"
              },
              "type": "array",
              "description": "Идентификатор склада."
            }
          },
          "type": "object",
          "description": "Фильтр запроса.\n\nИспользуйте фильтр либо по времени сборки — `cutoff`, либо по дате передачи отправления в доставку — `delivering_date`.\nЕсли использовать их вместе, в ответе вернётся ошибка.\n\nЧтобы использовать фильтр по времени сборки, заполните поля `cutoff_from` и `cutoff_to`.\n\nЧтобы использовать фильтр по дате передачи отправления в доставку, заполните поля `delivering_date_from` и `delivering_date_to`.\n"
        },
        "postingv3FbsPostingWithParams": {
          "properties": {
            "analytics_data": {
              "type": "boolean",
              "description": "Добавить в ответ данные аналитики."
            },
            "barcodes": {
              "type": "boolean",
              "description": "Добавить в ответ штрихкоды отправления."
            },
            "financial_data": {
              "type": "boolean",
              "description": "Добавить в ответ финансовые данные."
            },
            "translit": {
              "type": "boolean",
              "description": "Выполнить транслитерацию возвращаемых значений."
            }
          },
          "type": "object",
          "description": "Дополнительные поля, которые нужно добавить в ответ."
        },
        "postingv3GetFbsPostingUnfulfilledListRequest": {
          "properties": {
            "dir": {
              "type": "string",
              "description": "Направление сортировки:\n  - `asc` — по возрастанию,\n  - `desc` — по убыванию.\n"
            },
            "filter": {
              "$ref": "#/components/schemas/postingv3GetFbsPostingUnfulfilledListRequestFilter"
            },
            "limit": {
              "format": "int64",
              "type": "integer",
              "description": "Количество значений в ответе:\n  - максимум — 1000,\n  - минимум — 1.\n"
            },
            "offset": {
              "format": "int64",
              "type": "integer",
              "description": "Количество элементов, которое будет пропущено в ответе. Например, если `offset = 10`, то ответ начнётся с 11-го найденного элемента."
            },
            "with": {
              "$ref": "#/components/schemas/postingv3FbsPostingWithParams"
            }
          },
          "type": "object"
        },
        "v3AddresseeFbsLists": {
          "properties": {
            "name": {
              "type": "string",
              "description": "Имя покупателя."
            },
            "phone": {
              "type": "string",
              "description": "Контактный телефон.\n\nВсегда возвращает пустую строку `\"\"`.\n"
            }
          },
          "type": "object",
          "description": "Контактные данные получателя."
        },
        "v3FbsPostingAnalyticsData": {
          "properties": {
            "city": {
              "type": "string",
              "description": "Город доставки."
            },
            "delivery_date_begin": {
              "format": "date-time",
              "type": "string",
              "description": "Дата и время начала доставки."
            },
            "delivery_date_end": {
              "format": "date-time",
              "type": "string",
              "description": "Дата и время конца доставки."
            },
            "delivery_type": {
              "type": "string",
              "description": "Способ доставки."
            },
            "is_legal": {
              "type": "boolean",
              "description": "Признак, что получатель юридическое лицо:\n  - `true` — юридическое лицо,\n  - `false` — физическое лицо.\n"
            },
            "is_premium": {
              "type": "boolean",
              "description": "Наличие подписки Premium."
            },
            "payment_type_group_name": {
              "type": "string",
              "description": "Способ оплаты."
            },
            "region": {
              "type": "string",
              "description": "Регион доставки."
            },
            "tpl_provider": {
              "type": "string",
              "description": "Служба доставки."
            },
            "tpl_provider_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор службы доставки."
            },
            "warehouse": {
              "type": "string",
              "description": "Название склада отправки заказа."
            },
            "warehouse_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор склада."
            }
          },
          "type": "object",
          "description": "Данные аналитики."
        },
        "v3Barcodes": {
          "properties": {
            "lower_barcode": {
              "type": "string",
              "description": "Нижний штрихкод на маркировке отправления."
            },
            "upper_barcode": {
              "type": "string",
              "description": "Верхний штрихкод на маркировке отправления."
            }
          },
          "type": "object",
          "description": "Штрихкоды отправления."
        },
        "v3Cancellation": {
          "properties": {
            "affect_cancellation_rating": {
              "type": "boolean",
              "description": "Если отмена влияет на рейтинг продавца — `true`."
            },
            "cancel_reason": {
              "type": "string",
              "description": "Причина отмены."
            },
            "cancel_reason_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор причины отмены отправления."
            },
            "cancellation_initiator": {
              "type": "string",
              "description": "Инициатор отмены отправления:\n- `Клиент`,\n- `Ozon`,\n- `Продавец`.\n"
            },
            "cancellation_type": {
              "type": "string",
              "description": "Тип отмены отправления:\n- `client` — клиентская.\n- `ozon` — отменено Ozon.\n- `seller` — отменено продавцом.\n"
            },
            "cancelled_after_ship": {
              "type": "boolean",
              "description": "Если отмена произошла после сборки отправления — `true`."
            }
          },
          "type": "object",
          "description": "Информация об отмене."
        },
        "v3Address": {
          "properties": {
            "address_tail": {
              "type": "string",
              "description": "Адрес в текстовом формате."
            },
            "city": {
              "type": "string",
              "description": "Город доставки."
            },
            "comment": {
              "type": "string",
              "description": "Комментарий к заказу."
            },
            "country": {
              "type": "string",
              "description": "Страна доставки."
            },
            "district": {
              "type": "string",
              "description": "Район доставки."
            },
            "latitude": {
              "format": "double",
              "type": "number",
              "description": "Широта."
            },
            "longitude": {
              "format": "double",
              "type": "number",
              "description": "Долгота."
            },
            "provider_pvz_code": {
              "type": "string",
              "description": "Код пункта выдачи заказов 3PL провайдера."
            },
            "pvz_code": {
              "format": "int64",
              "type": "integer",
              "description": "Код пункта выдачи заказов."
            },
            "region": {
              "type": "string",
              "description": "Регион доставки."
            },
            "zip_code": {
              "type": "string",
              "description": "Почтовый индекс получателя."
            }
          },
          "type": "object",
          "description": "Информация об адресе доставки."
        },
        "v3CustomerFbsLists": {
          "properties": {
            "address": {
              "$ref": "#/components/schemas/v3Address"
            },
            "customer_email": {
              "type": "string",
              "description": "Email покупателя."
            },
            "customer_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор покупателя."
            },
            "name": {
              "type": "string",
              "description": "Имя покупателя."
            },
            "phone": {
              "type": "string",
              "description": "Контактный телефон.\n\nВсегда возвращает пустую строку `\"\"`.\n"
            }
          },
          "type": "object",
          "description": "Данные о покупателе."
        },
        "v3DeliveryMethod": {
          "properties": {
            "id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор способа доставки."
            },
            "name": {
              "type": "string",
              "description": "Название способа доставки."
            },
            "tpl_provider": {
              "type": "string",
              "description": "Служба доставки."
            },
            "tpl_provider_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор службы доставки."
            },
            "warehouse": {
              "type": "string",
              "description": "Название склада."
            },
            "warehouse_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор склада."
            }
          },
          "type": "object",
          "description": "Метод доставки."
        },
        "v3PostingFinancialData": {
          "properties": {
            "cluster_from": {
              "type": "string",
              "description": "Код региона, откуда отправляется заказ."
            },
            "cluster_to": {
              "type": "string",
              "description": "Код региона, куда доставляется заказ."
            },
            "posting_services": {
              "$ref": "#/components/schemas/PostingFinancialDataServices"
            },
            "products": {
              "items": {
                "$ref": "#/components/schemas/PostingFinancialDataProduct"
              },
              "type": "array",
              "description": "Список товаров в заказе."
            }
          },
          "type": "object",
          "description": "Данные о стоимости товара, размере скидки, выплате и комиссии."
        },
        "v3FbsPostingProduct": {
          "properties": {
            "mandatory_mark": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "Обязательная маркировка товара."
            },
            "name": {
              "type": "string",
              "description": "Название товара."
            },
            "offer_id": {
              "type": "string",
              "description": "Идентификатор товара в системе продавца — артикул."
            },
            "price": {
              "type": "string",
              "description": "Цена товара."
            },
            "quantity": {
              "format": "int32",
              "type": "integer",
              "description": "Количество товара в отправлении."
            },
            "sku": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор товара в системе Ozon — SKU."
            },
            "currency_code": {
              "type": "string",
              "description": "Валюта ваших цен. Совпадает с валютой, которая установлена в настройках личного кабинета.\n\nВозможные значения: \n  - `RUB` — российский рубль,\n  - `BYN` — белорусский рубль,\n  - `KZT` — тенге,\n  - `EUR` — евро,\n  - `USD` — доллар США,\n  - `CNY` — юань.\n"
            }
          },
          "type": "object"
        },
        "v3FbsPostingRequirementsV3": {
          "type": "object",
          "properties": {
            "products_requiring_gtd": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "int64"
              },
              "description": "Список идентификаторов товаров (SKU), для которых нужно передать номера таможенной декларации (ГТД).\n\nДля сборки отправления передайте для всех перечисленных товаров номер таможенной декларации или информацию о том,\nчто номера нет, с помощью метода [/v3/posting/fbs/ship/package](#operation/PostingAPI_PackageShipFbsPostingV3)\nили [/v3/posting/fbs/ship](#operation/PostingAPI_ShipFbsPostingV3).\n"
            },
            "products_requiring_country": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "int64"
              },
              "description": "Список идентификаторов товаров (SKU), для которых нужно передать информацию о стране-изготовителе.\n\nДля сборки отправления передайте информацию о стране-изготовителе для всех перечисленных товаров с помощью метода [/v2/posting/fbs/product/country/set](#operation/PostingAPI_SetCountryProductFbsPostingV2).\n"
            },
            "products_requiring_mandatory_mark": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "int64"
              },
              "description": "Список идентификаторов товаров (SKU), для которых нужно передать маркировку «Честный ЗНАК».\n"
            },
            "products_requiring_rnpt": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "int64"
              },
              "description": "Список идентификаторов товаров (SKU), для которых нужно передать регистрационный номер партии товара (РНПТ).\n"
            }
          },
          "description": "Cписок продуктов, для которых нужно передать страну-изготовителя, номер грузовой таможенной декларации (ГТД), регистрационный номер партии товара (РНПТ) или маркировку «Честный ЗНАК», чтобы перевести отправление в следующий статус."
        },
        "v3FbsPosting": {
          "properties": {
            "addressee": {
              "$ref": "#/components/schemas/v3AddresseeFbsLists"
            },
            "analytics_data": {
              "$ref": "#/components/schemas/v3FbsPostingAnalyticsData"
            },
            "barcodes": {
              "$ref": "#/components/schemas/v3Barcodes"
            },
            "cancellation": {
              "$ref": "#/components/schemas/v3Cancellation"
            },
            "customer": {
              "$ref": "#/components/schemas/v3CustomerFbsLists"
            },
            "delivering_date": {
              "format": "date-time",
              "type": "string",
              "description": "Дата передачи отправления в доставку."
            },
            "delivery_method": {
              "$ref": "#/components/schemas/v3DeliveryMethod"
            },
            "financial_data": {
              "$ref": "#/components/schemas/v3PostingFinancialData"
            },
            "in_process_at": {
              "format": "date-time",
              "type": "string",
              "description": "Дата и время начала обработки отправления."
            },
            "is_express": {
              "type": "boolean",
              "description": "Если использовалась быстрая доставка Ozon Express — `true`."
            },
            "is_multibox": {
              "type": "boolean",
              "description": "Признак, что в отправлении есть многокоробочный товар и нужно передать количество коробок для него:\n\n- `true` — до сборки передайте количество коробок через метод [/v3/posting/multiboxqty/set](#operation/PostingAPI_PostingMultiBoxQtySetV3).\n- `false` — отправление собрано с указанием количества коробок в параметре `multi_box_qty` или в отправлении нет многокоробочного товара.\n"
            },
            "multi_box_qty": {
              "type": "integer",
              "format": "int32",
              "description": "Количество коробок, в которые упакован товар."
            },
            "order_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор заказа, к которому относится отправление."
            },
            "order_number": {
              "type": "string",
              "description": "Номер заказа, к которому относится отправление."
            },
            "parent_posting_number": {
              "type": "string",
              "description": "Номер родительского отправления, в результате разделения которого появилось текущее."
            },
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            },
            "products": {
              "items": {
                "$ref": "#/components/schemas/v3FbsPostingProduct"
              },
              "type": "array",
              "description": "Список товаров в отправлении."
            },
            "requirements": {
              "$ref": "#/components/schemas/v3FbsPostingRequirementsV3"
            },
            "shipment_date": {
              "format": "date-time",
              "type": "string",
              "description": "Дата и время, до которой необходимо собрать отправление. Если отправление не собрать к этой дате — оно автоматически отменится."
            },
            "status": {
              "type": "string",
              "description": "Статус отправления:\n- `acceptance_in_progress` — идёт приёмка,\n- `arbitration` — арбитраж,\n- `awaiting_approve` — ожидает подтверждения,\n- `awaiting_deliver` — ожидает отгрузки,\n- `awaiting_packaging` — ожидает упаковки,\n- `awaiting_registration` — ожидает регистрации,\n- `awaiting_verification` — создано,\n- `cancelled` — отменено,\n- `cancelled_from_split_pending` — отменено,\n- `client_arbitration` — клиентский арбитраж доставки,\n- `delivered` — доставлено,\n- `delivering` — доставляется,\n- `driver_pickup` — у водителя,\n- `not_accepted` — не принят на сортировочном центре,\n- `sent_by_seller` – отправлено продавцом.\n"
            },
            "substatus": {
              "type": "string",
              "description": "Подстатус отправления:\n- `posting_acceptance_in_progress`— идёт приёмка,\n- `posting_in_arbitration` — арбитраж,\n- `posting_created` — создано,\n- `posting_in_carriage` — в перевозке,\n- `posting_not_in_carriage` — не добавлено в перевозку,\n- `posting_registered` — зарегистрировано,\n- `posting_transferring_to_delivery` — передаётся в доставку,\n- `posting_awaiting_passport_data` — ожидает паспортных данных, \n- `posting_created` — создано,\n- `posting_awaiting_registration` — ожидает регистрации,\n- `posting_registration_error` — ошибка регистрации,\n- `posting_transferring_to_delivery` — передаётся курьеру,\n- `posting_split_pending` — создано,\n- `posting_canceled` — отменено,\n- `posting_in_client_arbitration` — клиентский арбитраж доставки,\n- `posting_delivered` — доставлено,\n- `posting_received` — получено,\n- `posting_conditionally_delivered` — условно доставлено,\n- `posting_in_courier_service` — курьер в пути,\n- `posting_in_pickup_point` — в пункте выдачи\n- `posting_on_way_to_city` — в пути в ваш город,\n- `posting_on_way_to_pickup_point` — в пути в пункт выдачи,\n- `posting_returned_to_warehouse` — возвращено на склад,\n- `posting_transferred_to_courier_service` — передаётся в службу доставки,\n- posting_driver_pick_up` — у водителя,\n- `posting_not_in_sort_center` — не принято на сортировочном центре,\n- `sent_by_seller` — отправлено продавцом.\n"
            },
            "tpl_integration_type": {
              "type": "string",
              "description": "Тип интеграции со службой доставки:\n  - `ozon` — доставка службой Ozon.\n  - `3pl_tracking` — доставка интегрированной службой.\n  - `non_integrated` — доставка сторонней службой.\n  - `aggregator` — доставка через партнёрскую доставку Ozon.\n"
            },
            "tracking_number": {
              "type": "string",
              "description": "Трек-номер отправления."
            }
          },
          "type": "object"
        },
        "postingv3GetFbsPostingUnfulfilledListResponseResult": {
          "properties": {
            "count": {
              "format": "int64",
              "type": "integer",
              "description": "Счётчик элементов в ответе."
            },
            "postings": {
              "items": {
                "$ref": "#/components/schemas/v3FbsPosting"
              },
              "type": "array",
              "description": "Список отправлений и подробная информация по каждому."
            }
          },
          "type": "object",
          "description": "Результат запроса."
        },
        "postingv3GetFbsPostingUnfulfilledListResponse": {
          "properties": {
            "result": {
              "$ref": "#/components/schemas/postingv3GetFbsPostingUnfulfilledListResponseResult"
            }
          },
          "type": "object"
        },
        "postingv3GetFbsPostingListRequestFilter": {
          "properties": {
            "delivery_method_id": {
              "items": {
                "format": "int64",
                "type": "integer"
              },
              "description": "Идентификатор способа доставки.",
              "type": "array"
            },
            "order_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор заказа."
            },
            "provider_id": {
              "items": {
                "format": "int64",
                "type": "integer"
              },
              "description": "Идентификатор службы доставки.",
              "type": "array"
            },
            "since": {
              "format": "date-time",
              "type": "string",
              "description": "Дата начала периода, за который нужно получить список отправлений.\n\nФормат UTC: ГГГГ-ММ-ДДTЧЧ:ММ:ССZ.\n\nПример: 2019-08-24T14:15:22Z.\n"
            },
            "to": {
              "format": "date-time",
              "type": "string",
              "description": "Дата конца периода, за который нужно получить список отправлений.\n\nФормат UTC: ГГГГ-ММ-ДДTЧЧ:ММ:ССZ.\n\nПример: 2019-08-24T14:15:22Z.\n"
            },
            "status": {
              "type": "string",
              "description": "Статус отправления:\n- `awaiting_registration` — ожидает регистрации,\n- `acceptance_in_progress` — идёт приёмка,\n- `awaiting_approve` — ожидает подтверждения,\n- `awaiting_packaging` — ожидает упаковки,\n- `awaiting_deliver` — ожидает отгрузки,\n- `arbitration` — арбитраж,\n- `client_arbitration` — клиентский арбитраж доставки,\n- `delivering` — доставляется,\n- `driver_pickup` — у водителя,\n- `delivered` — доставлено,\n- `cancelled` — отменено,\n- `not_accepted` — не принят на сортировочном центре,\n- `sent_by_seller` – отправлено продавцом.\n"
            },
            "warehouse_id": {
              "items": {
                "format": "int64",
                "type": "integer"
              },
              "type": "array",
              "description": "Идентификатор склада."
            }
          },
          "type": "object",
          "description": "Фильтр."
        },
        "postingv3GetFbsPostingListRequest": {
          "properties": {
            "dir": {
              "type": "string",
              "description": "Направление сортировки:\n  - `asc` — по возрастанию,\n  - `desc` — по убыванию.\n"
            },
            "filter": {
              "$ref": "#/components/schemas/postingv3GetFbsPostingListRequestFilter"
            },
            "limit": {
              "format": "int64",
              "type": "integer",
              "description": "Количество значений в ответе:\n  - максимум — 1000,\n  - минимум — 1.\n"
            },
            "offset": {
              "format": "int64",
              "type": "integer",
              "description": "Количество элементов, которое будет пропущено в ответе. Например, если `offset = 10`, то ответ начнётся с 11-го найденного элемента."
            },
            "with": {
              "$ref": "#/components/schemas/postingv3FbsPostingWithParams"
            }
          },
          "type": "object"
        },
        "v3GetFbsPostingListResponseV3Result": {
          "properties": {
            "has_next": {
              "type": "boolean",
              "description": "Признак, что в ответе вернули не весь массив отправлений:\n- `true` — необходимо сделать новый запрос с другим значением `offset`, чтобы получить информацию об остальных отправлениях;\n- `false` — в ответе вернули весь массив отправлений для фильтра, который был задан в запросе.\n"
            },
            "postings": {
              "items": {
                "$ref": "#/components/schemas/v3FbsPosting"
              },
              "type": "array",
              "description": "Информация об отправлении."
            }
          },
          "type": "object",
          "description": "Массив отправлений."
        },
        "v3GetFbsPostingListResponseV3": {
          "properties": {
            "result": {
              "$ref": "#/components/schemas/v3GetFbsPostingListResponseV3Result"
            }
          },
          "type": "object"
        },
        "postingv3FbsPostingWithParamsExamplars": {
          "properties": {
            "analytics_data": {
              "type": "boolean",
              "description": "Добавить в ответ данные аналитики."
            },
            "barcodes": {
              "type": "boolean",
              "description": "Добавить в ответ штрихкоды отправления."
            },
            "financial_data": {
              "type": "boolean",
              "description": "Добавить в ответ финансовые данные."
            },
            "product_exemplars": {
              "type": "boolean",
              "description": "Добавить в ответ данные о продуктах и их экземплярах."
            },
            "related_postings": {
              "type": "boolean",
              "description": "Добавить в ответ номера связанных отправлений. Связанные отправления — те, на которое было разделено родительское отправление при сборке.\n"
            },
            "translit": {
              "type": "boolean",
              "description": "Выполнить транслитерацию возвращаемых значений."
            }
          },
          "type": "object",
          "description": "Дополнительные поля, которые нужно добавить в ответ."
        },
        "postingv3GetFbsPostingRequest": {
          "properties": {
            "posting_number": {
              "type": "string",
              "description": "Идентификатор отправления."
            },
            "with": {
              "$ref": "#/components/schemas/postingv3FbsPostingWithParamsExamplars"
            }
          },
          "type": "object"
        },
        "v3AdditionalDataItem": {
          "properties": {
            "key": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "v3Addressee": {
          "properties": {
            "name": {
              "type": "string",
              "description": "Имя покупателя."
            },
            "phone": {
              "type": "string",
              "description": "Контактный телефон."
            }
          },
          "type": "object",
          "description": "Контактные данные получателя."
        },
        "FbsPostingDetailCourier": {
          "type": "object",
          "description": "Данные о курьере.",
          "properties": {
            "car_model": {
              "type": "string",
              "description": "Модель автомобиля."
            },
            "car_number": {
              "type": "string",
              "description": "Номер автомобиля."
            },
            "name": {
              "type": "string",
              "description": "Полное имя курьера."
            },
            "phone": {
              "type": "string",
              "description": "Телефон курьера."
            }
          }
        },
        "v3Customer": {
          "properties": {
            "address": {
              "$ref": "#/components/schemas/v3Address"
            },
            "customer_email": {
              "type": "string",
              "description": "Email покупателя."
            },
            "customer_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор покупателя."
            },
            "name": {
              "type": "string",
              "description": "Имя покупателя."
            },
            "phone": {
              "type": "string",
              "description": "Контактный телефон."
            }
          },
          "type": "object",
          "description": "Данные о покупателе."
        },
        "v3FbsPostingProductExemplarInfoV3": {
          "type": "object",
          "properties": {
            "mandatory_mark": {
              "type": "string",
              "description": "Обязательная маркировка «Честный ЗНАК»."
            },
            "gtd": {
              "type": "string",
              "description": "Номер грузовой таможенной декларации (ГТД)."
            },
            "is_gtd_absent": {
              "type": "boolean",
              "description": "Признак того, что не указан номер таможенной декларации."
            },
            "rnpt": {
              "type": "string",
              "description": "Регистрационный номер партии товара (РНПТ)."
            },
            "is_rnpt_absent": {
              "type": "boolean",
              "description": "Признак того, что не указан регистрационный номер партии товара (РНПТ)."
            }
          }
        },
        "v3FbsPostingExemplarProductV3": {
          "type": "object",
          "description": "Список товаров и экземпляров.",
          "properties": {
            "exemplars": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/v3FbsPostingProductExemplarInfoV3"
              },
              "description": "Информация по экземплярам."
            },
            "sku": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор продукта в системе Ozon — SKU."
            }
          }
        },
        "v3FbsPostingProductExemplarsV3": {
          "type": "object",
          "properties": {
            "products": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/v3FbsPostingExemplarProductV3"
              }
            }
          },
          "description": "Информация по продуктам и их экзмеплярам.\n\nОтвет содержит поле `product_exemplars`, если в запросе передан признак `with.product_exemplars = true`.\n"
        },
        "v3Dimensions": {
          "properties": {
            "height": {
              "type": "string",
              "description": "Высота упаковки."
            },
            "length": {
              "type": "string",
              "description": "Длина товара."
            },
            "weight": {
              "type": "string",
              "description": "Вес товара в упаковке."
            },
            "width": {
              "type": "string",
              "description": "Ширина упаковки."
            }
          },
          "type": "object",
          "description": "Размеры товара."
        },
        "v3PostingProductDetail": {
          "properties": {
            "dimensions": {
              "$ref": "#/components/schemas/v3Dimensions"
            },
            "mandatory_mark": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "Обязательная маркировка товара."
            },
            "name": {
              "type": "string",
              "description": "Название."
            },
            "offer_id": {
              "type": "string",
              "description": "Идентификатор товара в системе продавца — артикул."
            },
            "price": {
              "type": "string",
              "description": "Цена товара с учётом скидок — это значение показывается на карточке товара."
            },
            "currency_code": {
              "type": "string",
              "description": "Валюта ваших цен. Совпадает с валютой, которая установлена в настройках личного кабинета.\n\nВозможные значения: \n  - `RUB` — российский рубль,\n  - `BYN` — белорусский рубль,\n  - `KZT` — тенге,\n  - `EUR` — евро,\n  - `USD` — доллар США,\n  - `CNY` — юань.\n"
            },
            "quantity": {
              "format": "int32",
              "type": "integer",
              "description": "Количество товара."
            },
            "sku": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор товара на Ozon."
            }
          },
          "type": "object",
          "description": "Размеры товара."
        },
        "v3FbsPostingDetailRelatedPostings": {
          "type": "object",
          "description": "Связанные отправления.",
          "properties": {
            "related_posting_numbers": {
              "items": {
                "type": "string"
              },
              "description": "Список номеров связанных отправлений."
            }
          }
        },
        "v3FbsPostingDetail": {
          "properties": {
            "additional_data": {
              "items": {
                "$ref": "#/components/schemas/v3AdditionalDataItem"
              },
              "type": "array"
            },
            "addressee": {
              "$ref": "#/components/schemas/v3Addressee"
            },
            "analytics_data": {
              "$ref": "#/components/schemas/v3FbsPostingAnalyticsData"
            },
            "barcodes": {
              "$ref": "#/components/schemas/v3Barcodes"
            },
            "cancellation": {
              "$ref": "#/components/schemas/v3Cancellation"
            },
            "courier": {
              "$ref": "#/components/schemas/FbsPostingDetailCourier"
            },
            "customer": {
              "$ref": "#/components/schemas/v3Customer"
            },
            "delivering_date": {
              "format": "date-time",
              "type": "string",
              "description": "Дата передачи отправления в доставку."
            },
            "delivery_method": {
              "$ref": "#/components/schemas/v3DeliveryMethod"
            },
            "delivery_price": {
              "type": "string",
              "description": "Стоимость доставки."
            },
            "financial_data": {
              "$ref": "#/components/schemas/v3PostingFinancialData"
            },
            "in_process_at": {
              "format": "date-time",
              "type": "string",
              "description": "Дата и время начала обработки отправления."
            },
            "is_express": {
              "type": "boolean",
              "description": "Если использовалась быстрая доставка Ozon Express — `true`."
            },
            "is_multibox": {
              "type": "boolean",
              "description": "Признак, что в отправлении есть многокоробочный товар и нужно передать количество коробок для него:\n\n- `true` — до сборки передайте количество коробок через метод [/v3/posting/multiboxqty/set](#operation/PostingAPI_PostingMultiBoxQtySetV3).\n- `false` — отправление собрано с указанием количества коробок в параметре `multi_box_qty` или в отправлении нет многокоробочного товара.\n"
            },
            "multi_box_qty": {
              "type": "integer",
              "format": "int32",
              "description": "Количество коробок, в которые упакован товар."
            },
            "order_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор заказа, к которому относится отправление."
            },
            "order_number": {
              "type": "string",
              "description": "Номер заказа, к которому относится отправление."
            },
            "parent_posting_number": {
              "type": "string",
              "description": "Номер родительского отправления, в результате разделения которого появилось текущее."
            },
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            },
            "product_exemplars": {
              "$ref": "#/components/schemas/v3FbsPostingProductExemplarsV3"
            },
            "products": {
              "items": {
                "$ref": "#/components/schemas/v3PostingProductDetail"
              },
              "type": "array",
              "description": "Массив товаров в отправлении."
            },
            "provider_status": {
              "type": "string",
              "description": "Статус службы доставки."
            },
            "related_postings": {
              "$ref": "#/components/schemas/v3FbsPostingDetailRelatedPostings"
            },
            "requirements": {
              "$ref": "#/components/schemas/v3FbsPostingRequirementsV3"
            },
            "shipment_date": {
              "format": "date-time",
              "type": "string",
              "description": "Дата и время, до которой необходимо собрать отправление. Если отправление не собрать к этой дате — оно автоматически отменится."
            },
            "status": {
              "type": "string",
              "description": "Статус отправления:\n- `acceptance_in_progress` — идёт приёмка,\n- `arbitration` — арбитраж,\n- `awaiting_approve` — ожидает подтверждения,\n- `awaiting_deliver` — ожидает отгрузки,\n- `awaiting_packaging` — ожидает упаковки,\n- `awaiting_registration` — ожидает регистрации,\n- `awaiting_verification` — создано,\n- `cancelled` — отменено,\n- `cancelled_from_split_pending` — отменено,\n- `client_arbitration` — клиентский арбитраж доставки,\n- `delivered` — доставлено,\n- `delivering` — доставляется,\n- `driver_pickup` — у водителя,\n- `not_accepted` — не принят на сортировочном центре,\n- `sent_by_seller` – отправлено продавцом.\n"
            },
            "substatus": {
              "type": "string",
              "description": "Подстатус отправления:\n- `posting_acceptance_in_progress` — идёт приёмка,\n- `posting_in_arbitration` — арбитраж,\n- `posting_created` — создано,\n- `posting_in_carriage` — в перевозке,\n- `posting_not_in_carriage` — не добавлено в перевозку,\n- `posting_registered` — зарегистрировано,\n- `posting_transferring_to_delivery` — передаётся в доставку,\n- `posting_awaiting_passport_data` — ожидает паспортных данных, \n- `posting_created` — создано,\n- `posting_awaiting_registration` — ожидает регистрации,\n- `posting_registration_error` — ошибка регистрации,\n- `posting_transferring_to_delivery` — передаётся курьеру,\n- `posting_split_pending` — создано,\n- `posting_canceled` — отменено,\n- `posting_in_client_arbitration` — клиентский арбитраж доставки,\n- `posting_delivered` — доставлено,\n- `posting_received` — получено,\n- `posting_conditionally_delivered` — условно доставлено,\n- `posting_in_courier_service` — курьер в пути,\n- `posting_in_pickup_point` — в пункте выдачи,\n- `posting_on_way_to_city` — в пути в ваш город,\n- `posting_on_way_to_pickup_point` — в пути в пункт выдачи,\n- `posting_returned_to_warehouse` — возвращено на склад,\n- `posting_transferred_to_courier_service` — передаётся в службу доставки,\n- `posting_driver_pick_up` — у водителя,\n- `posting_not_in_sort_center` — не принято на сортировочном центре,\n- `sent_by_seller` — отправлено продавцом.\n"
            },
            "tpl_integration_type": {
              "type": "string",
              "description": "Тип интеграции со службой доставки:\n  - `ozon` — доставка через Ozon логистику.\n  - `aggregator` — доставка внешней службой, Ozon регистрирует заказ.\n  - `3pl_tracking` — доставка внешней службой, продавец регистрирует заказ.\n  - `non_integrated` — доставка силами продавца.\n"
            },
            "tracking_number": {
              "type": "string",
              "description": "Трек-номер отправления."
            }
          },
          "type": "object",
          "description": "Информация об отправлении."
        },
        "v3GetFbsPostingResponseV3": {
          "properties": {
            "result": {
              "$ref": "#/components/schemas/v3FbsPostingDetail"
            }
          },
          "type": "object"
        },
        "postingGetFbsPostingByBarcodeRequest": {
          "properties": {
            "barcode": {
              "type": "string",
              "description": "Штрихкод отправления."
            }
          },
          "type": "object"
        },
        "FbsPostingFbsPostingAnalyticsData": {
          "properties": {
            "city": {
              "type": "string",
              "description": "Город доставки."
            },
            "delivery_type": {
              "type": "string",
              "description": "Способ доставки."
            },
            "is_legal": {
              "type": "boolean",
              "description": "Признак, что получатель юридическое лицо:\n  - `true` — юридическое лицо,\n  - `false` — физическое лицо.\n"
            },
            "is_premium": {
              "type": "boolean",
              "description": "Наличие подписки Premium."
            },
            "payment_type_group_name": {
              "type": "string",
              "description": "Способ оплаты."
            },
            "region": {
              "type": "string",
              "description": "Регион доставки."
            }
          },
          "type": "object",
          "description": "Аналитические данные."
        },
        "FbsPostingBarcodes": {
          "properties": {
            "lower_barcode": {
              "type": "string",
              "description": "Нижний штрихкод на маркировке отправления."
            },
            "upper_barcode": {
              "type": "string",
              "description": "Верхний штрихкод на маркировке отправления."
            }
          },
          "type": "object",
          "description": "Штрихкоды отправления."
        },
        "v2FbsPostingProduct": {
          "properties": {
            "mandatory_mark": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "Обязательная маркировка товара."
            },
            "name": {
              "type": "string",
              "description": "Название товара."
            },
            "offer_id": {
              "type": "string",
              "description": "Идентификатор товара в системе продавца — артикул."
            },
            "price": {
              "type": "string",
              "description": "Цена товара."
            },
            "quantity": {
              "format": "int64",
              "type": "integer",
              "description": "Количество товара в отправлении."
            },
            "sku": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор товара в системе Ozon."
            }
          },
          "type": "object"
        },
        "v2FbsPosting": {
          "properties": {
            "analytics_data": {
              "$ref": "#/components/schemas/FbsPostingFbsPostingAnalyticsData"
            },
            "barcodes": {
              "$ref": "#/components/schemas/FbsPostingBarcodes"
            },
            "cancel_reason_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор причины отмены отправления."
            },
            "created_at": {
              "format": "date-time",
              "type": "string",
              "description": "Дата и время создания отправления."
            },
            "financial_data": {
              "$ref": "#/components/schemas/v2PostingFinancialData"
            },
            "in_process_at": {
              "format": "date-time",
              "type": "string",
              "description": "Дата и время начала обработки отправления."
            },
            "order_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор заказа, к которому относится отправление."
            },
            "order_number": {
              "type": "string",
              "description": "Номер заказа, к которому относится отправление."
            },
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            },
            "products": {
              "items": {
                "$ref": "#/components/schemas/v2FbsPostingProduct"
              },
              "type": "array",
              "description": "Список товаров в отправлении."
            },
            "shipment_date": {
              "format": "date-time",
              "type": "string",
              "description": "Дата и время, до которой необходимо собрать отправление. Если отправление не собрать к этой дате — оно автоматически отменится."
            },
            "status": {
              "type": "string",
              "description": "Статус отправления."
            }
          },
          "type": "object",
          "description": "Результаты запроса."
        },
        "v2FbsPostingResponse": {
          "properties": {
            "result": {
              "$ref": "#/components/schemas/v2FbsPosting"
            }
          },
          "type": "object",
          "description": "Информация об отправлении."
        },
        "v2FbsPostingProductCountryListRequest": {
          "type": "object",
          "properties": {
            "name_search": {
              "type": "string",
              "description": "Фильтрация по строке."
            }
          }
        },
        "v2FbsPostingProductCountryListResponseResult": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Название страны на русском языке."
            },
            "country_iso_code": {
              "type": "string",
              "description": "ISO код страны."
            }
          }
        },
        "v2FbsPostingProductCountryListResponse": {
          "type": "object",
          "properties": {
            "result": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/v2FbsPostingProductCountryListResponseResult"
              },
              "description": "Список стран-изготовителей и ISO коды."
            }
          }
        },
        "v2FbsPostingProductCountrySetRequest": {
          "type": "object",
          "properties": {
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            },
            "product_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор продукта."
            },
            "country_iso_code": {
              "type": "string",
              "description": "Двухбуквенный код добавляемой страны по стандарту ISO_3166-1.\n\nСписок доступных стран-изготовителей и их ISO коды можно получить с помощью метода [/v2/posting/fbs/product/country/list](#operation/PostingAPI_ListCountryProductFbsPostingV2).\n"
            }
          }
        },
        "v2FbsPostingProductCountrySetResponse": {
          "type": "object",
          "properties": {
            "product_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор продукта."
            },
            "is_gtd_needed": {
              "type": "boolean",
              "description": "Признак того, что необходимо передать номер грузовой таможенной декларации (ГТД) для продукта и отправления."
            }
          }
        },
        "postingv3PostingMultiBoxQtySetV3Request": {
          "type": "object",
          "properties": {
            "posting_number": {
              "type": "string",
              "description": "Идентификатор многокоробочного отправления."
            },
            "multi_box_qty": {
              "type": "integer",
              "format": "int64",
              "description": "Количество коробок, в которые упакован товар."
            }
          }
        },
        "postingv3PostingMultiBoxQtySetV3ResponseResult": {
          "type": "object",
          "description": "Результат передачи количества коробок.",
          "properties": {
            "result": {
              "type": "boolean",
              "description": "Возможные значения:\n- `true` — значение передано успешно.\n- `false` — при передаче произошла ошибка. Попробуйте снова.\n"
            }
          }
        },
        "postingv3PostingMultiBoxQtySetV3Response": {
          "type": "object",
          "properties": {
            "result": {
              "$ref": "#/components/schemas/postingv3PostingMultiBoxQtySetV3ResponseResult"
            }
          }
        },
        "v1GetRestrictionsRequest": {
          "type": "object",
          "properties": {
            "posting_number": {
              "type": "string",
              "description": "Номер отправления, для которого нужно определить ограничения."
            }
          },
          "required": ["posting_number"]
        },
        "v1Restriction": {
          "type": "object",
          "properties": {
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            },
            "max_posting_weight": {
              "type": "number",
              "format": "double",
              "description": "Ограничение по максимальному весу в граммах."
            },
            "min_posting_weight": {
              "type": "number",
              "format": "double",
              "description": "Ограничение по минимальному весу в граммах."
            },
            "width": {
              "type": "number",
              "format": "double",
              "description": "Ограничение по ширине в сантиметрах."
            },
            "length": {
              "type": "number",
              "format": "double",
              "description": "Ограничение по длине в сантиметрах."
            },
            "height": {
              "type": "number",
              "format": "double",
              "description": "Ограничение по высоте в сантиметрах."
            },
            "max_posting_price": {
              "type": "number",
              "format": "double",
              "description": "Ограничение по максимальной стоимости отправления в рублях."
            },
            "min_posting_price": {
              "type": "number",
              "format": "double",
              "description": "Ограничение по минимальной стоимости отправления в рублях."
            }
          }
        },
        "v1GetRestrictionsResponse": {
          "type": "object",
          "properties": {
            "result": {
              "$ref": "#/components/schemas/v1Restriction"
            }
          }
        },
        "v3ExemplarInfo": {
          "type": "object",
          "properties": {
            "mandatory_mark": {
              "type": "string",
              "description": "Обязательная маркировка «Честный ЗНАК»."
            },
            "gtd": {
              "type": "string",
              "description": "Номер грузовой таможенной декларации (ГТД)."
            },
            "is_gtd_absent": {
              "type": "boolean",
              "description": "Признак того, что не указан номер грузовой таможенной декларации (ГТД).\n\nЕсли у вас нет номера таможенной декларации, передайте значение `is_gtd_absent = true`.\n"
            },
            "is_rnpt_absent": {
              "type": "boolean",
              "description": "Признак того, что не указан регистрационный номер партии товара (РНПТ)."
            },
            "rnpt": {
              "type": "string",
              "description": "Регистрационный номер партии товара (РНПТ)."
            }
          }
        },
        "v3FbsPackageProduct": {
          "type": "object",
          "properties": {
            "exemplar_info": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/v3ExemplarInfo"
              },
              "description": "Список с данными об экземплярах товара."
            },
            "product_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор FBS товара в системе Ozon — SKU."
            },
            "quantity": {
              "type": "integer",
              "format": "int32",
              "description": "Количество экземпляров."
            }
          }
        },
        "FbsPostingShipRequestPackage": {
          "type": "object",
          "properties": {
            "products": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/v3FbsPackageProduct"
              },
              "description": "Список товаров в отправлении."
            }
          }
        },
        "FbsPostingShipRequestWith": {
          "type": "object",
          "description": "Параметр для выдачи дополнительных полей в ответе.",
          "properties": {
            "additional_data": {
              "type": "boolean",
              "description": "Выдать дополнительные поля в ответе. Передайте `true`, чтобы получить дополнительную информацию об отправлении."
            }
          }
        },
        "v3FbsPostingShipRequest": {
          "type": "object",
          "properties": {
            "packages": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/FbsPostingShipRequestPackage"
              },
              "description": "Список упаковок. Каждая упаковка содержит список отправлений, на которые делится заказ."
            },
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            },
            "with": {
              "$ref": "#/components/schemas/FbsPostingShipRequestWith"
            }
          }
        },
        "fbsv3PostingProductDetailWithoutDimensions": {
          "type": "object",
          "properties": {
            "mandatory_mark": {
              "description": "Обязательная маркировка «Честный ЗНАК».",
              "items": {
                "type": "string"
              }
            },
            "name": {
              "description": "Название товара.",
              "type": "string"
            },
            "offer_id": {
              "type": "string",
              "description": "Идентификатор товара в системе продавца — артикул."
            },
            "price": {
              "type": "string",
              "description": "Цена."
            },
            "quantity": {
              "type": "integer",
              "format": "int32",
              "description": "Количество товара в отправлении."
            },
            "sku": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор товара в системе Ozon — SKU."
            },
            "currency_code": {
              "type": "string",
              "description": "Валюта ваших цен. Cовпадает с валютой, которая установлена в настройках личного кабинета.\n\nВозможные значения: \n  - `RUB` — российский рубль,\n  - `BYN` — белорусский рубль,\n  - `KZT` — тенге,\n  - `EUR` — евро,\n  - `USD` — доллар США,\n  - `CNY` — юань.\n"
            }
          }
        },
        "FbsPostingShipV3ResponseShipAdditionalData": {
          "properties": {
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            },
            "products": {
              "description": "Список товаров в отправлении.",
              "items": {
                "$ref": "#/components/schemas/fbsv3PostingProductDetailWithoutDimensions"
              }
            }
          }
        },
        "v3FbsPostingShipResponse": {
          "type": "object",
          "properties": {
            "additional_data": {
              "description": "Дополнительная информация об отправлениях.",
              "items": {
                "$ref": "#/components/schemas/FbsPostingShipV3ResponseShipAdditionalData"
              }
            },
            "result": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Номера отправлений, которые получились после сборки."
            }
          }
        },
        "v3FbsPostingShipByPackageRequest": {
          "type": "object",
          "properties": {
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            },
            "products": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/v3FbsPackageProduct"
              },
              "description": "Список продуктов в пакете."
            }
          }
        },
        "postingPostingFBSActCreateRequest": {
          "properties": {
            "containers_count": {
              "format": "int32",
              "type": "integer",
              "description": "Количество грузовых мест. \n\nИспользуйте параметр, если вы подключены к доверительной приёмке и отгружаете заказы грузовыми местами. Если вы не подключены к доверительной приёмке, пропустите его.\n\n[Подробнее в Базе знаний продавца](https://docs.ozon.ru/partners/prodayoa-so-svoego-sklada-fbs/doveritel-naya-priemka-gruzovogo-mesta)\n"
            },
            "delivery_method_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор метода доставки."
            },
            "departure_date": {
              "type": "string",
              "format": "date-time",
              "description": "Дата отгрузки.\n\nЧтобы печать была доступна до дня отгрузки, в личном кабинете в настройках метода включите **Печать актов приёма-передачи заранее**.\nВремя на сборку отправлений — SLA на сборку — должно быть больше 13 часов. [Подробнее о печати акта приёма-передачи заранее](https://seller-edu.ozon.ru/docs/fbs/logistics-settings/pechat-aktov-zaranee.html).\n\n**Примеры**\n\n- Отгрузка на следующий день: сборка заканчивается завтра в 13:00. Если время на сборку — 15 часов, то отгрузка сформируется в 13:00 - 15 часов + 1 минута = 22:01 текущего дня. С этого времени можно печатать акт приёма-передачи.\n\n- Отгрузка после выходных: склад не работает в субботу и воскресенье. Сборка заканчивается в понедельник, 13:00. Если время на сборку — 15 часов, то отгрузка сформируется в 13:00 - 15 часов + 1 минута = 22:01 пятницы. С этого времени можно печатать акт приёма-передачи.<br>\n\n- Время на сборку отправлений менее 13 часов: сборка заканчивается завтра в 13:00. Если время на сборку — 10 часов, то отгрузка сформируется в 13:00 - 10 часов + 1 минута = 03:01 следующего дня. Отправления, полученные до 03:00, нужно передать в тот же день. Раньше 03:01 напечатать акт не получится, только в день отгрузки.\n"
            }
          },
          "type": "object"
        },
        "PostingFBSActCreateResponseAct": {
          "properties": {
            "id": {
              "format": "int64",
              "type": "integer",
              "description": "Номер задания на формирование документов."
            }
          },
          "type": "object",
          "description": "Результат работы метода."
        },
        "postingPostingFBSActCreateResponse": {
          "properties": {
            "result": {
              "$ref": "#/components/schemas/PostingFBSActCreateResponseAct"
            }
          },
          "type": "object"
        },
        "postingPostingFBSActCheckStatusRequest": {
          "properties": {
            "id": {
              "format": "int64",
              "type": "integer",
              "description": "Номер задания на формирование документов (также идентификатор перевозки) из метода [POST /v2/posting/fbs/act/create](#operation/PostingAPI_PostingFBSActCreate)."
            }
          },
          "type": "object"
        },
        "PostingFBSActCheckStatusResponseStatus": {
          "properties": {
            "act_type": {
              "type": "string",
              "description": "Тип акта приёма передачи и транспортной накладной.\n\nЕсли значение `ozon_digital`, используйте методы [/v2/posting/fbs/digital/act/check-status](#operation/PostingAPI_PostingFBSDigitalActCheckStatus) \n    и [/v2/posting/fbs/digital/act/get-pdf](#operation/PostingAPI_PostingFBSGetDigitalAct) для получения электронных акта приёма-передачи и транспортной накладной.\n"
            },
            "added_to_act": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "Массив c номерами отправлений, которые добавлены в акт приёма-передачи. Эти отправления нужно передать сегодня."
            },
            "removed_from_act": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "Массив с номерами отправлений, которые не попали в акт приёма-передачи. Такие отправления нужно передавать со следующей отгрузкой."
            },
            "status": {
              "type": "string",
              "description": "Статус запроса:\n - `in_process` — документы формируются, нужно подождать.\n - `ready` — документы сформированы и готовы для скачивания.\n - `error` — произошла ошибка при формировании документов, запросите документы повторно.\n - `cancelled` — создание документов отменено, запросите их повторно.\n - `The next postings aren't ready` — произошла ошибка, отправления не включены в отгрузку. Подождите некоторое время и проверьте результат запроса. Если ошибка повторяется, обратитесь в службу поддержки.\n"
            },
            "is_partial": {
              "type": "boolean",
              "description": "Признак частичной перевозки. `true`, если перевозка частичная.\n\nЧастичная перевозка значит, что отгрузка была разделена на несколько частей и по каждой из частей формируются отдельные акты.\n"
            },
            "has_postings_for_next_carriage": {
              "type": "boolean",
              "description": "Признак наличия подлежащих отгрузке отправлений, которые не попали в текущую перевозку. `true`, если такие отправления есть.\n\nЕсли такие отправления есть, создайте новый акт через метод [/v2/posting/fbs/act/create](#operation/PostingAPI_PostingFBSActCreate) и проверьте его статус. Создавайте акты, пока в этом поле не вернётся `false`.\n"
            },
            "partial_num": {
              "type": "integer",
              "format": "int64",
              "description": "Порядковый номер частичной перевозки."
            }
          },
          "type": "object",
          "description": "Результат работы метода."
        },
        "postingPostingFBSActCheckStatusResponse": {
          "properties": {
            "result": {
              "$ref": "#/components/schemas/PostingFBSActCheckStatusResponseStatus"
            }
          },
          "type": "object"
        },
        "postingv1GetCarriageAvailableListRequest": {
          "type": "object",
          "properties": {
            "delivery_method_id": {
              "type": "integer",
              "format": "int64",
              "description": "Фильтр по методу доставки."
            },
            "departure_date": {
              "type": "string",
              "format": "date-time",
              "description": "Дата отгрузки. По умолчанию — текущая дата."
            }
          }
        },
        "ResultError": {
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "description": "Код ошибки."
            },
            "status": {
              "type": "string",
              "description": "Тип ошибки:\n- `warning` — предупреждение;\n- `critical` — критическая ошибка.\n"
            }
          }
        },
        "GetCarriageAvailableListResponseResult": {
          "type": "object",
          "properties": {
            "carriage_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор перевозки (также номер задания на формирование документов)."
            },
            "carriage_postings_count": {
              "type": "integer",
              "format": "int32",
              "description": "Количество отправлений в перевозке."
            },
            "carriage_status": {
              "type": "string",
              "description": "Статус перевозки для запрашиваемого метода доставки и даты отгрузки."
            },
            "cutoff_at": {
              "type": "string",
              "format": "date-time",
              "description": "Дата и время, до которых нужно собрать отправление."
            },
            "delivery_method_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор метода доставки."
            },
            "delivery_method_name": {
              "type": "string",
              "description": "Название метода доставки."
            },
            "errors": {
              "description": "Список ошибок.",
              "items": {
                "$ref": "#/components/schemas/ResultError"
              }
            },
            "first_mile_type": {
              "type": "string",
              "description": "Тип первой мили."
            },
            "has_entrusted_acceptance": {
              "type": "boolean",
              "description": "Признак доверительной приёмки. `true`, если доверительная приёмка включена на складе."
            },
            "mandatory_postings_count": {
              "type": "integer",
              "format": "int32",
              "description": "Количество отправлений, которые нужно собрать."
            },
            "mandatory_packaged_count": {
              "type": "integer",
              "format": "int32",
              "description": "Количество собранных отправлений."
            },
            "tpl_provider_icon_url": {
              "type": "string",
              "description": "Ссылка на иконку службы доставки."
            },
            "tpl_provider_name": {
              "type": "string",
              "description": "Название службы доставки."
            },
            "warehouse_city": {
              "type": "string",
              "description": "Город склада."
            },
            "warehouse_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор склада."
            },
            "warehouse_name": {
              "type": "string",
              "description": "Название склада."
            },
            "warehouse_timezone": {
              "type": "string",
              "description": "Часовой пояс, в котором находится склад."
            }
          }
        },
        "postingv1GetCarriageAvailableListResponse": {
          "type": "object",
          "properties": {
            "result": {
              "description": "Результат работы метода.",
              "items": {
                "$ref": "#/components/schemas/GetCarriageAvailableListResponseResult"
              }
            }
          }
        },
        "postingPostingFBSGetActRequest": {
          "properties": {
            "id": {
              "format": "int64",
              "type": "integer",
              "description": "Номер задания на формирование документов (также идентификатор перевозки) из метода [POST /v2/posting/fbs/act/create](#operation/PostingAPI_PostingFBSActCreate)."
            }
          },
          "type": "object"
        },
        "postingPostingFBSGetActResponse": {
          "properties": {
            "content": {
              "format": "byte",
              "type": "string",
              "description": "Содержимое."
            },
            "name": {
              "type": "string",
              "description": "Название."
            },
            "type": {
              "type": "string",
              "description": "Тип."
            }
          },
          "type": "object"
        },
        "v2PostingFBSDigitalActCheckStatusRequest": {
          "type": "object",
          "properties": {
            "id": {
              "format": "int64",
              "type": "integer",
              "description": "Номер задания на формирование документов (также идентификатор перевозки) из метода [POST /v2/posting/fbs/act/create](#operation/PostingAPI_PostingFBSActCreate)."
            }
          }
        },
        "v2PostingFBSDigitalActCheckStatusResponse": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64",
              "description": "Номер задания на формирование документов."
            },
            "status": {
              "type": "string",
              "description": "Cтатус формирования документов:\n- `FORMING` — ещё не готовы,\n- `FORMED` — сформированы успешно,\n- `CONFIRMED` — подписаны Ozon,\n- `CONFIRMED_WITH_MISMATCH` — подписаны Ozon с расхождениями,\n- `NOT_FOUND` — документы не найдены,\n- `UNKNOWN_ERROR` — произошла ошибка.\n"
            }
          }
        },
        "v2PostingFBSGetDigitalActRequest": {
          "type": "object",
          "properties": {
            "id": {
              "format": "int64",
              "type": "integer",
              "description": "Номер задания на формирование документов (также идентификатор перевозки) из метода [POST /v2/posting/fbs/act/create](#operation/PostingAPI_PostingFBSActCreate)."
            },
            "doc_type": {
              "format": "string",
              "description": "Тип электронного документа:\n- `act_of_acceptance` — акт приёма-передачи,\n- `act_of_mismatch` — акт о расхождениях,\n- `act_od_excess` — акт об излишках.\n"
            }
          }
        },
        "v2PostingFBSGetDigitalActResponse": {
          "type": "object",
          "properties": {
            "content": {
              "type": "string",
              "format": "byte",
              "description": "Содержание файла в бинарном формате."
            },
            "name": {
              "type": "string",
              "description": "Название файла."
            },
            "type": {
              "type": "string",
              "description": "Тип файла."
            }
          }
        },
        "postingPostingFBSPackageLabelRequest": {
          "properties": {
            "posting_number": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "Идентификатор отправления."
            }
          },
          "type": "object"
        },
        "postingPostingFBSPackageLabelResponse": {
          "properties": {
            "content": {
              "format": "byte",
              "type": "string",
              "description": "Содержимое заказа."
            }
          },
          "type": "object"
        },
        "v1CreateLabelBatchRequest": {
          "type": "object",
          "properties": {
            "posting_number": {
              "description": "Номера отправлений, для которых нужны этикетки.",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "v1CreateLabelBatchResponseResult": {
          "type": "object",
          "description": "Результат работы метода.",
          "properties": {
            "task_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор задания на формирование этикеток."
            }
          }
        },
        "v1CreateLabelBatchResponse": {
          "type": "object",
          "properties": {
            "result": {
              "$ref": "#/components/schemas/v1CreateLabelBatchResponseResult"
            }
          }
        },
        "v1GetLabelBatchRequest": {
          "type": "object",
          "properties": {
            "task_id": {
              "type": "integer",
              "format": "int64",
              "description": "Номер задания на формирование этикеток из ответа метода [/v1/posting/fbs/package-label/create](#operation/PostingAPI_CreateLabelBatch)."
            }
          },
          "required": ["task_id"]
        },
        "v1GetLabelBatchResponseResult": {
          "type": "object",
          "description": "Результат работы метода.",
          "properties": {
            "error": {
              "type": "string",
              "description": "Код ошибки."
            },
            "file_url": {
              "type": "string",
              "description": "Ссылка на файл с этикетками."
            },
            "status": {
              "type": "string",
              "description": "Статус формирования этикеток:\n- `pending` — задание в очереди.\n- `in_progress` — формируются.\n- `completed` — файл с этикетками готов.\n- `error` — при формировании файла произошла ошибка.\n"
            }
          }
        },
        "v1GetLabelBatchResponse": {
          "type": "object",
          "properties": {
            "result": {
              "$ref": "#/components/schemas/v1GetLabelBatchResponseResult"
            }
          }
        },
        "postingPostingFBSActGetContainerLabelsRequest": {
          "properties": {
            "id": {
              "format": "int64",
              "type": "integer",
              "description": "Номер задания на формирование документов (также идентификатор перевозки) из метода [POST /v2/posting/fbs/act/create](#operation/PostingAPI_PostingFBSActCreate)."
            }
          },
          "type": "object"
        },
        "postingPostingFBSActGetContainerLabelsResponse": {
          "properties": {
            "content": {
              "format": "byte",
              "type": "string",
              "description": "Содержимое."
            },
            "name": {
              "type": "string",
              "description": "Название."
            },
            "type": {
              "type": "string",
              "description": "Тип."
            }
          },
          "type": "object"
        },
        "postingMovePostingRequest": {
          "properties": {
            "posting_number": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "Идентификатор отправления."
            }
          },
          "type": "object"
        },
        "postingBooleanResponse": {
          "properties": {
            "result": {
              "type": "boolean",
              "description": "Результат обработки запроса. `true`, если запрос выполнился без ошибок."
            }
          },
          "type": "object"
        },
        "postingCancelReasonRequest": {
          "type": "object",
          "properties": {
            "related_posting_numbers": {
              "type": "array",
              "description": "Номера отправлений.",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "relatedPostingCancelReasons": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор причины отмены:\n- `352` — товар закончился на складе продавца. \n- `400` — остался только бракованный товар.\n- `401` — продавец отклонил арбитраж.\n- `402` — другое (вина продавца).\n- `665` — покупатель не забрал заказ.\n- `666` — возврат из службы доставки: нет доставки в указанный регион.\n- `667` — заказ утерян службой доставки.\n"
            },
            "title": {
              "type": "string",
              "description": "Описание причины отмены."
            },
            "type_id": {
              "type": "string",
              "description": "Инициатор отмены отправления: \n  - `buyer` — покупатель,\n  - `seller` — продавец.\n"
            }
          }
        },
        "relatedPostingCancelReason": {
          "type": "object",
          "properties": {
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            },
            "reasons": {
              "type": "array",
              "description": "Информация о причинах отмены.",
              "items": {
                "$ref": "#/components/schemas/relatedPostingCancelReasons"
              }
            }
          }
        },
        "postingCancelReasonResponse": {
          "type": "object",
          "properties": {
            "result": {
              "description": "Результат запроса.",
              "items": {
                "$ref": "#/components/schemas/relatedPostingCancelReason"
              },
              "type": "array"
            }
          }
        },
        "postingCancelReason": {
          "properties": {
            "id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор причины отмены:\n\n- `352` — товар закончился на складе продавца. \n- `400` — остался только бракованный товар.\n- `401` — продавец отклонил арбитраж.\n- `402` — другое (вина продавца).\n- `665` — покупатель не забрал заказ.\n- `666` — возврат из службы доставки: нет доставки в указанный регион.\n- `667` — заказ утерян службой доставки.\n"
            },
            "is_available_for_cancellation": {
              "type": "boolean",
              "description": "Результат отмены отправления. `true`, если запрос доступен для отмены."
            },
            "title": {
              "type": "string",
              "description": "Название категории."
            },
            "type_id": {
              "type": "string",
              "description": "Инициатор отмены отправления:\n- `buyer` — покупатель,\n- `seller` — продавец.\n"
            }
          },
          "type": "object"
        },
        "postingCancelReasonListResponse": {
          "properties": {
            "result": {
              "description": "Результат работы метода.",
              "items": {
                "$ref": "#/components/schemas/postingCancelReason"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "postingCancelFbsPostingRequest": {
          "properties": {
            "cancel_reason_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор причины отмены отправления."
            },
            "cancel_reason_message": {
              "type": "string",
              "description": "Дополнительная информация по отмене. Если `cancel_reason_id = 402`, параметр обязательный."
            },
            "posting_number": {
              "type": "string",
              "description": "Идентификатор отправления."
            }
          },
          "type": "object"
        },
        "PostingProductChangeRequestItem": {
          "properties": {
            "sku": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор товара в системе Ozon — SKU."
            },
            "weightReal": {
              "type": "array",
              "items": {
                "type": "number",
                "format": "double"
              },
              "description": "Вес единиц товара в отправлении."
            }
          },
          "type": "object"
        },
        "postingPostingProductChangeRequest": {
          "properties": {
            "items": {
              "items": {
                "$ref": "#/components/schemas/PostingProductChangeRequestItem"
              },
              "type": "array",
              "description": "Информация о товарах."
            },
            "posting_number": {
              "type": "string",
              "description": "Идентификатор отправления."
            }
          },
          "type": "object"
        },
        "postingPostingProductChangeResponse": {
          "properties": {
            "result": {
              "type": "string",
              "description": "Идентификатор отправления."
            }
          },
          "type": "object"
        },
        "PostingProductCancelRequestItem": {
          "properties": {
            "quantity": {
              "format": "int32",
              "type": "integer",
              "description": "Количество товара в отправлении."
            },
            "sku": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор товара в системе Ozon — SKU."
            }
          },
          "type": "object"
        },
        "postingPostingProductCancelRequest": {
          "properties": {
            "cancel_reason_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор причины отмены отправления товара."
            },
            "cancel_reason_message": {
              "type": "string",
              "description": "Обязательное поле. Дополнительная информация по отмене."
            },
            "items": {
              "items": {
                "$ref": "#/components/schemas/PostingProductCancelRequestItem"
              },
              "type": "array",
              "description": "Информация о товарах."
            },
            "posting_number": {
              "type": "string",
              "description": "Идентификатор отправления."
            }
          },
          "type": "object"
        },
        "postingPostingProductCancelResponse": {
          "properties": {
            "result": {
              "type": "string",
              "description": "Номер отправления."
            }
          },
          "type": "object"
        },
        "v2PostingFBSActListFilter": {
          "type": "object",
          "description": "Параметры фильтра.",
          "properties": {
            "date_from": {
              "type": "string",
              "description": "Начальная дата создания отгрузок."
            },
            "date_to": {
              "type": "string",
              "description": "Конечная дата создания отгрузок."
            },
            "integration_type": {
              "type": "string",
              "description": "Тип интеграции со службой доставки:\n  - `ozon` — доставка через Ozon логистику.\n  - `aggregator` — доставка внешней службой, Ozon регистрирует заказ.\n  - `3pl_tracking` — доставка внешней службой, продавец регистрирует заказ.\n  - `non_integrated` — доставка силами продавца.\n"
            },
            "status": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Статусы перевозок:\n  - `new` — новая,\n  - `awaiting_retry` — повторная попытка создания,\n  - `in_process` — собирается,\n  - `success` — создана,\n  - `error` — ошибка при создании,\n  - `sended` — отправлена,\n  - `received` — получена,\n  - `formed` — собрана,\n  - `cancelled` — отменена,\n  - `pending` — в очереди на сборку,\n  - `completion_enqueued` — в очереди на завершение,\n  - `completion_processing` — в процессе завершения,\n  - `completion_failed` — ошибка при завершении,\n  - `cancelation_enqueued` — в очереди на отмену,\n  - `cancelation_processing` — в процессе отмены,\n  - `cancelation_failed` — ошибка при отмене,\n  - `completed` — завершена.\n"
            }
          }
        },
        "v2PostingFBSActListRequest": {
          "type": "object",
          "properties": {
            "filter": {
              "$ref": "#/components/schemas/v2PostingFBSActListFilter"
            },
            "limit": {
              "type": "integer",
              "format": "int64",
              "description": "Максимальное количество актов в ответе."
            }
          },
          "required": ["limit"]
        },
        "v2PostingFBSActListRelatedDocs": {
          "type": "object",
          "description": "Информация про акты перевозки.",
          "properties": {
            "act_of_acceptance": {
              "type": "object",
              "description": "Информация про акт приёма-передачи.",
              "properties": {
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Дата создания акта."
                },
                "document_status": {
                  "type": "string",
                  "description": "Статус акта:\n  - `FORMING` — ещё не готов,\n  - `FORMED` — сформирован,\n  - `CONFIRMED` — подписан Ozon,\n  - `CONFIRMED_WITH_MISMATCH` — подписан Ozon с расхождениями,\n  - `ACCEPTED_BY_CARGO_PLACES` — принят по грузовым местам,\n  - `PRINTED_CARRIAGE` — электронная подпись не нужна,\n  - `ERROR`, `UNKNOWN_ERROR` — ошибка.\n"
                }
              }
            },
            "act_of_mismatch": {
              "type": "object",
              "description": "Информация про акт о расхождениях.",
              "properties": {
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Дата создания акта."
                },
                "document_status": {
                  "type": "string",
                  "description": "Статус акта:\n  - `NEED_TO_SIGN` — требуется подпись,\n  - `ON_CONFIRMATION` — на подписании Ozon,\n  - `CONFIRMED` — подписан Ozon,\n  - `DISPUTE_OPENED` — принят по грузовым местам,\n  - `PRINTED_CARRIAGE` — электронная подпись не нужна,\n  - `UNKNOWN_ERROR` — ошибка.\n"
                }
              }
            },
            "act_of_excess": {
              "type": "object",
              "description": "Информация про акт об излишках.",
              "properties": {
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Дата создания акта."
                },
                "document_status": {
                  "type": "string",
                  "description": "Статус акта:\n  - `NEED_TO_SIGN` — требуется подпись,\n  - `CONFIRMED` — подписан Ozon,\n  - `UNKNOWN_ERROR` — ошибка.\n"
                }
              }
            }
          }
        },
        "v2PostingFBSActListResult": {
          "type": "object",
          "properties": {
            "id": {
              "type": "int",
              "format": "int64",
              "description": "Идентификатор отгрузки."
            },
            "delivery_method_id": {
              "type": "int",
              "format": "int64",
              "description": "Идентификатор метода доставки."
            },
            "delivery_method_name": {
              "type": "string",
              "description": "Название метода доставки."
            },
            "integration_type": {
              "type": "string",
              "description": "Тип интеграции со службой доставки:\n  - `ozon` — доставка через Ozon логистику.\n  - `3pl` — доставка внешней службой, продавец регистрирует заказ.\n"
            },
            "containers_count": {
              "type": "int",
              "format": "int32",
              "description": "Число грузовых мест."
            },
            "status": {
              "type": "string",
              "description": "Статус отгрузки."
            },
            "departure_date": {
              "type": "string",
              "description": "Дата отгрузки."
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "description": "Дата создания записи об отгрузке."
            },
            "updated_at": {
              "type": "string",
              "format": "date-time",
              "description": "Дата обновления записи об отгрузке."
            },
            "act_type": {
              "type": "string",
              "description": "Тип акта приёма-передачи для FBS продавцов."
            },
            "is_partial": {
              "type": "boolean",
              "description": "Признак частичной перевозки. `true`, если перевозка частичная.\n\nЧастичная перевозка значит, что отгрузка была разделена на несколько частей и по каждой из частей формируются отдельные акты.\n"
            },
            "has_postings_for_next_carriage": {
              "type": "boolean",
              "description": "Признак наличия подлежащих отгрузке отправлений, которые не попали в текущую перевозку. `true`, если такие отправления есть."
            },
            "partial_num": {
              "type": "integer",
              "format": "int64",
              "description": "Порядковый номер частичной перевозки."
            },
            "related_docs": {
              "$ref": "#/components/schemas/v2PostingFBSActListRelatedDocs"
            }
          }
        },
        "v2PostingFBSActListResponse": {
          "type": "object",
          "properties": {
            "result": {
              "type": "array",
              "description": "Результат запроса.",
              "items": {
                "$ref": "#/components/schemas/v2PostingFBSActListResult"
              }
            }
          }
        },
        "v2PostingFBSDigitalActDocumentSignRequest": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор отгрузки."
            },
            "doc_type": {
              "type": "string",
              "description": "Тип электронного документа:\n  - `act_of_mismatch` — акт о расхождениях,\n  - `act_of_excess` — акт об излишках.\n"
            }
          }
        },
        "v2PostingFBSDigitalActDocumentSignResponse": {
          "type": "object",
          "properties": {
            "result": {
              "type": "string",
              "description": "Результат обработки."
            }
          }
        },
        "v2PostingFBSActGetPostingsRequest": {
          "type": "object",
          "properties": {
            "id": {
              "type": "int",
              "format": "int64",
              "description": "Идентификатор акта."
            }
          }
        },
        "v2PostingFBSActGetProducts": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Название товара."
            },
            "offer_id": {
              "type": "string",
              "description": "Идентификатор товара в системе продавца — артикул."
            },
            "price": {
              "type": "string",
              "description": "Цена товара."
            },
            "quantity": {
              "type": "integer",
              "format": "int32",
              "description": "Количество товара в отправлении."
            },
            "sku": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор товара в системе Ozon — SKU."
            }
          }
        },
        "v2PostingFBSActGetPostingsResult": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор акта."
            },
            "multi_box_qty": {
              "type": "integer",
              "format": "int32",
              "description": "Количество коробок, в которые упакован товар."
            },
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            },
            "status": {
              "type": "string",
              "description": "Статус отправления."
            },
            "seller_error": {
              "type": "string",
              "description": "Расшифровка кода ошибки."
            },
            "updated_at": {
              "type": "string",
              "format": "date-time",
              "description": "Дата и время обновления записи об отправлении."
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "description": "Дата и время создания записи об отправлении."
            },
            "products": {
              "type": "array",
              "description": "Список товаров в отправлении.",
              "items": {
                "$ref": "#/components/schemas/v2PostingFBSActGetProducts"
              }
            }
          }
        },
        "v2PostingFBSActGetPostingsResponse": {
          "type": "object",
          "properties": {
            "result": {
              "type": "array",
              "description": "Информация об отправлениях.",
              "items": {
                "$ref": "#/components/schemas/v2PostingFBSActGetPostingsResult"
              }
            }
          }
        },
        "postingFbsPostingDeliveringRequest": {
          "properties": {
            "posting_number": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "Идентификатор отправления."
            }
          },
          "type": "object"
        },
        "FbsPostingMoveStatusResponseMoveStatus": {
          "properties": {
            "error": {
              "type": "string",
              "description": "Ошибка при обработке запроса."
            },
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            },
            "result": {
              "type": "boolean",
              "description": "Если запрос выполнен без ошибок — `true`."
            }
          },
          "type": "object"
        },
        "postingFbsPostingMoveStatusResponse": {
          "properties": {
            "result": {
              "description": "Результат работы метода.",
              "items": {
                "$ref": "#/components/schemas/FbsPostingMoveStatusResponseMoveStatus"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "FbsPostingTrackingNumberSetRequestTrackingNumber": {
          "properties": {
            "posting_number": {
              "type": "string",
              "description": "Идентификатор отправления."
            },
            "tracking_number": {
              "type": "string",
              "description": "Трек-номер отправления."
            }
          },
          "type": "object"
        },
        "postingFbsPostingTrackingNumberSetRequest": {
          "properties": {
            "tracking_numbers": {
              "items": {
                "$ref": "#/components/schemas/FbsPostingTrackingNumberSetRequestTrackingNumber"
              },
              "type": "array",
              "description": "Массив с парами идентификатор отправления — трек-номер."
            }
          },
          "type": "object"
        },
        "postingFbsPostingLastMileRequest": {
          "properties": {
            "posting_number": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "Идентификатор отправления."
            }
          },
          "type": "object"
        },
        "postingFbsPostingDeliveredRequest": {
          "properties": {
            "posting_number": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "Идентификатор отправления."
            }
          },
          "type": "object"
        },
        "postingFbsPostingSentbysellerRequest": {
          "properties": {
            "posting_number": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "Список идентификаторов отправлений."
            }
          },
          "type": "object"
        },
        "postingFbsPostingSentbysellerResponseItem": {
          "properties": {
            "error": {
              "type": "string",
              "description": "Ошибка."
            },
            "posting_number": {
              "type": "string",
              "description": "Идентификатор отправления."
            },
            "result": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "postingFbsPostingSentbysellerResponse": {
          "properties": {
            "result": {
              "description": "Результат работы метода.",
              "items": {
                "$ref": "#/components/schemas/postingFbsPostingSentbysellerResponseItem"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "v1PostingFbsTimeslotChangeRestrictionsRequest": {
          "type": "object",
          "properties": {
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            }
          }
        },
        "v1PostingFbsTimeslotChangeRestrictionsDeliveryInterval": {
          "type": "object",
          "description": "Период дат, доступных для переноса.",
          "properties": {
            "begin": {
              "type": "string",
              "format": "date-time",
              "description": "Дата начала периода.\n\nФормат: `YYYY-MM-DDTHH:mm:ss.sssZ`.\n"
            },
            "end": {
              "type": "string",
              "format": "date-time",
              "description": "Дата конца периода.\n\nФормат: `YYYY-MM-DDTHH:mm:ss.sssZ`.\n"
            }
          }
        },
        "v1PostingFbsTimeslotChangeRestrictionsResponse": {
          "type": "object",
          "properties": {
            "delivery_interval": {
              "$ref": "#/components/schemas/v1PostingFbsTimeslotChangeRestrictionsDeliveryInterval"
            },
            "remaining_changes_count": {
              "type": "integer",
              "format": "int64",
              "description": "Количество оставшихся переносов."
            }
          }
        },
        "v1PostingFbsTimeslotSetNewTimeslot": {
          "type": "object",
          "description": "Новый период для даты доставки.",
          "properties": {
            "from": {
              "type": "string",
              "format": "date-time",
              "description": "Дата начала периода.\n\nФормат: `YYYY-MM-DDTHH:mm:ss.sssZ`.\n"
            },
            "to": {
              "type": "string",
              "format": "date-time",
              "description": "Дата конца периода.\n\nФормат: `YYYY-MM-DDTHH:mm:ss.sssZ`.\n"
            }
          }
        },
        "v1PostingFbsTimeslotSetRequest": {
          "type": "object",
          "properties": {
            "new_timeslot": {
              "$ref": "#/components/schemas/v1PostingFbsTimeslotSetNewTimeslot"
            },
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            }
          }
        },
        "v1PostingFbsTimeslotSetResponse": {
          "type": "object",
          "properties": {
            "result": {
              "type": "boolean",
              "description": "`true`, если дата изменена.\n"
            }
          }
        },
        "GetEtgbRequestDate": {
          "type": "object",
          "description": "Фильтр по периоду создания деклараций.",
          "properties": {
            "from": {
              "type": "string",
              "format": "date-time",
              "description": "Дата начала."
            },
            "to": {
              "type": "string",
              "format": "date-time",
              "description": "Дата окончания."
            }
          }
        },
        "v1GetEtgbRequest": {
          "type": "object",
          "properties": {
            "date": {
              "$ref": "#/components/schemas/GetEtgbRequestDate"
            }
          }
        },
        "GetEtgbResponseResultEtgb": {
          "type": "object",
          "description": "Информация о декларации.",
          "properties": {
            "number": {
              "type": "string",
              "description": "Номер."
            },
            "date": {
              "type": "string",
              "description": "Дата создания."
            },
            "url": {
              "type": "string",
              "description": "Ссылка на файл.\n\nЕсли поле пустое и вам нужен файл, обратитесь в поддержку Ozon.\n"
            }
          }
        },
        "GetEtgbResponseResult": {
          "type": "object",
          "properties": {
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            },
            "etgb": {
              "$ref": "#/components/schemas/GetEtgbResponseResultEtgb"
            }
          }
        },
        "v1GetEtgbResponse": {
          "type": "object",
          "properties": {
            "result": {
              "type": "array",
              "description": "Результат запроса.",
              "items": {
                "$ref": "#/components/schemas/GetEtgbResponseResult"
              }
            }
          }
        },
        "returnsGetReturnsCompanyFboRequestFilter": {
          "properties": {
            "posting_number": {
              "type": "string",
              "description": "Идентификатор отправления."
            },
            "status": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "Статус возврата:\n  - `Created` — возврат создан,\n  - `ReturnedToOzon` — возврат на складе Ozon.\n"
            }
          },
          "type": "object",
          "description": "Фильтр."
        },
        "returnsGetReturnsCompanyFboRequest": {
          "properties": {
            "filter": {
              "$ref": "#/components/schemas/returnsGetReturnsCompanyFboRequestFilter"
            },
            "limit": {
              "format": "int64",
              "type": "integer",
              "description": "Количество значений в ответе:\n  - максимум — 1000,\n  - минимум — 1.\n"
            },
            "offset": {
              "format": "int64",
              "type": "integer",
              "description": "Количество элементов, которое будет пропущено в ответе. Например, если `offset = 10`, то ответ начнётся с 11-го найденного элемента."
            }
          },
          "type": "object"
        },
        "GetReturnsCompanyFboResponseGetReturnsCompanyItemFbo": {
          "properties": {
            "accepted_from_customer_moment": {
              "format": "date-time",
              "type": "string",
              "description": "Время приёма возврата от покупателя."
            },
            "company_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор продавца."
            },
            "current_place_name": {
              "type": "string",
              "description": "Текущее местонахождение возврата."
            },
            "dst_place_name": {
              "type": "string",
              "description": "Место назначения возврата."
            },
            "id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор возврата."
            },
            "is_opened": {
              "type": "boolean",
              "description": "Признак вскрытия упаковки. `true`, если упаковка вскрыта."
            },
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            },
            "return_reason_name": {
              "type": "string",
              "description": "Причина возврата."
            },
            "returned_to_ozon_moment": {
              "format": "date-time",
              "type": "string",
              "description": "Время доставки возврата на склад Ozon."
            },
            "sku": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор товара на Ozon."
            },
            "status_name": {
              "type": "string",
              "description": "Статус возврата."
            }
          },
          "type": "object",
          "description": "Информация о возврате."
        },
        "returnsGetReturnsCompanyFboResponse": {
          "properties": {
            "count": {
              "format": "int64",
              "type": "integer",
              "description": "Счётчик элементов в ответе."
            },
            "returns": {
              "items": {
                "$ref": "#/components/schemas/GetReturnsCompanyFboResponseGetReturnsCompanyItemFbo"
              },
              "type": "array",
              "description": "Информация о возвратах."
            }
          },
          "type": "object"
        },
        "v3ReturnsCompanyFilterFbo": {
          "type": "object",
          "description": "Фильтр.",
          "properties": {
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            },
            "status": {
              "items": {
                "type": "string"
              }
            }
          }
        },
        "v3GetReturnsCompanyFboV3Request": {
          "type": "object",
          "properties": {
            "filter": {
              "$ref": "#/components/schemas/v3ReturnsCompanyFilterFbo"
            },
            "last_id": {
              "description": "Идентификатор последнего значения на странице. Оставьте это поле пустым при выполнении первого запроса.\n\nЧтобы получить следующие значения, укажите `last_id` из ответа предыдущего запроса.\n",
              "type": "integer",
              "format": "int64"
            },
            "limit": {
              "description": "Количество значений в ответе.",
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "commonReturnsCompanyItemFbo": {
          "type": "object",
          "properties": {
            "accepted_from_customer_moment": {
              "type": "string",
              "format": "date-time",
              "description": "Время приёма возврата от поĸупателя."
            },
            "company_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор продавца."
            },
            "current_place_name": {
              "type": "string",
              "description": "Текущее местонахождение возврата."
            },
            "dst_place_name": {
              "type": "string",
              "description": "Место назначения возврата."
            },
            "id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор возврата."
            },
            "is_opened": {
              "type": "boolean",
              "description": "Признак вскрытия упаковки. `true`, если упаковка вскрыта."
            },
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            },
            "return_reason_name": {
              "type": "string",
              "description": "Причина возврата."
            },
            "returned_to_ozon_moment": {
              "type": "string",
              "format": "date-time",
              "description": "Время доставки возврата на склад Ozon."
            },
            "sku": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор товара на Ozon."
            },
            "status_name": {
              "type": "string",
              "description": "Статус возврата."
            }
          }
        },
        "v3GetReturnsCompanyFboV3Response": {
          "type": "object",
          "properties": {
            "last_id": {
              "description": "Идентификатор последнего значения на странице.",
              "type": "integer",
              "format": "int64"
            },
            "returns": {
              "description": "Информация о возвратах.",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/commonReturnsCompanyItemFbo"
              }
            }
          }
        },
        "FilterTimeRange": {
          "properties": {
            "time_from": {
              "format": "date-time",
              "type": "string",
              "description": "Начало периода.\n\nФормат: `YYYY-MM-DDTHH:mm:ss.sssZ`.<br>\nПример: `2019-11-25T10:43:06.51`.\n"
            },
            "time_to": {
              "format": "date-time",
              "type": "string",
              "description": "Окончание периода.\n\nФормат: `YYYY-MM-DDTHH:mm:ss.sssZ`.<br>\nПример: `2019-11-25T10:43:06.51`.\n"
            }
          },
          "type": "object"
        },
        "returnsGetReturnsCompanyFBSRequestFilter": {
          "type": "object",
          "properties": {
            "accepted_from_customer_moment": {
              "items": {
                "$ref": "#/components/schemas/FilterTimeRange"
              },
              "description": "Время приёма возврата от поĸупателя."
            },
            "last_free_waiting_day": {
              "items": {
                "$ref": "#/components/schemas/FilterTimeRange"
              },
              "description": "Последний день бесплатного хранения."
            },
            "order_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор заказа."
            },
            "posting_number": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "Идентификатор отправления."
            },
            "product_name": {
              "type": "string",
              "description": "Название товара."
            },
            "product_offer_id": {
              "type": "string",
              "description": "Артикул товара."
            },
            "status": {
              "type": "string",
              "description": "Статус возврата:\n  - `returned_to_seller` — возвращён продавцу,\n  - `waiting_for_seller` — ожидает получения продавцом,\n  - `accepted_from_customer` — принят от покупателя,\n  - `cancelled_with_compensation` — отменено с компенсацией,\n  - `ready_for_shipment` — готов к отправке,\n  - `moving` — в пути,\n  - `disposed` — утилизирован,\n  - `disposing` — на утилизации.\n"
            }
          },
          "description": "Фильтр."
        },
        "returnsGetReturnsCompanyFBSRequest": {
          "properties": {
            "filter": {
              "$ref": "#/components/schemas/returnsGetReturnsCompanyFBSRequestFilter"
            },
            "limit": {
              "format": "int64",
              "type": "integer",
              "description": "Количество значений в ответе:\n  - максимум — 1000,\n  - минимум — 1.\n"
            },
            "offset": {
              "format": "int64",
              "type": "integer",
              "description": "Количество элементов, которое будет пропущено в ответе. Например, если `offset = 10`, то ответ начнётся с 11-го найденного элемента."
            }
          },
          "type": "object"
        },
        "ResultGetReturnsCompanyFBSItem": {
          "properties": {
            "accepted_from_customer_moment": {
              "type": "string",
              "description": "Время приёма возврата от покупателя."
            },
            "clearing_id": {
              "format": "int64",
              "type": "integer",
              "description": "Нижний штрихкод на этикетке товара."
            },
            "commission": {
              "format": "double",
              "type": "number",
              "description": "Комиссия."
            },
            "commission_percent": {
              "format": "double",
              "type": "number",
              "description": "Процент комиссии."
            },
            "id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор возврата."
            },
            "is_moving": {
              "type": "boolean",
              "description": "Если товар в пути — `true`."
            },
            "is_opened": {
              "type": "boolean",
              "description": "Признак вскрытия упаковки. `true`, если упаковка вскрыта."
            },
            "last_free_waiting_day": {
              "type": "string",
              "description": "Последний день бесплатного хранения."
            },
            "place_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор склада, в который везут товар."
            },
            "moving_to_place_name": {
              "type": "string",
              "description": "Название склада, в который везут товар."
            },
            "picking_amount": {
              "format": "double",
              "type": "number",
              "description": "Стоимость доставки."
            },
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            },
            "price": {
              "format": "double",
              "type": "number",
              "description": "Текущая цена товара без скидки."
            },
            "price_without_commission": {
              "format": "double",
              "type": "number",
              "description": "Стоимость товара без учёта комиссии."
            },
            "product_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор товара."
            },
            "product_name": {
              "type": "string",
              "description": "Наименование товара."
            },
            "quantity": {
              "format": "int64",
              "type": "integer",
              "description": "Количество товара."
            },
            "return_date": {
              "type": "string",
              "description": "Дата возврата товара."
            },
            "return_reason_name": {
              "type": "string",
              "description": "Причина возврата."
            },
            "waiting_for_seller_date_time": {
              "type": "string",
              "description": "Дата готовности выдачи товара продавцу."
            },
            "returned_to_seller_date_time": {
              "type": "string",
              "description": "Дата выдачи товара продавцу."
            },
            "waiting_for_seller_days": {
              "format": "int64",
              "type": "integer",
              "description": "Срок хранения возврата в днях."
            },
            "returns_keeping_cost": {
              "format": "double",
              "type": "number",
              "description": "Стоимость хранения возврата."
            },
            "sku": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор товара на Ozon."
            },
            "status": {
              "type": "string",
              "description": "Статус возврата."
            }
          },
          "type": "object"
        },
        "GetReturnsCompanyFBSResponseResult": {
          "properties": {
            "count": {
              "format": "int64",
              "type": "integer",
              "description": "Счётчик элементов в ответе."
            },
            "returns": {
              "items": {
                "$ref": "#/components/schemas/ResultGetReturnsCompanyFBSItem"
              },
              "type": "array",
              "description": "Информация о возврате."
            }
          },
          "type": "object",
          "description": "Результат работы метода."
        },
        "returnsGetReturnsCompanyFBSResponse": {
          "properties": {
            "result": {
              "$ref": "#/components/schemas/GetReturnsCompanyFBSResponseResult"
            }
          },
          "type": "object"
        },
        "commonTimeRangeCustomerMoment": {
          "type": "object",
          "description": "Время приёма возврата от поĸупателя.",
          "properties": {
            "time_from": {
              "type": "string",
              "format": "date-time",
              "description": "Начало периода.\n\nФормат: `YYYY-MM-DDTHH:mm:ss.sssZ`.<br>\nПример: `2019-11-25T10:43:06.51`.\n"
            },
            "time_to": {
              "type": "string",
              "format": "date-time",
              "description": "Окончание периода.\n\nФормат: `YYYY-MM-DDTHH:mm:ss.sssZ`.<br>\nПример: `2019-11-25T10:43:06.51`.\n"
            }
          }
        },
        "commonTimeRangeLastDay": {
          "type": "object",
          "description": "Последний день бесплатного хранения.",
          "properties": {
            "time_from": {
              "type": "string",
              "format": "date-time",
              "description": "Дата и время начала последнего дня хранения.\n\nФормат: `YYYY-MM-DDTHH:mm:ss.sssZ`.<br>\nПример: `2019-11-25T10:43:06.51`.\n"
            },
            "time_to": {
              "type": "string",
              "format": "date-time",
              "description": "Дата и время окончания последнего дня хранения.\n\nФормат: `YYYY-MM-DDTHH:mm:ss.sssZ`.<br>\nПример: `2019-11-25T10:43:06.51`.\n"
            }
          }
        },
        "v3ReturnsCompanyFilterFbs": {
          "type": "object",
          "description": "Фильтр.",
          "properties": {
            "accepted_from_customer_moment": {
              "$ref": "#/components/schemas/commonTimeRangeCustomerMoment"
            },
            "last_free_waiting_day": {
              "$ref": "#/components/schemas/commonTimeRangeLastDay"
            },
            "order_id": {
              "description": "Идентификатор заказа.",
              "type": "integer",
              "format": "int64"
            },
            "posting_number": {
              "type": "array",
              "description": "Идентификатор отправления.",
              "items": {
                "type": "string"
              }
            },
            "product_name": {
              "description": "Название товара.",
              "type": "string"
            },
            "product_offer_id": {
              "description": "Артикул товара.",
              "type": "string"
            },
            "status": {
              "type": "string",
              "description": "Статус возврата:\n  - `returned_to_seller` — возвращён продавцу,\n  - `waiting_for_seller` — ожидает получения продавцом,\n  - `accepted_from_customer` — принят от покупателя,\n  - `cancelled_with_compensation` — отменено с компенсацией,\n  - `ready_for_shipment` — готов к отправке.\n"
            }
          }
        },
        "v3GetReturnsCompanyFbsV3Request": {
          "type": "object",
          "properties": {
            "filter": {
              "$ref": "#/components/schemas/v3ReturnsCompanyFilterFbs"
            },
            "limit": {
              "type": "integer",
              "format": "int64",
              "description": "Количество значений в ответе:\n  - максимум — 1000,\n  - минимум — 1.\n"
            },
            "last_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор возврата, который был загружен в предыдущий раз. В ответе будут возвраты, идентификаторы которых больше значения в `last_id`."
            }
          }
        },
        "commonReturnsCompanyItemFbs": {
          "type": "object",
          "properties": {
            "accepted_from_customer_moment": {
              "type": "string",
              "description": "Время приёма возврата от покупателя."
            },
            "clearing_id": {
              "format": "int64",
              "type": "integer",
              "description": "Нижний штрихкод на этикетке товара."
            },
            "commission": {
              "format": "double",
              "type": "number",
              "description": "Комиссия."
            },
            "commission_percent": {
              "format": "double",
              "type": "number",
              "description": "Процент комиссии."
            },
            "id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор возврата."
            },
            "is_moving": {
              "type": "boolean",
              "description": "Если товар в пути — `true`."
            },
            "is_opened": {
              "type": "boolean",
              "description": "Признак вскрытия упаковки. `true`, если упаковка вскрыта."
            },
            "last_free_waiting_day": {
              "type": "string",
              "description": "Последний день бесплатного хранения."
            },
            "place_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор склада, в который везут товар."
            },
            "moving_to_place_name": {
              "type": "string",
              "description": "Название склада, в который везут товар."
            },
            "picking_amount": {
              "format": "double",
              "type": "number",
              "description": "Стоимость доставки."
            },
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            },
            "picking_tag": {
              "type": "string"
            },
            "price": {
              "format": "double",
              "type": "number",
              "description": "Текущая цена товара без скидки."
            },
            "price_without_commission": {
              "format": "double",
              "type": "number",
              "description": "Стоимость товара без учёта комиссии."
            },
            "product_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор товара."
            },
            "product_name": {
              "type": "string",
              "description": "Наименование товара."
            },
            "quantity": {
              "format": "int64",
              "type": "integer",
              "description": "Количество товара."
            },
            "return_clearing_id": {
              "type": "integer",
              "format": "int64",
              "description": "Штрихкод возвратного отправления."
            },
            "return_date": {
              "type": "string",
              "description": "Дата возврата товара."
            },
            "return_reason_name": {
              "type": "string",
              "description": "Причина возврата."
            },
            "waiting_for_seller_date_time": {
              "type": "string",
              "description": "Дата готовности выдачи товара продавцу."
            },
            "returned_to_seller_date_time": {
              "type": "string",
              "description": "Дата выдачи товара продавцу."
            },
            "waiting_for_seller_days": {
              "format": "int64",
              "type": "integer",
              "description": "Срок хранения возврата в днях."
            },
            "returns_keeping_cost": {
              "format": "double",
              "type": "number",
              "description": "Стоимость хранения возврата."
            },
            "sku": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор товара на Ozon."
            },
            "status": {
              "type": "string",
              "description": "Статус возврата."
            }
          }
        },
        "v3GetReturnsCompanyFbsV3Response": {
          "type": "object",
          "properties": {
            "last_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор возврата, который был загружен в предыдущий раз. В ответе будут возвраты, идентификаторы которых больше значения в `last_id`."
            },
            "returns": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/commonReturnsCompanyItemFbs"
              },
              "description": "Информация о возвратах."
            }
          }
        },
        "v1GetConditionalCancellationRequest": {
          "type": "object",
          "properties": {
            "cancellation_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор заявки на отмену."
            }
          },
          "required": ["cancellation_id"]
        },
        "ConditionalCancellationCancellationReason": {
          "type": "object",
          "description": "Причина отмены.",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор причины отмены."
            },
            "name": {
              "type": "string",
              "description": "Название причины отмены."
            }
          }
        },
        "ConditionalCancellationState": {
          "type": "object",
          "description": "Статус заявки на отмену.",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор статуса."
            },
            "name": {
              "type": "string",
              "description": "Название статуса."
            },
            "state": {
              "type": "string",
              "enum": ["ON_APPROVAL", "APPROVED", "REJECTED"],
              "description": "Статус заявки:\n- `ON_APPROVAL` — ожидает решения.\n- `APPROVED` — подтверждённая.\n- `REJECTED` — отклонённая.\n"
            }
          }
        },
        "v1ConditionalCancellation": {
          "type": "object",
          "description": "Результат запроса.",
          "properties": {
            "cancellation_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор заявки на отмену."
            },
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            },
            "cancellation_reason": {
              "$ref": "#/components/schemas/ConditionalCancellationCancellationReason"
            },
            "cancelled_at": {
              "type": "string",
              "format": "date-time",
              "description": "Дата создания заявки на отмену."
            },
            "cancellation_reason_message": {
              "type": "string",
              "description": "Комментарий к заявке на отмену, введённый инициатором отмены вручную."
            },
            "tpl_integration_type": {
              "type": "string",
              "description": "Тип интеграции со службой доставки."
            },
            "state": {
              "$ref": "#/components/schemas/ConditionalCancellationState"
            },
            "cancellation_initiator": {
              "type": "string",
              "enum": ["OZON", "SELLER", "CLIENT", "SYSTEM", "DELIVERY"],
              "description": "Инициатор отмены:\n- `OZON` — Ozon, \n- `SELLER` — продавец, \n- `CLIENT` — покупатель, \n- `SYSTEM` — система, \n- `DELIVERY` — служба доставки.\n"
            },
            "order_date": {
              "type": "string",
              "format": "date-time",
              "description": "Дата создания заказа."
            },
            "approve_comment": {
              "type": "string",
              "description": "Комментарий, оставленный при подтверждении или отклонении заявки на отмену."
            },
            "approve_date": {
              "type": "string",
              "format": "date-time",
              "description": "Дата подтверждения или отклонения заявки на отмену."
            },
            "auto_approve_date": {
              "type": "string",
              "format": "date-time",
              "description": "Дата, после которой заявка будет автоматически подтверждена."
            }
          }
        },
        "v1GetConditionalCancellationResponse": {
          "type": "object",
          "properties": {
            "result": {
              "$ref": "#/components/schemas/v1ConditionalCancellation"
            }
          }
        },
        "GetConditionalCancellationListRequestFilters": {
          "type": "object",
          "description": "Фильтры.",
          "properties": {
            "cancellation_initiator": {
              "description": "Фильтр по инициатору отмены:\n- `OZON` — Ozon, \n- `SELLER` — продавец, \n- `CLIENT` — покупатель, \n- `SYSTEM` — система, \n- `DELIVERY` — служба доставки.\n\nНеобязательный параметр. Можно передавать несколько значений.\n",
              "items": {
                "type": "string",
                "enum": ["OZON", "SELLER", "CLIENT", "SYSTEM", "DELIVER"]
              }
            },
            "posting_number": {
              "description": "Фильтр по номеру отправления.\n\nНеобязательный параметр. Можно передавать несколько значений.\n",
              "type": "string"
            },
            "state": {
              "description": "Фильтр по статусу заявки на отмену:\n- `ALL` — заявки в любом статусе, \n- `ON_APPROVAL` — заявки на рассмотрении,\n- `APPROVED` — подтверждённые заявки, \n- `REJECTED` — отклонённые заявки.\n",
              "type": "string",
              "enum": ["ALL", "ON_APPROVAL", "APPROVED", "REJECTED"]
            }
          }
        },
        "GetConditionalCancellationListRequestWith": {
          "type": "object",
          "description": "Дополнительная информация.",
          "properties": {
            "counters": {
              "type": "boolean",
              "description": "Признак, что в ответе нужно вывести счётчик заявок в разных статусах."
            }
          }
        },
        "v1GetConditionalCancellationListRequest": {
          "type": "object",
          "properties": {
            "filters": {
              "$ref": "#/components/schemas/GetConditionalCancellationListRequestFilters"
            },
            "limit": {
              "type": "integer",
              "format": "int32",
              "description": "Количество заявок в ответе."
            },
            "offset": {
              "type": "integer",
              "format": "int32",
              "description": "Количество элементов, которое будет пропущено в ответе. Например, если `offset=10`, ответ начнётся с 11-го найденного элемента."
            },
            "with": {
              "$ref": "#/components/schemas/GetConditionalCancellationListRequestWith"
            }
          },
          "required": ["limit"]
        },
        "GetConditionalCancellationListResponseCounters": {
          "type": "object",
          "description": "Cчётчик заявок в разных статусах.",
          "properties": {
            "on_approval": {
              "description": "Количество заявок на рассмотрении.",
              "type": "integer",
              "format": "int64"
            },
            "approved": {
              "description": "Количество подтверждённых заявок.",
              "type": "integer",
              "format": "int64"
            },
            "rejected": {
              "description": "Количество отклонённых заявок.",
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "v1GetConditionalCancellationListResponse": {
          "type": "object",
          "properties": {
            "result": {
              "description": "Список заявок на отмену.",
              "items": {
                "$ref": "#/components/schemas/v1ConditionalCancellation"
              }
            },
            "total": {
              "type": "integer",
              "format": "int32",
              "description": "Общее количество заявок по заданным фильтрам."
            },
            "counters": {
              "$ref": "#/components/schemas/GetConditionalCancellationListResponseCounters"
            }
          }
        },
        "v1ConditionalCancellationMoveRequest": {
          "type": "object",
          "properties": {
            "cancellation_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор заявки на отмену."
            },
            "comment": {
              "type": "string",
              "description": "Комментарий."
            }
          },
          "required": ["cancellation_id"]
        },
        "ChatListRequestWith": {
          "type": "object",
          "description": "Дополнительные поля, которые нужно добавить в ответ.",
          "properties": {
            "first_unread_message_id": {
              "type": "boolean",
              "description": "Атрибут выдачи параметра `first_unread_message_id` в ответе. Если `true`, в ответе вы получите идентификатор первого непрочитанного сообщения в чате.\n"
            },
            "unread_count": {
              "type": "boolean",
              "description": "Атрибут выдачи параметра `unread_count` в ответе. Если `true`, в ответе вы получите количество непрочитанных сообщений в чате.\n"
            }
          }
        },
        "chatChatListRequest": {
          "properties": {
            "chat_id_list": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "Массив с идентификаторами чатов, для которых нужно вывести информацию."
            },
            "page": {
              "format": "int32",
              "type": "integer",
              "description": "Количество страниц в ответе."
            },
            "page_size": {
              "format": "int32",
              "type": "integer",
              "description": "Количество чатов на странице. Значение по умолчанию — 100. Максимальное значение — 1000."
            },
            "with": {
              "$ref": "#/components/schemas/ChatListRequestWith"
            }
          },
          "title": "ChatList",
          "type": "object"
        },
        "ChatExternalUser": {
          "properties": {
            "id": {
              "type": "string",
              "description": "Идентификатор участника чата."
            },
            "type": {
              "type": "string",
              "description": "Тип участника чата:\n  - `customer` — покупатель,\n  - `seller` — продавец,\n  - `crm` — системные сообщения,\n  - `courier` — курьер.\n"
            }
          },
          "type": "object",
          "description": "Информация об участнике чата."
        },
        "chatChat": {
          "properties": {
            "first_unread_message_id": {
              "type": "integer",
              "format": "uint64",
              "description": "Идентификатор первого непрочитанного сообщения в чате."
            },
            "id": {
              "type": "string",
              "description": "Идентификатор чата."
            },
            "last_message_id": {
              "type": "integer",
              "format": "uint64",
              "description": "Идентификатор последнего сообщения в чате."
            },
            "unread_count": {
              "type": "integer",
              "format": "int64",
              "description": "Количество непрочитанных сообщений в чате."
            },
            "users": {
              "items": {
                "$ref": "#/components/schemas/ChatExternalUser"
              },
              "type": "array",
              "description": "Cписок участников чата."
            }
          },
          "title": "Chat models",
          "type": "object"
        },
        "chatChatListResponse": {
          "properties": {
            "result": {
              "items": {
                "$ref": "#/components/schemas/chatChat"
              },
              "type": "array"
            },
            "total_unread_count": {
              "type": "integer",
              "format": "int64",
              "description": "Общее количество непрочитанных сообщений."
            }
          },
          "type": "object"
        },
        "chatChatSendMessageRequest": {
          "properties": {
            "chat_id": {
              "type": "string",
              "description": "Идентификатор чата."
            },
            "text": {
              "type": "string",
              "description": "Текст сообщения в формате plain text."
            }
          },
          "title": "ChatSendMessage",
          "type": "object"
        },
        "chatChatSendMessageResponse": {
          "properties": {
            "result": {
              "type": "string",
              "description": "Результат обработки запроса."
            }
          },
          "type": "object"
        },
        "chatChatSendFileRequest": {
          "properties": {
            "base64_content": {
              "type": "string",
              "description": "Файл в виде строки base64."
            },
            "chat_id": {
              "type": "string",
              "description": "Идентификатор чата."
            },
            "name": {
              "type": "string",
              "description": "Название файла с расширением."
            }
          },
          "title": "ChatSendFile",
          "type": "object"
        },
        "chatChatSendFileResponse": {
          "properties": {
            "result": {
              "type": "string",
              "description": "Результат обработки запроса."
            }
          },
          "type": "object"
        },
        "chatChatHistoryRequest": {
          "properties": {
            "chat_id": {
              "type": "string",
              "description": "Идентификатор чата."
            },
            "from_message_id": {
              "format": "uint64",
              "type": "string",
              "description": "Идентификатор сообщения, с которого начать вывод истории чата."
            },
            "limit": {
              "format": "int64",
              "type": "integer",
              "description": "Количество сообщений в ответе."
            }
          },
          "title": "ChatHistory",
          "type": "object"
        },
        "ContextItem": {
          "properties": {
            "sku": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор товара в системе Ozon — SKU."
            }
          },
          "type": "object",
          "description": "Информация о товаре."
        },
        "OrderPosting": {
          "properties": {
            "delivery_schema": {
              "type": "string",
              "description": "Схема доставки:\n  - `FBO`,\n  - `FBS`,\n  - `RFBS`,\n  - `Crossborder`.\n"
            },
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            },
            "sku_list": {
              "items": {
                "format": "int64",
                "type": "integer"
              },
              "type": "array",
              "description": "Список идентификаторов товаров в отправлении."
            }
          },
          "type": "object"
        },
        "ContextOrder": {
          "properties": {
            "order_number": {
              "type": "string",
              "description": "Номер заказа."
            },
            "postings": {
              "items": {
                "$ref": "#/components/schemas/OrderPosting"
              },
              "type": "array",
              "description": "Информация об отправлении."
            }
          },
          "type": "object",
          "description": "Информация о заказе."
        },
        "MessageContext": {
          "properties": {
            "item": {
              "$ref": "#/components/schemas/ContextItem"
            },
            "order": {
              "$ref": "#/components/schemas/ContextOrder"
            }
          },
          "type": "object",
          "description": "Заказ или отдельный товар, о котором пользователь написал в чат."
        },
        "ChatFile": {
          "properties": {
            "mime": {
              "type": "string",
              "description": "Тип файла."
            },
            "name": {
              "type": "string",
              "description": "Название файла."
            },
            "size": {
              "format": "int64",
              "type": "integer",
              "description": "Размер файла в байтах."
            },
            "url": {
              "type": "string",
              "description": "URL файла."
            }
          },
          "type": "object",
          "description": "Информация о файле в чате. Отображается только для сообщений с параметром `type = file`."
        },
        "ChatMessage": {
          "properties": {
            "context": {
              "$ref": "#/components/schemas/MessageContext"
            },
            "created_at": {
              "format": "date-time",
              "type": "string",
              "description": "Дата и время создания."
            },
            "file": {
              "$ref": "#/components/schemas/ChatFile"
            },
            "id": {
              "format": "uint64",
              "type": "string",
              "description": "Идентификатор файла."
            },
            "text": {
              "type": "string",
              "description": "Сообщение, только для `type = text`."
            },
            "type": {
              "type": "string",
              "description": "Тип сообщения:\n  - `text` — текст,\n  - `file` — файл.\n"
            },
            "user": {
              "$ref": "#/components/schemas/ChatExternalUser"
            }
          },
          "type": "object"
        },
        "chatChatHistoryResponse": {
          "properties": {
            "result": {
              "description": "Результат работы метода.",
              "items": {
                "$ref": "#/components/schemas/ChatMessage"
              },
              "type": "array"
            }
          },
          "type": "object",
          "description": "Результат."
        },
        "chatChatUpdatesRequest": {
          "properties": {
            "chat_id": {
              "type": "string",
              "description": "Идентификатор чата."
            },
            "from_message_id": {
              "format": "uint64",
              "type": "string",
              "description": "Идентификатор сообщения."
            },
            "limit": {
              "format": "int64",
              "type": "integer",
              "description": "Количество сообщений в ответе."
            }
          },
          "title": "ChatUpdates",
          "type": "object"
        },
        "chatChatUpdatesResponse": {
          "properties": {
            "result": {
              "items": {
                "$ref": "#/components/schemas/ChatMessage"
              },
              "type": "array",
              "description": "Результат работы метода."
            }
          },
          "type": "object"
        },
        "chatChatStartRequest": {
          "properties": {
            "posting_number": {
              "type": "string",
              "description": "Идентификатор отправления."
            }
          },
          "title": "ChatStart",
          "type": "object"
        },
        "ChatStartResponseResult": {
          "properties": {
            "chat_id": {
              "type": "string",
              "description": "Идентификатор чата."
            }
          },
          "type": "object",
          "description": "Результат работы метода."
        },
        "chatChatStartResponse": {
          "properties": {
            "result": {
              "$ref": "#/components/schemas/ChatStartResponseResult"
            }
          },
          "type": "object"
        },
        "ChatListRequestFilter": {
          "type": "object",
          "description": "Фильтр по чатам.",
          "properties": {
            "chat_status": {
              "type": "string",
              "description": "Фильтр по статусу чата:\n- `All` — все чаты.\n- `Opened` — открытые чаты.\n- `Closed` — закрытые чаты.\n\nЗначение по умолчанию: `All`.\n"
            },
            "unread_only": {
              "type": "boolean",
              "description": "Фильтр по чатам с непрочитанными сообщениями."
            }
          }
        },
        "ChatList": {
          "type": "object",
          "properties": {
            "filter": {
              "$ref": "#/components/schemas/ChatListRequestFilter"
            },
            "limit": {
              "type": "integer",
              "format": "int64",
              "description": "Количество значений в ответе. Значение по умолчанию — `30`."
            },
            "offset": {
              "type": "integer",
              "format": "int64",
              "description": "Количество элементов, которое будет пропущено в ответе. Например, если `offset=10`, ответ начнётся с 11-го найденного элемента."
            }
          }
        },
        "ChatInfo": {
          "type": "object",
          "description": "Данные чата.",
          "properties": {
            "chat_id": {
              "type": "string",
              "description": "Идентификатор чата."
            },
            "chat_status": {
              "type": "string",
              "description": "Статус чата:\n- `All` — все чаты.\n- `Opened` — открытые чаты.\n- `Closed` — закрытые чаты.\n"
            },
            "chat_type": {
              "type": "string",
              "description": "Тип чата:\n- `Seller_Support` — чат с поддержкой.\n- `Buyer_Seller` — чат с покупателем.\n"
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "description": "Дата создания чата."
            },
            "first_unread_message_id": {
              "type": "integer",
              "format": "uint64",
              "description": "Идентификатор первого непрочитанного сообщения в чате."
            },
            "last_message_id": {
              "type": "integer",
              "format": "uint64",
              "description": "Идентификатор последнего сообщения в чате."
            },
            "unread_count": {
              "type": "integer",
              "format": "int64",
              "description": "Количество непрочитанных сообщений в чате."
            }
          }
        },
        "v2ChatListResponse": {
          "type": "object",
          "properties": {
            "chats": {
              "description": "Данные чатов.",
              "items": {
                "$ref": "#/components/schemas/ChatInfo"
              }
            },
            "total_chats_count": {
              "type": "integer",
              "format": "int64",
              "description": "Общее количество чатов."
            },
            "total_unread_count": {
              "type": "integer",
              "format": "int64",
              "description": "Общее количество непрочитанных сообщений."
            }
          }
        },
        "ChatHistory": {
          "type": "object",
          "properties": {
            "chat_id": {
              "type": "string",
              "description": "Идентификатор чата."
            },
            "direction": {
              "type": "string",
              "description": "Направление сортировки сообщений:\n- `Forward` — от старых к новым.\n- `Backward` — от новых к старым.\n\nЗначение по умолчанию — `Backward`. Количество сообщений можно установить в параметре `limit`.\n"
            },
            "from_message_id": {
              "type": "integer",
              "format": "uint64",
              "description": "Идентификатор сообщения, с которого начать вывод истории чата. По умолчанию — последнее видимое сообщение."
            },
            "limit": {
              "type": "integer",
              "format": "int64",
              "description": "Количество сообщений в ответе. По умолчанию — 50."
            }
          },
          "required": ["chat_id"]
        },
        "v2User": {
          "type": "object",
          "description": "Информация об участнике чата.",
          "properties": {
            "id": {
              "type": "string",
              "description": "Идентификатор участника чата."
            },
            "type": {
              "type": "string",
              "description": "Тип участника чата:\n- `customer` — покупатель,\n- `seller` — продавец,\n- `crm` — системные сообщения,\n- `courier` — курьер,\n- `support` — поддержка.\n"
            }
          }
        },
        "v2ChatMessage": {
          "type": "object",
          "properties": {
            "created_at": {
              "type": "string",
              "format": "date-time",
              "description": "Дата создания сообщения."
            },
            "data": {
              "description": "Массив с содержимым сообщения в формате Markdown.",
              "items": {
                "type": "string"
              }
            },
            "is_read": {
              "type": "boolean",
              "description": "Признак, что сообщение прочитано."
            },
            "messageId": {
              "type": "integer",
              "format": "uint64",
              "description": "Идентификатор сообщения."
            },
            "user": {
              "$ref": "#/components/schemas/v2User"
            }
          }
        },
        "v2ChatHistoryResponse": {
          "type": "object",
          "properties": {
            "has_next": {
              "type": "boolean",
              "description": "Признак, что в ответе вернули не все сообщения."
            },
            "messages": {
              "description": "Массив сообщений, отсортированный в соответсвии с параметром `direction` из тела запроса.",
              "items": {
                "$ref": "#/components/schemas/v2ChatMessage"
              }
            }
          }
        },
        "ChatRead": {
          "type": "object",
          "properties": {
            "chat_id": {
              "type": "string",
              "description": "Идентификатор чата."
            },
            "from_message_id": {
              "type": "integer",
              "format": "uint64",
              "description": "Идентификатор сообщения."
            }
          },
          "required": ["chat_id", "from_message_id"]
        },
        "v2ChatReadResponse": {
          "type": "object",
          "properties": {
            "unread_count": {
              "type": "integer",
              "format": "int64",
              "description": "Количество непрочитанных сообщений в чате."
            }
          }
        },
        "v1InvoiceCreateOrUpdateRequest": {
          "type": "object",
          "properties": {
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            },
            "url": {
              "type": "string",
              "description": "Ссылка на счёт-проформу."
            }
          }
        },
        "v1InvoiceCreateOrUpdateResponse": {
          "type": "object",
          "properties": {
            "result": {
              "type": "boolean",
              "description": "Результат работы метода."
            }
          }
        },
        "v1InvoiceGetRequest": {
          "type": "object",
          "properties": {
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            }
          }
        },
        "InvoiceGetResponseResult": {
          "type": "object",
          "properties": {
            "file_url": {
              "type": "string",
              "description": "Ссылка на счёт-проформу."
            }
          },
          "description": "Результат работы метода."
        },
        "v1InvoiceGetResponse": {
          "type": "object",
          "properties": {
            "result": {
              "$ref": "#/components/schemas/InvoiceGetResponseResult"
            }
          }
        },
        "v1InvoiceDeleteRequest": {
          "type": "object",
          "properties": {
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            }
          }
        },
        "v1InvoiceDeleteResponse": {
          "type": "object",
          "properties": {
            "result": {
              "type": "boolean",
              "description": "Результат работы метода."
            }
          }
        },
        "reportReportInfoRequest": {
          "properties": {
            "code": {
              "type": "string",
              "description": "Уникальный идентификатор отчёта."
            }
          },
          "title": "ReportInfo",
          "type": "object"
        },
        "reportReport": {
          "properties": {
            "code": {
              "type": "string",
              "description": "Уникальный идентификатор отчёта."
            },
            "created_at": {
              "format": "date-time",
              "type": "string",
              "description": "Дата создания отчёта."
            },
            "error": {
              "type": "string",
              "description": "Код ошибки при генерации отчёта."
            },
            "file": {
              "type": "string",
              "description": "Ссылка на CSV-файл."
            },
            "params": {
              "additionalProperties": {
                "type": "string",
                "description": "Фильтр."
              },
              "type": "object",
              "description": "Массив с фильтрами, указанными при создании отчёта продавцом."
            },
            "report_type": {
              "type": "string",
              "description": "Тип отчёта:\n  - `SELLER_PRODUCTS` — отчёт по товарам,\n  - `SELLER_TRANSACTIONS` — отчёт по транзакциям,\n  - `SELLER_PRODUCT_PRICES` — отчёт по ценам товаров,\n  - `SELLER_STOCK` — отчёт об остатках товаров,\n  - `SELLER_PRODUCT_MOVEMENT` — отчёт о перемещении товаров,\n  - `SELLER_RETURNS` — отчёт о возвратах,\n  - `SELLER_POSTINGS` — отчёт об отправлениях,\n  - `SELLER_FINANCE` — отчёт о финансах.\n"
            },
            "status": {
              "type": "string",
              "description": "Статус генерации отчёта:\n  - `success` — отчёт успешно создан,\n  - `failed` — ошибка при создании отчёта.\n"
            }
          },
          "title": "Common",
          "type": "object",
          "description": "Информация об отчёте."
        },
        "reportReportInfoResponse": {
          "properties": {
            "result": {
              "$ref": "#/components/schemas/reportReport"
            }
          },
          "type": "object"
        },
        "ReportListRequestReportType": {
          "default": "ALL",
          "enum": null,
          "type": "string",
          "description": "Тип отчёта:\n  - `ALL` — все отчёты,\n  - `SELLER_PRODUCTS` — отчёт по товарам,\n  - `SELLER_TRANSACTIONS` — отчёт по транзакциям,\n  - `SELLER_PRODUCT_PRICES` — отчёт по ценам товаров,\n  - `SELLER_STOCK` — отчёт об остатках товаров,\n  - `SELLER_PRODUCT_MOVEMENT` — отчёт о перемещении товаров,\n  - `SELLER_RETURNS` — отчёт о возвратах,\n  - `SELLER_POSTINGS` — отчёт об отправлениях,\n  - `SELLER_FINANCE` — отчёт о финансах.\n"
        },
        "reportReportListRequest": {
          "properties": {
            "page": {
              "format": "int32",
              "type": "integer",
              "description": "Номер страницы."
            },
            "page_size": {
              "format": "int32",
              "type": "integer",
              "description": "Количество значений на странице:\n  - по умолчанию — 100,\n  - маĸсимальное значение — 1000.\n"
            },
            "report_type": {
              "$ref": "#/components/schemas/ReportListRequestReportType"
            }
          },
          "title": "ReportList",
          "type": "object"
        },
        "ReportListResponseResult": {
          "properties": {
            "reports": {
              "items": {
                "$ref": "#/components/schemas/reportReport"
              },
              "type": "array",
              "description": "Массив со всеми сгенерированными отчётами."
            },
            "total": {
              "format": "int32",
              "type": "integer",
              "description": "Суммарное количество отчётов."
            }
          },
          "type": "object",
          "description": "Результаты запроса."
        },
        "reportReportListResponse": {
          "properties": {
            "result": {
              "$ref": "#/components/schemas/ReportListResponseResult"
            }
          },
          "type": "object"
        },
        "reportLanguage": {
          "default": "DEFAULT",
          "enum": null,
          "title": "Language",
          "type": "string",
          "description": "Язык ответа:\n  - `RU` — русский,\n  - `EN` — английский.\n"
        },
        "reportCreateCompanyProductsReportRequestVisibility": {
          "default": "ALL",
          "enum": null,
          "type": "string",
          "description": "Фильтр по видимости товара:\n  - `ALL` — все товары, кроме архивных.\n  - `VISIBLE` — товары, которые видны покупателям.\n  - `INVISIBLE` — товары, которые не видны покупателям.\n  - `EMPTY_STOCK` — товары, у которых не указано наличие.\n  - `NOT_MODERATED` — товары, которые не прошли модерацию.\n  - `MODERATED` — товары, которые прошли модерацию.\n  - `DISABLED` — товары, которые видны покупателям, но недоступны к покупке.\n  - `STATE_FAILED` — товары, создание которых завершилось ошибкой.\n  - `READY_TO_SUPPLY` — товары, готовые к поставке.\n  - `VALIDATION_STATE_PENDING` — товары, которые проходят проверку валидатором на премодерации.\n  - `VALIDATION_STATE_FAIL` — товары, которые не прошли проверку валидатором на премодерации.\n  - `VALIDATION_STATE_SUCCESS` — товары, которые прошли проверку валидатором на премодерации.\n  - `TO_SUPPLY` — товары, готовые к продаже.\n  - `IN_SALE` — товары в продаже.\n  - `REMOVED_FROM_SALE` — товары, скрытые от покупателей.\n  - `BANNED` — заблокированные товары.\n  - `OVERPRICED` — товары с завышенной ценой.\n  - `CRITICALLY_OVERPRICED` — товары со слишком завышенной ценой.\n  - `EMPTY_BARCODE` — товары без штрихкода.\n  - `BARCODE_EXISTS` — товары со штрихкодом.\n  - `QUARANTINE` — товары на карантине после изменения цены более чем на 50%.\n"
        },
        "reportCreateCompanyProductsReportRequest": {
          "properties": {
            "language": {
              "$ref": "#/components/schemas/reportLanguage"
            },
            "offer_id": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "Идентификатор товара в системе продавца."
            },
            "search": {
              "type": "string",
              "description": "Поиск по содержанию записи, проверяет наличие."
            },
            "sku": {
              "items": {
                "format": "int64",
                "type": "integer"
              },
              "type": "array",
              "description": "Идентификатор товара в системе Ozon."
            },
            "visibility": {
              "$ref": "#/components/schemas/reportCreateCompanyProductsReportRequestVisibility"
            }
          },
          "title": "CreateCompanyProductsReport",
          "type": "object"
        },
        "CreateReportResponseCode": {
          "properties": {
            "code": {
              "type": "string",
              "description": "Уникальный идентификатор отчёта."
            }
          },
          "type": "object",
          "description": "Результаты запроса."
        },
        "reportCreateReportResponse": {
          "properties": {
            "result": {
              "$ref": "#/components/schemas/CreateReportResponseCode"
            }
          },
          "type": "object"
        },
        "CreateCompanyTransactionsReportRequestTransactionType": {
          "default": "ALL",
          "enum": null,
          "type": "string",
          "description": "Фильтр по типу транзакции:\n  - `ALL` — все,\n  - `ORDERS` — заказы,\n  - `RETURNS` — возвраты,\n  - `SERVICES` — сервисные сборы,\n  - `DEPOSIT` — депозит,\n  - `OTHER` — другие.\n"
        },
        "reportCreateCompanyTransactionsReportRequest": {
          "properties": {
            "date_from": {
              "type": "string",
              "description": "Дата, с которой рассчитывается отчёт по транзакциям. Формат UTC: ГГГГ-ММ-ДД.\n"
            },
            "date_to": {
              "type": "string",
              "description": "Дата, по которую рассчитывается отчёт по транзакциям. Формат UTC: ГГГГ-ММ-ДД.\n"
            },
            "language": {
              "$ref": "#/components/schemas/reportLanguage"
            },
            "search": {
              "type": "string",
              "description": "Поиск по содержанию записи, проверяет наличие."
            },
            "transaction_type": {
              "$ref": "#/components/schemas/CreateCompanyTransactionsReportRequestTransactionType"
            }
          },
          "title": "CreateCompanyTransactionsReport",
          "type": "object"
        },
        "reportCreateCompanyProductsPricesReportRequestVisibility": {
          "default": "ALL",
          "enum": null,
          "type": "string",
          "description": "Фильтр по видимости товара:\n  - `ALL` — все товары, кроме архивных.\n  - `VISIBLE` — товары, которые видны покупателям.\n  - `INVISIBLE` — товары, которые не видны покупателям.\n  - `EMPTY_STOCK` — товары, у которых не указано наличие.\n  - `NOT_MODERATED` — товары, которые не прошли модерацию.\n  - `MODERATED` — товары, которые прошли модерацию.\n  - `DISABLED` — товары, которые видны покупателям, но недоступны к покупке.\n  - `STATE_FAILED` — товары, создание которых завершилось ошибкой.\n  - `READY_TO_SUPPLY` — товары, готовые к поставке.\n  - `VALIDATION_STATE_PENDING` — товары, которые проходят проверку валидатором на премодерации.\n  - `VALIDATION_STATE_FAIL` — товары, которые не прошли проверку валидатором на премодерации.\n  - `VALIDATION_STATE_SUCCESS` — товары, которые прошли проверку валидатором на премодерации.\n  - `TO_SUPPLY` — товары, готовые к продаже.\n  - `IN_SALE` — товары в продаже.\n  - `REMOVED_FROM_SALE` — товары, скрытые от покупателей.\n  - `BANNED` — заблокированные товары.\n  - `OVERPRICED` — товары с завышенной ценой.\n  - `CRITICALLY_OVERPRICED` — товары со слишком завышенной ценой.\n  - `EMPTY_BARCODE` — товары без штрихкода.\n  - `BARCODE_EXISTS` — товары со штрихкодом.\n  - `QUARANTINE` — товары на карантине после изменения цены более чем на 50%.\n"
        },
        "reportCreateCompanyProductsPricesReportRequest": {
          "properties": {
            "language": {
              "$ref": "#/components/schemas/reportLanguage"
            },
            "offer_id": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "Идентифиĸатор товара в системе продавца — артиĸул."
            },
            "search": {
              "type": "string",
              "description": "Поисĸ по содержанию записи, проверяет наличие."
            },
            "sku": {
              "items": {
                "format": "int64",
                "type": "integer"
              },
              "type": "array",
              "description": "Идентифиĸатор товара в системе Ozon — SKU."
            },
            "visibility": {
              "$ref": "#/components/schemas/reportCreateCompanyProductsPricesReportRequestVisibility"
            }
          },
          "type": "object"
        },
        "reportCreateCompanyStockReportRequest": {
          "properties": {
            "language": {
              "$ref": "#/components/schemas/reportLanguage"
            }
          },
          "type": "object"
        },
        "reportCreateProductsMovementReportRequest": {
          "properties": {
            "date_from": {
              "type": "string",
              "description": "Дата, с которой будут данные в отчёте."
            },
            "date_to": {
              "type": "string",
              "description": "Дата, по которую будут данные в отчёте."
            },
            "language": {
              "$ref": "#/components/schemas/reportLanguage"
            }
          },
          "type": "object"
        },
        "reportCreateCompanyReturnsReportRequestFilter": {
          "properties": {
            "delivery_schema": {
              "type": "string",
              "description": "Схема доставĸи заĸаза: `fbs` — доставка со своего склада.\n"
            },
            "order_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентифиĸатор заĸаза."
            },
            "status": {
              "type": "string",
              "description": "Статус заĸаза."
            }
          },
          "type": "object",
          "description": "Фильтр."
        },
        "reportCreateCompanyReturnsReportRequest": {
          "properties": {
            "filter": {
              "$ref": "#/components/schemas/reportCreateCompanyReturnsReportRequestFilter"
            },
            "language": {
              "$ref": "#/components/schemas/reportLanguage"
            }
          },
          "type": "object"
        },
        "reportCreateCompanyPostingsReportRequestFilter": {
          "properties": {
            "cancel_reason_id": {
              "description": "Идентификатор причины отмены.",
              "items": {
                "format": "int64",
                "type": "integer"
              },
              "type": "array"
            },
            "delivery_schema": {
              "description": "Схема работы — FBO или FBS.\n\nЧтобы получить отчёт по схеме FBO, передайте `fbo` в этом параметре. Для отчёта по схеме FBS передайте `fbs`.\n",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "offer_id": {
              "description": "Артикул товара.",
              "type": "string"
            },
            "processed_at_from": {
              "format": "date-time",
              "type": "string",
              "description": "Время, когда заказ попал в обработку."
            },
            "processed_at_to": {
              "format": "date-time",
              "type": "string",
              "description": "Время, когда заказ появился в личном кабинете."
            },
            "sku": {
              "description": "Идентификатор товара в системе Ozon.",
              "items": {
                "format": "int64",
                "type": "integer"
              },
              "type": "array"
            },
            "status_alias": {
              "description": "Текст статуса.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "statuses": {
              "description": "Числовой статус.",
              "items": {
                "format": "int64",
                "type": "integer"
              },
              "type": "array"
            },
            "title": {
              "description": "Название товара.",
              "type": "string"
            }
          },
          "type": "object",
          "description": "Фильтр."
        },
        "reportCreateCompanyPostingsReportRequest": {
          "properties": {
            "filter": {
              "$ref": "#/components/schemas/reportCreateCompanyPostingsReportRequestFilter"
            },
            "language": {
              "$ref": "#/components/schemas/reportLanguage"
            }
          },
          "type": "object"
        },
        "reportCreateCompanyFinanceReportRequest": {
          "properties": {
            "date_from": {
              "type": "string",
              "description": "Дата, с ĸоторой рассчитывается отчёт по финансам. Формат: YYYY-MM-DD.\n"
            },
            "date_to": {
              "type": "string",
              "description": "Дата, по ĸоторую рассчитывается отчёт по финансам. Формат: YYYY-MM-DD.\n"
            },
            "language": {
              "$ref": "#/components/schemas/reportLanguage"
            }
          },
          "type": "object"
        },
        "financev3Period": {
          "type": "object",
          "description": "Период формирования отчёта.",
          "properties": {
            "from": {
              "type": "string",
              "format": "date-time",
              "description": "Дата, с ĸоторой рассчитывается отчёт."
            },
            "to": {
              "type": "string",
              "format": "date-time",
              "description": "Дата, по ĸоторую рассчитывается отчёт."
            }
          },
          "required": ["from", "to"]
        },
        "v3FinanceCashFlowStatementListRequest": {
          "type": "object",
          "properties": {
            "date": {
              "$ref": "#/components/schemas/financev3Period"
            },
            "page": {
              "format": "int32",
              "type": "integer",
              "description": "Номер страницы, возвращаемой в запросе."
            },
            "with_details": {
              "type": "boolean",
              "description": "`true`, если нужно добавить дополнительные параметры в ответ."
            },
            "page_size": {
              "format": "int32",
              "type": "integer",
              "description": "Количество элементов на странице."
            }
          },
          "required": ["page", "page_size", "date"]
        },
        "v3FinanceCashFlowStatementListResponsePeriod": {
          "type": "object",
          "description": "Период.",
          "properties": {
            "begin": {
              "type": "string",
              "format": "date-time",
              "description": "Начало периода."
            },
            "end": {
              "type": "string",
              "format": "date-time",
              "description": "Конец периода."
            },
            "id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор."
            }
          }
        },
        "FinanceCashFlowStatementListResponseCashFlow": {
          "type": "object",
          "properties": {
            "period": {
              "$ref": "#/components/schemas/v3FinanceCashFlowStatementListResponsePeriod"
            },
            "orders_amount": {
              "type": "number",
              "format": "double",
              "description": "Сумма цен реализованных товаров."
            },
            "returns_amount": {
              "type": "number",
              "format": "double",
              "description": "Сумма цен возвращённых товаров."
            },
            "commission_amount": {
              "type": "number",
              "format": "double",
              "description": "Комиссия Ozon за реализацию товаров."
            },
            "services_amount": {
              "type": "number",
              "format": "double",
              "description": "Сумма дополнительных услуг."
            },
            "item_delivery_and_return_amount": {
              "type": "number",
              "format": "double",
              "description": "Сумма услуг логистики."
            },
            "currency_code": {
              "type": "string",
              "description": "Код валюты, в которой рассчитываются комиссии."
            }
          }
        },
        "FinanceCashFlowStatementListResponseDeliveryService": {
          "type": "object",
          "description": "Детализация.",
          "properties": {
            "name": {
              "type": "string",
              "description": "Название операции. Возможные значения:\n - `MarketplaceServiceItemDirectFlowLogisticSum` — логистика,\n - `MarketplaceServiceItemDropoff` — обработка отправления Drop-off,\n - `MarketplaceServiceItemDelivToCustomer` — последняя миля.\n"
            },
            "price": {
              "type": "number",
              "format": "double",
              "description": "Сумма по операции."
            }
          }
        },
        "DetailsServices": {
          "type": "object",
          "description": "Плата за обработку и доставку.",
          "properties": {
            "total": {
              "description": "Общая сумма.",
              "type": "number",
              "format": "double"
            },
            "items": {
              "description": "Детализация.",
              "type": "array",
              "items": null,
              "$ref": "#/components/schemas/FinanceCashFlowStatementListResponseDeliveryService"
            }
          }
        },
        "DetailsDeliveryDetails": {
          "type": "object",
          "description": "Заказы.",
          "properties": {
            "total": {
              "type": "number",
              "format": "double",
              "description": "Общая сумма."
            },
            "amount": {
              "type": "number",
              "format": "double",
              "description": "Сумма, на которую выкуплено товаров с учётом комиссий."
            },
            "delivery_services": {
              "$ref": "#/components/schemas/DetailsServices",
              "description": "Плата за обработку и доставку."
            }
          }
        },
        "DetailsPayment": {
          "type": "object",
          "description": "Выплачено за период.",
          "properties": {
            "currency_code": {
              "type": "string",
              "description": "Валюта."
            },
            "payment": {
              "type": "number",
              "format": "double",
              "description": "Сумма выплаты."
            }
          }
        },
        "FinanceCashFlowStatementListResponseReturnService": {
          "type": "object",
          "description": "Детализация.",
          "properties": {
            "name": {
              "type": "string",
              "description": "Название операции. Возможные значения:\n - `MarketplaceServiceItemReturnAfterDelivToCustomer` — обработка возвратов,\n - `MarketplaceServiceItemReturnPartGoodsCustomer` — обработка частичного невыкупа,\n - `MarketplaceServiceItemReturnNotDelivToCustomer` — обработка отменённых и невостребованных товаров,\n - `MarketplaceServiceItemReturnFlowLogistic` — обратная логистика.\n"
            },
            "price": {
              "type": "number",
              "format": "double",
              "description": "Сумма по операции."
            }
          }
        },
        "DetailsReturns": {
          "type": "object",
          "description": "Плата за возвраты и отмены.",
          "properties": {
            "total": {
              "description": "Общая сумма.",
              "type": "number",
              "format": "double"
            },
            "items": {
              "description": "Детализация.",
              "type": "array",
              "items": null,
              "$ref": "#/components/schemas/FinanceCashFlowStatementListResponseReturnService"
            }
          }
        },
        "DetailsReturnDetails": {
          "type": "object",
          "description": "Возвраты и отмены.",
          "properties": {
            "total": {
              "type": "number",
              "format": "double",
              "description": "Общая сумма."
            },
            "amount": {
              "type": "number",
              "format": "double",
              "description": "Сумма, на которую получено возвратов с учётом комиссий."
            },
            "return_services": {
              "$ref": "#/components/schemas/DetailsReturns",
              "description": "Плата за возвраты и отмены."
            }
          }
        },
        "DetailsRfbsDetails": {
          "type": "object",
          "description": "Перечисления по схеме rFBS.",
          "properties": {
            "total": {
              "type": "number",
              "format": "double",
              "description": "Общая сумма."
            },
            "transfer_delivery": {
              "type": "number",
              "format": "double",
              "description": "Перечисления от покупателей."
            },
            "transfer_delivery_return": {
              "type": "number",
              "format": "double",
              "description": "Возврат перечислений покупателям."
            },
            "compensation_delivery_return": {
              "type": "number",
              "format": "double",
              "description": "Компенсация перечислений за доставку."
            },
            "partial_compensation": {
              "type": "number",
              "format": "double",
              "description": "Перечисления частичных компенсаций покупателям."
            },
            "partial_compensation_return": {
              "type": "number",
              "format": "double",
              "description": "Возврат частичных компенсаций."
            }
          }
        },
        "FinanceCashFlowStatementListResponseService": {
          "type": "object",
          "description": "Детализация.",
          "properties": {
            "name": {
              "type": "string",
              "description": "Название операции. Возможные значения:\n - `MarketplaceServiceItemOtherMarketAndTechService` — иные маркетинговые и технические услуги,\n - `MarketplaceReturnStorageServiceAtThePickupPointFbsItem` — краткосрочное размещение возврата FBS,\n - `MarketplaceSaleReviewsItem` — приобретение отзывов на платформе,\n - `MarketplaceServicePremiumCashbackIndividualPoints` — услуга продвижения «Бонусы продавца»,\n - `MarketplaceServiceStorageItem` — услуга размещения товаров,\n - `MarketplaceServiceStockDisposal` — утилизация со стока,\n - `MarketplaceReturnDisposalServiceFbsItem` — утилизация FBS,\n - `MarketplaceServiceItemFlexiblePaymentSchedule` — услуга «Гибкий график выплат»,\n - `MarketplaceServiceProcessingSpoilage` — обработка брака,\n - `MarketplaceServiceProcessingIdentifiedSurplus` — обработка опознанных излишков,\n - `MarketplaceServiceProcessingIdentifiedDiscrepancies` — бронирование места для размещения на складе,\n - `MarketplaceServiceItemInternetSiteAdvertising` — реклама на сайте Ozon,\n - `MarketplaceServiceItemPremiumSubscribtion` — премиум-подписка,\n - `MarketplaceAgencyFeeAggregator3PLGlobalItem` — агентское вознаграждение Ozon.\n"
            },
            "price": {
              "type": "number",
              "format": "double",
              "description": "Сумма по операции."
            }
          }
        },
        "DetailsService": {
          "type": "object",
          "description": "Услуги.",
          "properties": {
            "total": {
              "description": "Общая сумма.",
              "type": "number",
              "format": "double"
            },
            "items": {
              "description": "Детализация.",
              "type": "array",
              "items": null,
              "$ref": "#/components/schemas/FinanceCashFlowStatementListResponseService"
            }
          }
        },
        "FinanceCashFlowStatementListResponseDetailsOthers": {
          "type": "object",
          "description": "Детализация.",
          "properties": {
            "name": {
              "type": "string",
              "description": "Название операции. Возможные значения:\n - `MarketplaceRedistributionOfAcquiringOperation` — оплата эквайринга,\n - `MarketplaceSellerCompensationLossOfGoodsOperation` — компенсация за уничтоженный товар,\n - `MarketplaceSellerCorrectionOperation` — корректировка стоимости услуг,\n - `OperationCorrectionSeller` — инвентаризация взаиморасчётов,\n - `OperationMarketplaceWithHoldingForUndeliverableGoods` — компенсация за недовложение товаров,\n - `OperationClaim` — начисления по претензиям.\n"
            },
            "price": {
              "type": "number",
              "format": "double",
              "description": "Сумма по операции."
            }
          }
        },
        "DetailsOthers": {
          "type": "object",
          "description": "Компенсация и прочие начисления.",
          "properties": {
            "total": {
              "description": "Общая сумма.",
              "type": "number",
              "format": "double"
            },
            "items": {
              "description": "Детализация.",
              "type": "array",
              "items": null,
              "$ref": "#/components/schemas/FinanceCashFlowStatementListResponseDetailsOthers"
            }
          }
        },
        "FinanceCashFlowStatementListResponseDetails": {
          "type": "object",
          "description": "Детализированная информация.",
          "properties": {
            "begin_balance_amount": {
              "type": "number",
              "format": "double",
              "description": "Баланс на начало периода."
            },
            "delivery": {
              "$ref": "#/components/schemas/DetailsDeliveryDetails",
              "description": "Результат работы метода."
            },
            "invoice_transfer": {
              "type": "number",
              "format": "double",
              "description": "Сумма к выплате за период."
            },
            "loan": {
              "type": "number",
              "format": "double",
              "description": "Перевод по договорам займа."
            },
            "payments": {
              "description": "Выплачено в периоде.",
              "type": "array",
              "items": null,
              "$ref": "#/components/schemas/DetailsPayment"
            },
            "period": {
              "$ref": "#/components/schemas/v3FinanceCashFlowStatementListResponsePeriod",
              "description": "Период."
            },
            "return": {
              "$ref": "#/components/schemas/DetailsReturnDetails"
            },
            "rfbs": {
              "$ref": "#/components/schemas/DetailsRfbsDetails",
              "description": "Перечисления по схеме rFBS."
            },
            "services": {
              "$ref": "#/components/schemas/DetailsService",
              "description": "Услуги."
            },
            "others": {
              "$ref": "#/components/schemas/DetailsOthers",
              "description": "Компенсация и прочие начисления."
            },
            "end_balance_amount": {
              "type": "number",
              "format": "double",
              "description": "Баланс на конец периода."
            }
          }
        },
        "v3FinanceCashFlowStatementListResponseResult": {
          "type": "object",
          "description": "Результат работы метода.",
          "properties": {
            "cash_flows": {
              "description": "Список отчётов.",
              "items": {
                "$ref": "#/components/schemas/FinanceCashFlowStatementListResponseCashFlow"
              }
            },
            "details": {
              "type": "array",
              "items": null,
              "$ref": "#/components/schemas/FinanceCashFlowStatementListResponseDetails",
              "description": "Детализированная информация."
            },
            "page_count": {
              "type": "integer",
              "format": "int64",
              "description": "Количество страниц с отчётами."
            }
          }
        },
        "v3FinanceCashFlowStatementListResponse": {
          "type": "object",
          "properties": {
            "result": {
              "$ref": "#/components/schemas/v3FinanceCashFlowStatementListResponseResult"
            }
          }
        },
        "reportCreateDiscountedRequest": {
          "type": "object"
        },
        "reportCreateDiscountedResponse": {
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "description": "Уникальный идентификатор отчёта."
            }
          }
        },
        "reportDiscountedInfoRequest": {
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "description": "Уникальный идентификатор отчёта."
            }
          }
        },
        "reportDiscountedInfoResponseReport": {
          "type": "object",
          "description": "Информация об отчёте.",
          "properties": {
            "created_at": {
              "type": "string",
              "format": "date-time",
              "description": "Дата создания отчёта."
            },
            "file": {
              "type": "string",
              "description": "Ссылка на файл с отчётом."
            },
            "status": {
              "type": "string",
              "description": "Статус отчёта:\n- `success` — успешно создан,\n- `pending` — ожидает обработки,\n- `processing` — обрабатывается,\n- `failed` — ошибка при создании.\n"
            },
            "error": {
              "type": "string",
              "description": "Код ошибки при создании отчёта."
            }
          }
        },
        "reportDiscountedInfoResponse": {
          "type": "object",
          "properties": {
            "report": {
              "$ref": "#/components/schemas/reportDiscountedInfoResponseReport"
            }
          }
        },
        "reportDiscountedListRequest": {
          "type": "object"
        },
        "reportDiscountedListResponse": {
          "type": "object",
          "properties": {
            "reports": {
              "type": "array",
              "description": "Список отчётов и данные по ним.",
              "items": {
                "$ref": "#/components/schemas/reportDiscountedInfoResponseReport"
              }
            }
          }
        },
        "seller_serviceanalyticsDimension": {
          "default": "unknownDimension",
          "enum": null,
          "type": "string"
        },
        "FilterOp": {
          "default": "EQ",
          "enum": null,
          "type": "string",
          "description": "<br>\n\nОперация сравнения:\n  - `EQ` — равно,\n  - `GT` — больше,\n  - `GTE` — больше или равно,\n  - `LT` — меньше,\n  - `LTE` — меньше или равно.\n"
        },
        "analyticsFilter": {
          "properties": {
            "key": {
              "type": "string",
              "description": "Параметр сортировки. Можно передать любой атрибут из параметров `dimension` и `metric`, кроме атрибута `brand`."
            },
            "op": {
              "$ref": "#/components/schemas/FilterOp"
            },
            "value": {
              "type": "string",
              "description": "Значение для сравнения."
            }
          },
          "type": "object"
        },
        "analyticsMetric": {
          "default": "unknown_metric",
          "enum": null,
          "type": "string"
        },
        "SortingOrder": {
          "default": "ASC",
          "enum": null,
          "type": "string",
          "description": "Вид сортировки:\n  - `ASC` — по возрастанию,\n  - `DESC` — по убыванию.\n"
        },
        "analyticsSorting": {
          "properties": {
            "key": {
              "type": "string",
              "description": "Метрика, по которой будет отсортирован результат запроса."
            },
            "order": {
              "$ref": "#/components/schemas/SortingOrder"
            }
          },
          "type": "object"
        },
        "analyticsAnalyticsGetDataRequest": {
          "properties": {
            "date_from": {
              "type": "string",
              "description": "Дата, с которой будут данные в отчёте."
            },
            "date_to": {
              "type": "string",
              "description": "Дата, по которую будут данные в отчёте."
            },
            "dimension": {
              "items": {
                "$ref": "#/components/schemas/seller_serviceanalyticsDimension"
              },
              "type": "array",
              "description": "Группировка данных в отчёте:\n  - `unknownDimension` — неизвестное измерение,\n  - `sku` — идентификатор товара,\n  - `spu` — идентификатор товара,\n  - `day` — день,\n  - `week` — неделя,\n  - `month` — месяц,\n  - `year` — год,\n  - `category1` — категория первого уровня,\n  - `category2` — категория второго уровня,\n  - `category3` — категория третьего уровня,\n  - `category4` — категория четвертого уровня,\n  - `brand` — бренд,\n  - `modelID` — модель.\n"
            },
            "filters": {
              "items": {
                "$ref": "#/components/schemas/analyticsFilter"
              },
              "type": "array",
              "description": "Фильтры."
            },
            "limit": {
              "format": "int64",
              "type": "integer",
              "description": "Количество значений в ответе:\n  - максимум — 1000,\n  - минимум — 1.\n"
            },
            "metrics": {
              "items": {
                "$ref": "#/components/schemas/analyticsMetric"
              },
              "type": "array",
              "description": "Укажите до 14 метрик. Если их будет больше, вы получите ошибку с кодом `InvalidArgument`.\n\nСписок метриĸ, по ĸоторым будет сформирован отчёт:\n  - `unknown_metric` — неизвестная метрика,\n  - `hits_view_search` — показы в поиске и в категории,\n  - `hits_view_pdp` — показы на карточке товара,\n  - `hits_view` — всего показов,\n  - `hits_tocart_search` — в корзину из поиска или категории,\n  - `hits_tocart_pdp` — в корзину из карточки товара,\n  - `hits_tocart` — всего добавлено в корзину,\n  - `session_view_search` — сессии с показом в поиске или в категории,\n  - `session_view_pdp` — сессии с показом на карточке товара,\n  - `session_view` — всего сессий,\n  - `conv_tocart_search` — конверсия в корзину из поиска или категории,\n  - `conv_tocart_pdp` — конверсия в корзину из карточки товара,\n  - `conv_tocart` — общая конверсия в корзину,\n  - `revenue` — заказано на сумму,\n  - `returns` — возвращено товаров,\n  - `cancellations` — отменено товаров,\n  - `ordered_units` — заказано товаров,\n  - `delivered_units` — доставлено товаров,\n  - `adv_view_pdp` — показы на карточке товара, спонсорские товары,\n  - `adv_view_search_category` — показы в поиске и в категории, спонсорские товары,\n  - `adv_view_all` — показы всего, спонсорские товары,\n  - `adv_sum_all` — всего расходов на рекламу,\n  - `position_category` — позиция в поиске и категории,\n  - `postings` — отправления,\n  - `postings_premium` — отправления с подпиской Premium.\n"
            },
            "offset": {
              "format": "int64",
              "type": "integer",
              "description": "Количество элементов, которое будет пропущено в ответе. Например, если `offset = 10`, то ответ начнётся с 11-го найденного элемента."
            },
            "sort": {
              "items": {
                "$ref": "#/components/schemas/analyticsSorting"
              },
              "type": "array",
              "description": "Настройки сортировки отчёта."
            }
          },
          "type": "object"
        },
        "analyticsDataRowDimension": {
          "properties": {
            "id": {
              "type": "string",
              "description": "Идентификатор."
            },
            "name": {
              "type": "string",
              "description": "Наименование."
            }
          },
          "type": "object"
        },
        "analyticsDataRow": {
          "properties": {
            "dimensions": {
              "items": {
                "$ref": "#/components/schemas/analyticsDataRowDimension"
              },
              "type": "array",
              "description": "Группировка данных в отчёте."
            },
            "metrics": {
              "items": {
                "format": "double",
                "type": "number"
              },
              "type": "array",
              "description": "Список значений метрики."
            }
          },
          "type": "object"
        },
        "AnalyticsGetDataResponseResult": {
          "properties": {
            "data": {
              "items": {
                "$ref": "#/components/schemas/analyticsDataRow"
              },
              "type": "array",
              "description": "Массив данных."
            },
            "totals": {
              "items": {
                "format": "double",
                "type": "number"
              },
              "type": "array",
              "description": "Итоговые и средние значения метрик."
            }
          },
          "type": "object",
          "description": "Результаты запроса."
        },
        "analyticsAnalyticsGetDataResponse": {
          "properties": {
            "result": {
              "$ref": "#/components/schemas/AnalyticsGetDataResponseResult"
            },
            "timestamp": {
              "type": "string",
              "description": "Время создания отчёта."
            }
          },
          "type": "object"
        },
        "analyticsAnalyticsGetStockOnWarehousesRequest": {
          "properties": {
            "limit": {
              "format": "int64",
              "type": "integer",
              "description": "Количество ответов на странице. По умолчанию — 100."
            },
            "offset": {
              "format": "int64",
              "type": "integer",
              "description": "Количество элементов, которое будет пропущено в ответе. Например, если `offset = 10`, то ответ начнётся с 11-го найденного элемента."
            }
          },
          "type": "object"
        },
        "AnalyticsGetStockOnWarehousesResponseTotalStock": {
          "properties": {
            "between_warehouses": {
              "format": "int64",
              "type": "integer",
              "description": "Количество товаров, которое перемещается между фулфилмент-центрами."
            },
            "for_sale": {
              "format": "int64",
              "type": "integer",
              "description": "Количество доступных для продажи товаров."
            },
            "loss": {
              "format": "int64",
              "type": "integer",
              "description": "Количество не найденных при подборе товаров."
            },
            "not_for_sale": {
              "format": "int64",
              "type": "integer",
              "description": "Количество не подлежащих реализации товаров."
            },
            "shipped": {
              "format": "int64",
              "type": "integer",
              "description": "Количество товаров в доставке."
            }
          },
          "type": "object",
          "description": "Информация об остатках товаров."
        },
        "AnalyticsGetStockOnWarehousesResponseTotalItem": {
          "properties": {
            "barcode": {
              "type": "string",
              "description": "Штрихкод."
            },
            "category": {
              "type": "string",
              "description": "Категория."
            },
            "discounted": {
              "type": "string",
              "description": "Уценённый товар (Да/Нет)."
            },
            "height": {
              "format": "float",
              "type": "number",
              "description": "Высота упаковки."
            },
            "length": {
              "format": "float",
              "type": "number",
              "description": "Длина товара."
            },
            "offer_id": {
              "type": "string",
              "description": "Идентификатор товара в системе продавца."
            },
            "sku": {
              "format": "uint64",
              "type": "string",
              "description": "Идентификатор товара в системе Ozon — SKU."
            },
            "stock": {
              "$ref": "#/components/schemas/AnalyticsGetStockOnWarehousesResponseTotalStock"
            },
            "title": {
              "type": "string",
              "description": "Название товара."
            },
            "volume": {
              "format": "float",
              "type": "number",
              "description": "Объём товара."
            },
            "weight": {
              "format": "float",
              "type": "number",
              "description": "Вес товара в упаковке."
            },
            "width": {
              "format": "float",
              "type": "number",
              "description": "Ширина упаковки."
            }
          },
          "type": "object"
        },
        "AnalyticsGetStockOnWarehousesResponseItemStock": {
          "properties": {
            "for_sale": {
              "format": "int64",
              "type": "integer",
              "description": "Количество доступных для продажи товаров."
            },
            "loss": {
              "format": "int64",
              "type": "integer",
              "description": "Количество не найденных при подборе товаров."
            },
            "not_for_sale": {
              "format": "int64",
              "type": "integer",
              "description": "Количество не подлежащих реализации товаров."
            }
          },
          "type": "object",
          "description": "Информация о товарах на складе."
        },
        "AnalyticsGetStockOnWarehousesResponseItem": {
          "properties": {
            "barcode": {
              "type": "string",
              "description": "Штрихкод."
            },
            "category": {
              "type": "string",
              "description": "Категория."
            },
            "discounted": {
              "type": "string",
              "description": "Уценённый товар (Да/Нет)."
            },
            "height": {
              "format": "float",
              "type": "number",
              "description": "Высота упаковки."
            },
            "length": {
              "format": "float",
              "type": "number",
              "description": "Длина товара."
            },
            "offer_id": {
              "type": "string",
              "description": "Идентификатор товара в системе продавца."
            },
            "sku": {
              "format": "uint64",
              "type": "string",
              "description": "Идентификатор товара в системе Ozon — SKU."
            },
            "stock": {
              "$ref": "#/components/schemas/AnalyticsGetStockOnWarehousesResponseItemStock"
            },
            "title": {
              "type": "string",
              "description": "Название категории."
            },
            "volume": {
              "format": "float",
              "type": "number",
              "description": "Объём товара."
            },
            "weight": {
              "format": "float",
              "type": "number",
              "description": "Вес товара в упаковке."
            },
            "width": {
              "format": "float",
              "type": "number",
              "description": "Ширина упаковки."
            }
          },
          "type": "object"
        },
        "AnalyticsGetStockOnWarehousesResponseWHItem": {
          "properties": {
            "id": {
              "type": "string",
              "description": "Идентификатор склада."
            },
            "items": {
              "items": {
                "$ref": "#/components/schemas/AnalyticsGetStockOnWarehousesResponseItem"
              },
              "type": "array",
              "description": "Информация о товарах на складе."
            },
            "name": {
              "type": "string",
              "description": "Название склада."
            }
          },
          "type": "object"
        },
        "analyticsAnalyticsGetStockOnWarehousesResponse": {
          "properties": {
            "timestamp": {
              "type": "string",
              "description": "Время создания отчёта."
            },
            "total_items": {
              "items": {
                "$ref": "#/components/schemas/AnalyticsGetStockOnWarehousesResponseTotalItem"
              },
              "type": "array",
              "description": "Данные по остаткам на всех складах."
            },
            "wh_items": {
              "items": {
                "$ref": "#/components/schemas/AnalyticsGetStockOnWarehousesResponseWHItem"
              },
              "type": "array",
              "description": "Данные остатков по определённым складам."
            }
          },
          "type": "object"
        },
        "v1AnalyticsItemTurnoverDataV3Request": {
          "properties": {
            "date_from": {
              "type": "string",
              "description": "Дата. 1-е или 15-е число месяца в формате: 2021-05-01.\n  - 1-е число месяца вводится для получения отчёта за первую половину месяца.\n  - 15-е число вводится для получения отчёта за вторую половину месяца.\n"
            }
          },
          "type": "object"
        },
        "AnalyticsItemTurnoverDataV3ResponseItemTurnover": {
          "properties": {
            "avg_sold_items": {
              "format": "double",
              "type": "number",
              "description": "Среднесуточные продажи за определённый период. Указывается в штуках."
            },
            "avg_sold_litres": {
              "format": "double",
              "type": "number",
              "description": "Среднесуточные продажи за определённый период. Измеряется в литрах."
            },
            "avg_stock_items": {
              "format": "double",
              "type": "number",
              "description": "Среднесуточный объём товара на складе в литрах."
            },
            "avg_stock_items_free": {
              "format": "double",
              "type": "number",
              "description": "Сколько единиц товара можно размещать на складе бесплатно.\nРассчитывается по формуле: Среднесуточные продажи товара (л/дн) × Пороговая оборачиваемость (дн) ÷ Объём (л).\n"
            },
            "avg_stock_litres": {
              "format": "double",
              "type": "number",
              "description": "Среднесуточный остаток на складах Ozon в литрах."
            },
            "discounted": {
              "type": "boolean",
              "description": "Уценённый товар."
            },
            "height": {
              "format": "double",
              "type": "number",
              "description": "Высота товара."
            },
            "item_commission_part": {
              "format": "double",
              "type": "number",
              "description": "Часть от стоимости размещения категории в рублях."
            },
            "length": {
              "format": "double",
              "type": "number",
              "description": "Длина товара."
            },
            "min_daily_sales": {
              "format": "double",
              "type": "number",
              "description": "Сколько нужно продавать в день, чтобы размещение товара было бесплатным.\nРассчитывается по формуле: Среднесуточный остаток товара (л) ÷ Пороговая оборачиваемость (дн) ÷ Объем (л).\n"
            },
            "name": {
              "type": "string",
              "description": "Название товара."
            },
            "offer_id": {
              "type": "string",
              "description": "Артикул."
            },
            "recommendation": {
              "type": "string",
              "description": "Рекомендация, что нужно сделать с товаром по данным об оборачиваемости этого товара."
            },
            "sku": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор товара в системе Ozon — SKU."
            },
            "stock_items_total": {
              "format": "int64",
              "type": "integer",
              "description": "Доступно к продаже всего в штуках."
            },
            "threshold_free": {
              "format": "int64",
              "type": "integer",
              "description": "Пороговая оборачиваемость в днях."
            },
            "turnover": {
              "type": "string",
              "description": "Фактическая оборачиваемость в днях."
            },
            "volume": {
              "format": "double",
              "type": "number",
              "description": "Объём товара."
            },
            "width": {
              "format": "double",
              "type": "number",
              "description": "Ширина товара."
            }
          },
          "type": "object"
        },
        "AnalyticsItemTurnoverDataV3ResponseCategory": {
          "properties": {
            "avg_sold_litres": {
              "format": "double",
              "type": "number",
              "description": "Среднесуточные продажи за определённый период. Измеряется в литрах."
            },
            "avg_stock_litres": {
              "format": "double",
              "type": "number",
              "description": "Среднесуточный остаток на складах Ozon в литрах."
            },
            "billed_days": {
              "format": "int32",
              "type": "integer",
              "description": "Количество прошедших дней с платным размещением."
            },
            "category_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор категории."
            },
            "commission": {
              "format": "double",
              "type": "number",
              "description": "Стоимость размещения одного литра товара в рублях."
            },
            "fee": {
              "format": "double",
              "type": "number",
              "description": "Тариф за размещение в рублях. Зависит от объёма и количества дней размещения."
            },
            "threshold_free": {
              "format": "int64",
              "type": "integer",
              "description": "Пороговая оборачиваемость для бесплатного размещения. Измеряется в днях."
            },
            "threshold_used": {
              "format": "int64",
              "type": "integer",
              "description": "Превышенный порог оборачиваемости, по которому определили тариф. Измеряется в днях."
            },
            "turnover": {
              "type": "string",
              "description": "Фактическая оборачиваемость в днях."
            },
            "turnover_items": {
              "items": {
                "$ref": "#/components/schemas/AnalyticsItemTurnoverDataV3ResponseItemTurnover"
              },
              "type": "array",
              "description": "Данные по товарам категории."
            }
          },
          "type": "object"
        },
        "v1AnalyticsItemTurnoverDataV3Response": {
          "properties": {
            "categories": {
              "items": {
                "$ref": "#/components/schemas/AnalyticsItemTurnoverDataV3ResponseCategory"
              },
              "type": "array",
              "description": "Данные по категориям."
            },
            "commission_total": {
              "format": "double",
              "type": "number",
              "description": "Стоимость размещения в рублях."
            },
            "date": {
              "type": "string",
              "description": "Дата выгрузки."
            },
            "period": {
              "type": "string",
              "description": "Период отчёта."
            }
          },
          "type": "object"
        },
        "AnalyticsGetStockOnWarehousesRequestWarehouseType": {
          "default": "ALL",
          "enum": ["ALL", "EXPRESS_DARK_STORE", "NOT_EXPRESS_DARK_STORE"],
          "description": "Фильтр по типу склада:\n  - `EXPRESS_DARK_STORE` — склады Ozon с доставкой Fresh.\n  - `NOT_EXPRESS_DARK_STORE` — склады Ozon без доставки Fresh.\n  - `ALL` — все склады Ozon.\n",
          "type": "string"
        },
        "analyticsStockOnWarehouseRequest": {
          "type": "object",
          "properties": {
            "limit": {
              "type": "integer",
              "format": "int64",
              "description": "Количество ответов на странице. По умолчанию — 100."
            },
            "offset": {
              "type": "integer",
              "format": "int64",
              "description": "Количество элементов, которое будет пропущено в ответе. Например, если `offset = 10`, то ответ начнётся с 11-го найденного элемента."
            },
            "warehouse_type": {
              "$ref": "#/components/schemas/AnalyticsGetStockOnWarehousesRequestWarehouseType"
            }
          }
        },
        "analyticsStockOnWarehouseResultRows": {
          "type": "object",
          "properties": {
            "sku": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор товара в системе Ozon — SKU."
            },
            "item_code": {
              "type": "string",
              "description": "Идентификатор товара в системе продавца."
            },
            "item_name": {
              "type": "string",
              "description": "Название товара в системе Ozon."
            },
            "free_to_sell_amount": {
              "type": "integer",
              "format": "int64",
              "description": "Количество товара, доступное к продаже на Ozon."
            },
            "promised_amount": {
              "type": "integer",
              "format": "int64",
              "description": "Количество товара, указанное в подтверждённых будущих поставках."
            },
            "reserved_amount": {
              "type": "integer",
              "format": "int64",
              "description": "Количество товара, зарезервированное для покупки, возврата и перевозки между складами."
            },
            "warehouse_name": {
              "type": "string",
              "description": "Название склада, где находится товар."
            }
          }
        },
        "analyticsStockOnWarehouseResponseResult": {
          "type": "object",
          "description": "Результат запроса.",
          "properties": {
            "rows": {
              "type": "array",
              "description": "Информация о товарах и остатках.",
              "items": {
                "$ref": "#/components/schemas/analyticsStockOnWarehouseResultRows"
              }
            }
          }
        },
        "analyticsStockOnWarehouseResponse": {
          "type": "object",
          "properties": {
            "result": {
              "$ref": "#/components/schemas/analyticsStockOnWarehouseResponseResult"
            }
          }
        },
        "financeGetRealizationReportRequest": {
          "type": "object",
          "properties": {
            "date": {
              "type": "string",
              "description": "Отчётный период в формате `YYYY-MM`."
            }
          }
        },
        "FinanceRealizationReportHeader": {
          "type": "object",
          "properties": {
            "num": {
              "type": "string",
              "description": "Номер отчёта о реализации."
            },
            "doc_date": {
              "type": "string",
              "description": "Дата формирования отчёта."
            },
            "contract_date": {
              "type": "string",
              "description": "Дата заключения договора оферты."
            },
            "contract_num": {
              "type": "string",
              "description": "Номер договора оферты."
            },
            "currency_code": {
              "type": "string",
              "description": "Валюта ваших цен."
            },
            "doc_amount": {
              "type": "number",
              "format": "double",
              "description": "Сумма к начислению."
            },
            "vat_amount": {
              "type": "number",
              "format": "double",
              "description": "Сумма к начислению с НДС."
            },
            "payer_inn": {
              "type": "string",
              "description": "ИНН плательщика."
            },
            "payer_kpp": {
              "type": "string",
              "description": "КПП плательщика."
            },
            "payer_name": {
              "type": "string",
              "description": "Название плательщика."
            },
            "rcv_inn": {
              "type": "string",
              "description": "ИНН получателя."
            },
            "rcv_kpp": {
              "type": "string",
              "description": "КПП получателя."
            },
            "rcv_name": {
              "type": "string",
              "description": "Название получателя."
            },
            "start_date": {
              "type": "string",
              "description": "Начало периода в отчёте."
            },
            "stop_date": {
              "type": "string",
              "description": "Конец периода в отчёте."
            }
          }
        },
        "FinanceRealizationReportRows": {
          "type": "object",
          "properties": {
            "row_number": {
              "type": "integer",
              "format": "int32",
              "description": "Номер строки в отчёте."
            },
            "product_id": {
              "type": "integer",
              "format": "int64",
              "description": "Идентификатор товара."
            },
            "product_name": {
              "type": "string",
              "description": "Наименование товара."
            },
            "barcode": {
              "type": "string",
              "description": "Штрихкод товара."
            },
            "offer_id": {
              "type": "string",
              "description": "Код товара продавца — артикул."
            },
            "commission_percent": {
              "type": "number",
              "format": "double",
              "description": "Комиссия за продажу по категории."
            },
            "price": {
              "type": "number",
              "format": "double",
              "description": "Цена продавца с учётом его скидки."
            },
            "price_sale": {
              "type": "number",
              "format": "double",
              "description": "Цена реализации — цена, по которой покупатель приобрёл товар. \n\nДля реализованных товаров.\n"
            },
            "sale_amount": {
              "type": "number",
              "format": "double",
              "description": "Реализовано на сумму.\n\nСтоимость реализованного товара с учётом количества и региональных коэффициентов. Расчёт осуществляется по цене `sale_amount`.\n"
            },
            "sale_commission": {
              "type": "number",
              "format": "double",
              "description": "Комиссия за реализованный товар с учётом скидок и наценки."
            },
            "sale_discount": {
              "type": "number",
              "format": "double",
              "description": "Доплата за счёт Ozon.\n\nСумма, которую Ozon компенсирует продавцу, если скидка Ozon больше или равна комиссии за продажу.\n"
            },
            "sale_price_seller": {
              "type": "number",
              "format": "double",
              "description": "Итого к начислению за реализованный товар. \n\nСумма после вычета комиссии за продажу, применения скидок и установленных наценок.\n"
            },
            "sale_qty": {
              "type": "integer",
              "format": "int32",
              "description": "Количество товара, реализованного по цене `price_sale`."
            },
            "return_sale": {
              "type": "number",
              "format": "double",
              "description": "Цена реализации — цена, по которой покупатель приобрёл товар. \n\nДля возвращённых товаров.\n"
            },
            "return_amount": {
              "type": "number",
              "format": "double",
              "description": "Возвращено на сумму. \n\nСтоимость возвращённого товара с учётом количества и региональных коэффициентов. Расчёт осуществляется по цене `return_sale`.\n"
            },
            "return_commission": {
              "type": "number",
              "format": "double",
              "description": "Комиссия с учётом количества товара, предоставленных скидок и установленных наценок. Ozon компенсирует её в случае возврата товара."
            },
            "return_discount": {
              "type": "number",
              "format": "double",
              "description": "Доплата за счёт Ozon.\n\nСумма скидки за счёт Ozon по возвращённому товару, которую Ozon компенсирует продавцу, если скидка Ozon больше или равна комиссии за продажу.\n"
            },
            "return_price_seller": {
              "type": "number",
              "format": "double",
              "description": "Итого возвращено. \n\nСумма, начисляемая продавцу за возвращённый товар после вычета комиссии за продажу, применения скидок и установленных наценок.\n"
            },
            "return_qty": {
              "type": "integer",
              "format": "int32",
              "description": "Количество возвращённого товара."
            }
          }
        },
        "FinanceRealizationReportResult": {
          "type": "object",
          "properties": {
            "header": {
              "description": "Титульный лист отчёта.",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/FinanceRealizationReportHeader"
              }
            },
            "rows": {
              "description": "Таблица отчёта.",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/FinanceRealizationReportRows"
              }
            }
          }
        },
        "financeGetRealizationReportResponse": {
          "type": "object",
          "properties": {
            "result": {
              "description": "Результат запроса.",
              "items": {
                "$ref": "#/components/schemas/FinanceRealizationReportResult"
              }
            }
          }
        },
        "FilterPeriod": {
          "properties": {
            "from": {
              "format": "date-time",
              "type": "string",
              "description": "Начало периода.\n\nФормат: `YYYY-MM-DDTHH:mm:ss.sssZ`.<br>\nПример: `2019-11-25T10:43:06.51`.\n"
            },
            "to": {
              "format": "date-time",
              "type": "string",
              "description": "Конец периода.\n\nФормат: `YYYY-MM-DDTHH:mm:ss.sssZ`.<br>\nПример: `2019-11-25T10:43:06.51`.\n"
            }
          },
          "type": "object",
          "description": "Фильтр по дате."
        },
        "FinanceTransactionListV3RequestFilter": {
          "properties": {
            "date": {
              "$ref": "#/components/schemas/FilterPeriod"
            },
            "operation_type": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "Тип операции:\n  - `ClientReturnAgentOperation` — получение возврата, отмены, невыкупа от покупателя;\n  - `MarketplaceMarketingActionCostOperation` — услуги продвижения товаров;\n  - `MarketplaceSaleReviewsOperation` — приобретение отзывов на платформе;\n  - `MarketplaceSellerCompensationOperation` — прочие компенсации;\n  - `OperationAgentDeliveredToCustomer` — доставка покупателю;\n  - `OperationAgentDeliveredToCustomerCanceled` — доставка покупателю — исправленное начисление;\n  - `OperationAgentStornoDeliveredToCustomer` — доставка покупателю — отмена начисления;\n  - `OperationClaim` — начисление по претензии;\n  - `OperationCorrectionSeller` — инвентаризация взаиморасчетов;\n  - `OperationDefectiveWriteOff` — компенсация за повреждённый на складе товар;\n  - `OperationItemReturn` — доставка и обработка возврата, отмены, невыкупа;\n  - `OperationLackWriteOff` — компенсация за утерянный на складе товар;\n  - `OperationMarketplaceCrossDockServiceWriteOff` — доставка товаров на склад Ozon (кросс-докинг);\n  - `OperationMarketplaceServiceStorage` — услуга размещения товаров на складе;\n  - `OperationSetOff` — взаимозачёт с другими договорами контрагента;\n  - `MarketplaceSellerReexposureDeliveryReturnOperation` — перечисление за доставку от покупателя;\n  - `OperationReturnGoodsFBSofRMS` — доставка и обработка возврата, отмены, невыкупа;\n  - `ReturnAgentOperationRFBS` — возврат перечисления за доставку покупателю;\n  - `MarketplaceSellerShippingCompensationReturnOperation` — компенсация перечисления за доставку;\n  - `OperationMarketplaceServicePremiumCashback` — услуга продвижения Premium;\n  - `MarketplaceServicePremiumPromotion` — услуга продвижения Premium, фиксированная комиссия;\n  - `MarketplaceRedistributionOfAcquiringOperation` — оплата эквайринга;\n  - `MarketplaceReturnStorageServiceAtThePickupPointFbsItem` — краткосрочное размещение возврата FBS;\n  - `MarketplaceReturnStorageServiceInTheWarehouseFbsItem` — долгосрочное размещение возврата FBS;\n  - `MarketplaceServiceItemDeliveryKGT` — доставка КГТ;\n  - `MarketplaceServiceItemDirectFlowLogistic` — логистика;\n  - `MarketplaceServiceItemReturnFlowLogistic` — обратная логистика;\n  - `MarketplaceServicePremiumCashbackIndividualPoints` — услуга продвижения «Бонусы продавца»;\n  - `OperationMarketplaceWithHoldingForUndeliverableGoods` — удержание за недовложение товара.\n"
            },
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            },
            "transaction_type": {
              "type": "string",
              "description": "Тип начисления:\n  - `all` — все,\n  - `orders` — заказы,\n  - `returns` — возвраты и отмены,\n  - `services` — сервисные сборы,\n  - `compensation` — компенсация,\n  - `transferDelivery` — стоимость доставки,\n  - `other` — прочее.\n\nНекоторые операции могут быть разделены во времени. Например, при приёме возврата от покупателя списывается стоимость товара и возвращается комиссия, а когда товар возвращается на склад, взимается стоимость услуга по обработке возврата.\n"
            }
          },
          "type": "object",
          "description": "Фильтр."
        },
        "financev3FinanceTransactionListV3Request": {
          "properties": {
            "filter": {
              "$ref": "#/components/schemas/FinanceTransactionListV3RequestFilter"
            },
            "page": {
              "format": "int64",
              "type": "integer",
              "description": "Номер страницы, возвращаемой в запросе."
            },
            "page_size": {
              "format": "int64",
              "type": "integer",
              "description": "Количество элементов на странице."
            }
          },
          "type": "object"
        },
        "OperationItem": {
          "properties": {
            "name": {
              "type": "string",
              "description": "Название товара."
            },
            "sku": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор товара в системе Ozon."
            }
          },
          "type": "object"
        },
        "OperationPosting": {
          "properties": {
            "delivery_schema": {
              "type": "string",
              "description": "Схема доставки:\n  - `FBO` — доставка со склада Ozon,\n  - `FBS` — доставка со своего склада,\n  - `RFBS` — доставка по выбору продавца,\n  - `Crossborder` — доставка из-за рубежа.\n"
            },
            "order_date": {
              "type": "string",
              "description": "Дата принятия отправления в обработку."
            },
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            },
            "warehouse_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор склада."
            }
          },
          "type": "object",
          "description": "Информация об отправлении."
        },
        "OperationService": {
          "properties": {
            "name": {
              "type": "string",
              "description": "Название услуги:\n  - `MarketplaceNotDeliveredCostItem` — возврат невостребованного товара от покупателя на склад.\n  - `MarketplaceReturnAfterDeliveryCostItem` — возврат от покупателя на склад после доставки.\n  - `MarketplaceDeliveryCostItem` — доставка товара до покупателя.\n  - `MarketplaceSaleReviewsItem` — приобретение отзывов на платформе.\n  - `ItemAdvertisementForSupplierLogistic` — доставка товаров на склад Ozon — кросс-докинг.\n  - `MarketplaceServiceStorageItem` — размещения товаров.\n  - `MarketplaceMarketingActionCostItem` — продвижение товаров.\n  - `MarketplaceServiceItemInstallment` — продвижениe и продажа в рассрочку.\n  - `MarketplaceServiceItemMarkingItems` — обязательная маркировка товаров.\n  - `MarketplaceServiceItemFlexiblePaymentSchedule` — гибкий график выплат.\n  - `MarketplaceServiceItemReturnFromStock` — комплектация товаров для вывоза продавцом.\n  - `ItemAdvertisementForSupplierLogisticSeller` — транспортно-экспедиционные услуги.\n  - `MarketplaceServiceItemDelivToCustomer` — последняя миля.\n  - `MarketplaceServiceItemDirectFlowTrans` — магистраль.\n  - `MarketplaceServiceItemDropoffFF` — обработка отправления.\n  - `MarketplaceServiceItemDropoffPVZ` — обработка отправления.\n  - `MarketplaceServiceItemDropoffSC` — обработка отправления.\n  - `MarketplaceServiceItemFulfillment` — сборка заказа.\n  - `MarketplaceServiceItemPickup` — выезд транспортного средства по адресу продавца для забора отправлений — Pick-up.\n  - `MarketplaceServiceItemReturnAfterDelivToCustomer` — обработка возврата.\n  - `MarketplaceServiceItemReturnFlowTrans` — обратная магистраль.\n  - `MarketplaceServiceItemReturnNotDelivToCustomer` — обработка отмен.\n  - `MarketplaceServiceItemReturnPartGoodsCustomer` — обработка невыкупа.\n  - `MarketplaceRedistributionOfAcquiringOperation` — оплата эквайринга.\n  - `MarketplaceReturnStorageServiceAtThePickupPointFbsItem` — краткосрочное размещение возврата FBS.\n  - `MarketplaceReturnStorageServiceInTheWarehouseFbsItem` — долгосрочное размещение возврата FBS.\n  - `MarketplaceServiceItemDeliveryKGT` — доставка крупногабаритного товара (КГТ).\n  - `MarketplaceServiceItemDirectFlowLogistic` — логистика.\n  - `MarketplaceServiceItemReturnFlowLogistic` — обратная логистика.\n  - `MarketplaceServicePremiumCashbackIndividualPoints` — услуга продвижения «Бонусы продавца».\n  - `MarketplaceServicePremiumPromotion` — услуга продвижение Premium, фиксированная комиссия.\n  - `OperationMarketplaceWithHoldingForUndeliverableGoods` — удержание за недовложение товара.\n"
            },
            "price": {
              "format": "double",
              "type": "number",
              "description": "Цена."
            }
          },
          "type": "object"
        },
        "FinanceTransactionListV3ResponseOperation": {
          "properties": {
            "accruals_for_sale": {
              "format": "double",
              "type": "number",
              "description": "Стоимость товаров с учётом скидок продавца."
            },
            "amount": {
              "format": "double",
              "type": "number",
              "description": "Итоговая сумма операции."
            },
            "delivery_charge": {
              "format": "double",
              "type": "number",
              "description": "Стоимость доставки для начислений по тарифам, которые действовали до 1 февраля 2021 года, а также начислений для крупногабаритных товаров."
            },
            "items": {
              "items": {
                "$ref": "#/components/schemas/OperationItem"
              },
              "type": "array",
              "description": "Информация о товаре."
            },
            "operation_date": {
              "type": "string",
              "description": "Дата операции."
            },
            "operation_id": {
              "format": "int64",
              "type": "integer",
              "description": "Идентификатор операции."
            },
            "operation_type": {
              "type": "string",
              "description": "Тип операции."
            },
            "operation_type_name": {
              "type": "string",
              "description": "Название типа операции."
            },
            "posting": {
              "$ref": "#/components/schemas/OperationPosting"
            },
            "return_delivery_charge": {
              "format": "double",
              "type": "number",
              "description": "Плата за возвраты и отмены для начислений по тарифам, которые действовали до 1 февраля 2021 года, а также начислений для крупногабаритных товаров."
            },
            "sale_commission": {
              "format": "double",
              "type": "number",
              "description": "Комиссия за продажу или возврат комиссии за продажу."
            },
            "services": {
              "items": {
                "$ref": "#/components/schemas/OperationService"
              },
              "type": "array",
              "description": "Дополнительные услуги."
            },
            "type": {
              "type": "string",
              "description": "Тип начисления:\n- `all` — все,\n- `orders` — заказы,\n- `returns` — возвраты и отмены,\n- `services` — сервисные сборы,\n- `compensation` — компенсация,\n- `transferDelivery` — стоимость доставки,\n- `other` — прочее.\n"
            }
          },
          "type": "object"
        },
        "financev3FinanceTransactionListV3ResponseResult": {
          "properties": {
            "operations": {
              "items": {
                "$ref": "#/components/schemas/FinanceTransactionListV3ResponseOperation"
              },
              "type": "array",
              "description": "Информация об операциях."
            },
            "page_count": {
              "format": "int64",
              "type": "integer",
              "description": "Количество страниц."
            },
            "row_count": {
              "format": "int64",
              "type": "integer",
              "description": "Количество товаров."
            }
          },
          "type": "object",
          "description": "Результаты запроса."
        },
        "financev3FinanceTransactionListV3Response": {
          "properties": {
            "result": {
              "$ref": "#/components/schemas/financev3FinanceTransactionListV3ResponseResult"
            }
          },
          "type": "object"
        },
        "FinanceTransactionTotalsV3RequestDate": {
          "properties": {
            "from": {
              "format": "date-time",
              "type": "string",
              "description": "Начало периода.\n\nФормат: `YYYY-MM-DDTHH:mm:ss.sssZ`.<br>\nПример: `2019-11-25T10:43:06.51`.\n"
            },
            "to": {
              "format": "date-time",
              "type": "string",
              "description": "Конец периода.\n\nФормат: `YYYY-MM-DDTHH:mm:ss.sssZ`.<br>\nПример: `2019-11-25T10:43:06.51`.\n"
            }
          },
          "type": "object",
          "description": "Фильтр по дате."
        },
        "financev3FinanceTransactionTotalsV3Request": {
          "properties": {
            "date": {
              "$ref": "#/components/schemas/FinanceTransactionTotalsV3RequestDate"
            },
            "posting_number": {
              "type": "string",
              "description": "Номер отправления."
            },
            "transaction_type": {
              "type": "string",
              "description": "Тип операции:\n - `all` — все,\n - `orders` — заказы,\n - `returns` — возвраты и отмены,\n - `services` — сервисные сборы,\n - `compensation` — компенсация,\n - `transferDelivery` — стоимость доставки,\n - `other` — прочее.\n"
            }
          },
          "type": "object"
        },
        "financev3FinanceTransactionTotalsV3ResponseResult": {
          "properties": {
            "accruals_for_sale": {
              "format": "double",
              "type": "number",
              "description": "Общая стоимость товаров и возвратов в заданный период."
            },
            "compensation_amount": {
              "format": "double",
              "type": "number",
              "description": "Компенсации."
            },
            "money_transfer": {
              "format": "double",
              "type": "number",
              "description": "Начисления за доставку и возвраты при работе по схеме «Доставка по выбору продавца»."
            },
            "others_amount": {
              "format": "double",
              "type": "number",
              "description": "Прочие начисления."
            },
            "processing_and_delivery": {
              "format": "double",
              "type": "number",
              "description": "Стоимость услуг обработки отправлений, сборки заказов, магистрали и последней мили, а также доставки до введения новых комиссий и тарифов с 1 февраля 2021 года.\n\nМагистраль — доставка товаров между кластерами.\n\nПоследняя миля — доставка товаров покупателю в пункт выдачи заказов, постамат или курьером.\n"
            },
            "refunds_and_cancellations": {
              "format": "double",
              "type": "number",
              "description": "Стоимость обратной магистрали, обработки возвратов, отмен и невыкупа товара, а также возвратов до введения новых комиссий и тарифов с 1 февраля 2021 года.\n\nМагистраль — доставка товаров между кластерами.\n\nПоследняя миля — доставка товаров покупателю в пункт выдачи заказов, постамат или курьером.\n"
            },
            "sale_commission": {
              "format": "double",
              "type": "number",
              "description": "Сумма комиссии, которая была удержана при продаже товара и возвращена при его возврате."
            },
            "services_amount": {
              "format": "double",
              "type": "number",
              "description": "Стоимость дополнительных услуг, не связанных напрямую с доставками и возвратами товаров. Например, продвижения или размещения товаров."
            }
          },
          "type": "object",
          "description": "Результаты запроса."
        },
        "financev3FinanceTransactionTotalsV3Response": {
          "properties": {
            "result": {
              "$ref": "#/components/schemas/financev3FinanceTransactionTotalsV3ResponseResult"
            }
          },
          "type": "object"
        },
        "RatingItemChange": {
          "type": "object",
          "description": "Изменение рейтинга: отношение предыдущего значения к текущему.\n",
          "properties": {
            "direction": {
              "description": "Как изменилось значение рейтинга:\n- `DIRECTION_UNKNOWN` — не определено.\n- `DIRECTION_NONE` — не изменилось.\n- `DIRECTION_RISE` — выросло.\n- `DIRECTION_FALL` — упало.\n",
              "type": "string"
            },
            "meaning": {
              "description": "Что означает изменение:\n- `MEANING_UNKNOWN` — неизвестно.\n- `MEANING_NONE` — нейтрально.\n- `MEANING_GOOD` — показатель улучшается, всё хорошо.\n- `MEANING_BAD` — показатель падает, нужно что-то сделать.\n",
              "type": "string"
            }
          }
        },
        "v1RatingItem": {
          "type": "object",
          "properties": {
            "change": {
              "$ref": "#/components/schemas/RatingItemChange"
            },
            "current_value": {
              "description": "Текущее значение рейтинга.",
              "type": "number",
              "format": "double"
            },
            "name": {
              "description": "Название рейтинга.",
              "type": "string"
            },
            "past_value": {
              "description": "Предыдущее значение рейтинга.",
              "type": "number",
              "format": "double"
            },
            "rating": {
              "description": "Название рейтинга в системе.",
              "type": "string"
            },
            "rating_direction": {
              "description": "Каким должно быть значение рейтинга, чтобы оно считалось хорошим:\n- `UNKNOWN_DIRECTION` — не определено.\n- `NEUTRAL` — неважно.\n- `HIGHER_IS_BETTER` — чем выше, тем лучше.\n- `LOWER_IS_BETTER` — чем ниже, тем лучше.\n",
              "type": "string"
            },
            "status": {
              "description": "Статус рейтинга:\n- `UNKNOWN_STATUS` — не определён.\n- `OK` — все хорошо.\n- `WARNING` — показатели требуют внимания.\n- `CRITICAL` — критичный рейтинг.\n",
              "type": "string"
            },
            "value_type": {
              "description": "Тип значения:\n- `UNKNOWN_VALUE` — не определён.\n- `INDEX` — индекс.\n- `PERCENT` — процент.\n- `TIME` — время.\n- `RATIO` — коэффициент.\n- `REVIEW_SCORE` — оценка.\n- `COUNT` — счёт.\n",
              "type": "string"
            }
          }
        },
        "RatingSummaryV1ResponseGroup": {
          "type": "object",
          "properties": {
            "group_name": {
              "description": "Название группы рейтингов.",
              "type": "string"
            },
            "items": {
              "description": "Список рейтингов.",
              "items": {
                "$ref": "#/components/schemas/v1RatingItem"
              }
            }
          }
        },
        "v1RatingSummaryV1Response": {
          "type": "object",
          "properties": {
            "groups": {
              "description": "Список с группами рейтингов.",
              "items": {
                "$ref": "#/components/schemas/RatingSummaryV1ResponseGroup"
              }
            },
            "penalty_score_exceeded": {
              "description": "Признак, что баланс штрафных баллов превышен.",
              "type": "boolean"
            },
            "premium": {
              "description": "Признак участия в Premium-программе.",
              "type": "boolean"
            }
          }
        },
        "v1RatingHistoryV1Request": {
          "type": "object",
          "properties": {
            "date_from": {
              "description": "Начало периода.",
              "type": "string",
              "format": "date-time"
            },
            "date_to": {
              "description": "Конец периода.",
              "type": "string",
              "format": "date-time"
            },
            "ratings": {
              "description": "Фильтр по рейтингу.\n\nРейтинги, по которым нужно получить значение за период:\n\n- `rating_on_time` — процент заказов, выполненных вовремя за последние 30 дней.\n- `rating_review_avg_score_total` — средняя оценка всех товаров.\n- `rating_price` — индекс цен: отношение стоимости ваших товаров к самой низкой цене на такой же товар на других площадках.\n- `rating_order_cancellation` — процент отмен FBS-отправлений по вашей вине за последние 7 дней. Текущий и предыдущий день не учитываются.\n- `rating_shipment_delay` — процент FBS-отправлений, которые за последние 7 дней не были переданы в доставку по вашей вине. Текущий и предыдущий день не учитываются.\n- `rating_ssl` — оценка работы по FBO. Учитывает `rating_on_time_supply_delivery`, `rating_on_time_supply_cancellation` и `rating_order_accuracy`.\n- `rating_on_time_supply_delivery` — процент поставок, которые вы привезли на склад в выбранный временной интервал за последние 60 дней.\n- `rating_order_accuracy` — процент поставок без излишков, недостач, пересорта и брака за последние 60 дней.\n- `rating_on_time_supply_cancellation` — процент заявок на поставку, которые завершились или были отменены без опоздания за последние 60 дней.\n- `rating_reaction_time` — время, в течение которого покупатели в среднем ждали ответа на своё первое сообщение в чате за последние 30 дней.\n- `rating_average_response_time` — время, в течение которого покупатели в среднем ждали вашего ответа за последние 30 дней.\n- `rating_replied_dialogs_ratio` — доля диалогов хотя бы с одним вашим ответом в течение 24 часов за последние 30 дней.\n\nЕсли вы хотите получить информацию по начисленным штрафным баллам для рейтингов `rating_on_time` и `rating_review_avg_score_total`,\nпередайте значения нужных рейтингов в этом параметре и `with_premium_scores=true`.\n",
              "items": {
                "type": "string"
              }
            },
            "with_premium_scores": {
              "description": "Признак, что в ответе нужно вернуть информацию о штрафных баллах в Premium-программе.",
              "type": "boolean"
            }
          },
          "required": ["ratings"]
        },
        "PremiumScoresScore": {
          "type": "object",
          "properties": {
            "date": {
              "type": "string",
              "format": "date-time",
              "description": "Дата, когда были начислены штрафные баллы."
            },
            "rating_value": {
              "type": "number",
              "format": "double",
              "description": "Значение рейтинга, за которое были начислены штрафные баллы."
            },
            "value": {
              "type": "integer",
              "format": "int32",
              "description": "Количество начисленных штрафных баллов."
            }
          }
        },
        "v1PremiumScores": {
          "type": "object",
          "properties": {
            "rating": {
              "description": "Название рейтинга.",
              "type": "string"
            },
            "scores": {
              "description": "Информация о штрафных баллах.",
              "items": {
                "$ref": "#/components/schemas/PremiumScoresScore"
              }
            }
          }
        },
        "v1RatingStatus": {
          "type": "object",
          "description": "Статус рейтинга.",
          "properties": {
            "danger": {
              "type": "boolean",
              "description": "Признак, превышено ли пороговое значение рейтинга для блокировки."
            },
            "premium": {
              "type": "boolean",
              "description": "Признак, достигнуто ли пороговое значение для участия в Premium-программе."
            },
            "warning": {
              "type": "boolean",
              "description": "Признак наличия предупреждения о возможном превышении порогового значения для блокировки."
            }
          }
        },
        "RatingValue": {
          "type": "object",
          "properties": {
            "date_from": {
              "type": "string",
              "format": "date-time",
              "description": "Дата начала подсчёта рейтинга."
            },
            "date_to": {
              "type": "string",
              "format": "date-time",
              "description": "Дата конца подсчёта рейтинга."
            },
            "status": {
              "$ref": "#/components/schemas/v1RatingStatus"
            },
            "value": {
              "type": "number",
              "format": "double",
              "description": "Значение рейтинга."
            }
          }
        },
        "v1Rating": {
          "type": "object",
          "properties": {
            "danger_threshold": {
              "type": "number",
              "format": "double",
              "description": "Пороговое значение рейтинга, после которого продажи будут заблокированы."
            },
            "premium_threshold": {
              "type": "number",
              "format": "double",
              "description": "Пороговое значение рейтинга для участия в Premium-программе."
            },
            "rating": {
              "type": "string",
              "description": "Системное название рейтинга."
            },
            "values": {
              "description": "Список значений рейтинга.",
              "items": {
                "$ref": "#/components/schemas/RatingValue"
              }
            },
            "warning_threshold": {
              "type": "number",
              "format": "double",
              "description": "Пороговое значение рейтинга, после которого появится предупреждение о возможной блокировке."
            }
          }
        },
        "v1RatingHistoryV1Response": {
          "type": "object",
          "properties": {
            "premium_scores": {
              "description": "Информация о штрафных баллах в Premium-программе.",
              "items": {
                "$ref": "#/components/schemas/v1PremiumScores"
              }
            },
            "ratings": {
              "description": "Информация о рейтингах продавца.",
              "items": {
                "$ref": "#/components/schemas/v1Rating"
              }
            }
          }
        }
      },
      "requestBodies": {
        "v1StrategyRequest": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1StrategyRequest"
              }
            }
          },
          "required": true
        },
        "v1ItemIDsRequest": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1ItemIDsRequest"
              }
            }
          },
          "required": true
        }
      }
    }
  }
  